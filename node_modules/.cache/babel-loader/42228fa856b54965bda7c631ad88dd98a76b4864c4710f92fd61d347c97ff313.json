{"ast":null,"code":"import { Player, start } from \"tone\";\nlet players;\nexport const initMusic = async () => {\n  await Tone.start();\n  if (!players) {\n    players = {\n      intro: new Tone.Player(\"/intro.mp3\").toDestination(),\n      section1: new Tone.Player(\"/section1.mp3\").toDestination(),\n      section2: new Tone.Player(\"/section2.mp3\").toDestination()\n    };\n\n    // Ждём загрузки всех плееров\n    await Promise.all(Object.values(players).map(player => new Promise(resolve => {\n      player.onload = resolve;\n    })));\n\n    // Устанавливаем повторение и запускаем intro\n    Object.values(players).forEach(p => p.loop = true);\n    players.intro.start();\n  }\n};\nexport const switchMusic = section => {\n  if (!players) return;\n  Object.entries(players).forEach(([key, player]) => {\n    if (key === section) {\n      if (player.state !== \"started\") player.start();\n    } else {\n      if (player.state === \"started\") player.stop();\n    }\n  });\n};","map":{"version":3,"names":["Player","start","players","initMusic","Tone","intro","toDestination","section1","section2","Promise","all","Object","values","map","player","resolve","onload","forEach","p","loop","switchMusic","section","entries","key","state","stop"],"sources":["C:/Users/srk/Downloads/arq_phantom_clone/src/components/MusicPlayer.js"],"sourcesContent":["import { Player, start } from \"tone\";\n\nlet players;\n\nexport const initMusic = async () => {\n  await Tone.start();\n\n  if (!players) {\n    players = {\n      intro: new Tone.Player(\"/intro.mp3\").toDestination(),\n      section1: new Tone.Player(\"/section1.mp3\").toDestination(),\n      section2: new Tone.Player(\"/section2.mp3\").toDestination(),\n    };\n\n    // Ждём загрузки всех плееров\n    await Promise.all(\n      Object.values(players).map(\n        (player) =>\n          new Promise((resolve) => {\n            player.onload = resolve;\n          })\n      )\n    );\n\n    // Устанавливаем повторение и запускаем intro\n    Object.values(players).forEach((p) => (p.loop = true));\n    players.intro.start();\n  }\n};\n\nexport const switchMusic = (section) => {\n  if (!players) return;\n\n  Object.entries(players).forEach(([key, player]) => {\n    if (key === section) {\n      if (player.state !== \"started\") player.start();\n    } else {\n      if (player.state === \"started\") player.stop();\n    }\n  });\n};"],"mappings":"AAAA,SAASA,MAAM,EAAEC,KAAK,QAAQ,MAAM;AAEpC,IAAIC,OAAO;AAEX,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;EACnC,MAAMC,IAAI,CAACH,KAAK,CAAC,CAAC;EAElB,IAAI,CAACC,OAAO,EAAE;IACZA,OAAO,GAAG;MACRG,KAAK,EAAE,IAAID,IAAI,CAACJ,MAAM,CAAC,YAAY,CAAC,CAACM,aAAa,CAAC,CAAC;MACpDC,QAAQ,EAAE,IAAIH,IAAI,CAACJ,MAAM,CAAC,eAAe,CAAC,CAACM,aAAa,CAAC,CAAC;MAC1DE,QAAQ,EAAE,IAAIJ,IAAI,CAACJ,MAAM,CAAC,eAAe,CAAC,CAACM,aAAa,CAAC;IAC3D,CAAC;;IAED;IACA,MAAMG,OAAO,CAACC,GAAG,CACfC,MAAM,CAACC,MAAM,CAACV,OAAO,CAAC,CAACW,GAAG,CACvBC,MAAM,IACL,IAAIL,OAAO,CAAEM,OAAO,IAAK;MACvBD,MAAM,CAACE,MAAM,GAAGD,OAAO;IACzB,CAAC,CACL,CACF,CAAC;;IAED;IACAJ,MAAM,CAACC,MAAM,CAACV,OAAO,CAAC,CAACe,OAAO,CAAEC,CAAC,IAAMA,CAAC,CAACC,IAAI,GAAG,IAAK,CAAC;IACtDjB,OAAO,CAACG,KAAK,CAACJ,KAAK,CAAC,CAAC;EACvB;AACF,CAAC;AAED,OAAO,MAAMmB,WAAW,GAAIC,OAAO,IAAK;EACtC,IAAI,CAACnB,OAAO,EAAE;EAEdS,MAAM,CAACW,OAAO,CAACpB,OAAO,CAAC,CAACe,OAAO,CAAC,CAAC,CAACM,GAAG,EAAET,MAAM,CAAC,KAAK;IACjD,IAAIS,GAAG,KAAKF,OAAO,EAAE;MACnB,IAAIP,MAAM,CAACU,KAAK,KAAK,SAAS,EAAEV,MAAM,CAACb,KAAK,CAAC,CAAC;IAChD,CAAC,MAAM;MACL,IAAIa,MAAM,CAACU,KAAK,KAAK,SAAS,EAAEV,MAAM,CAACW,IAAI,CAAC,CAAC;IAC/C;EACF,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}