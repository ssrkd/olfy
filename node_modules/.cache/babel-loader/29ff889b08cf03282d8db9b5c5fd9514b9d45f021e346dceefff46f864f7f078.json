{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srk\\\\Downloads\\\\arq_phantom_clone\\\\src\\\\components\\\\Carousel3D.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as THREE from 'three';\nimport { CSS2DRenderer, CSS2DObject } from 'three/examples/jsm/renderers/CSS2DRenderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst media = [{\n  type: 'image',\n  url: 'https://picsum.photos/300/200?random=1',\n  title: 'Mountains'\n}, {\n  type: 'image',\n  url: 'https://picsum.photos/300/200?random=2',\n  title: 'Desert'\n}, {\n  type: 'image',\n  url: 'https://picsum.photos/300/200?random=3',\n  title: 'Ocean'\n}, {\n  type: 'video',\n  url: '/assets/video1.mp4',\n  title: 'Showreel'\n}, {\n  type: 'image',\n  url: 'https://picsum.photos/300/200?random=4',\n  title: 'Woods'\n}, {\n  type: 'image',\n  url: 'https://picsum.photos/300/200?random=5',\n  title: 'River'\n}, {\n  type: 'video',\n  url: '/assets/video2.mp4',\n  title: 'Motion'\n}];\nconst Carousel3D = () => {\n  _s();\n  const mountRef = useRef();\n  const [hovered, setHovered] = useState(null);\n  useEffect(() => {\n    const width = mountRef.current.clientWidth;\n    const height = mountRef.current.clientHeight;\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x000000);\n    scene.fog = new THREE.Fog(0x000000, 20, 40);\n    const camera = new THREE.PerspectiveCamera(60, width / height, 0.1, 1000);\n    camera.position.set(0, 0, 20);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(width, height);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // CSS renderer\n    const labelRenderer = new CSS2DRenderer();\n    labelRenderer.setSize(width, height);\n    labelRenderer.domElement.style.position = 'absolute';\n    labelRenderer.domElement.style.top = '0';\n    mountRef.current.appendChild(labelRenderer.domElement);\n    const ambientLight = new THREE.AmbientLight(0xffffff, 1.5);\n    scene.add(ambientLight);\n    const raycaster = new THREE.Raycaster();\n    const mouse = new THREE.Vector2();\n    const itemsPerRow = 5;\n    const radius = 12;\n    const meshes = [];\n    const textureLoader = new THREE.TextureLoader();\n    const createLabel = text => {\n      const div = document.createElement('div');\n      div.className = 'label';\n      div.textContent = text;\n      div.style.color = 'white';\n      div.style.fontSize = '14px';\n      div.style.marginTop = '5px';\n      return new CSS2DObject(div);\n    };\n    const loadMedia = async () => {\n      const geometry = new THREE.PlaneGeometry(4, 2.5);\n      await Promise.all(media.map((item, i) => {\n        return new Promise(resolve => {\n          let material;\n          if (item.type === 'image') {\n            textureLoader.load(item.url, texture => {\n              material = new THREE.MeshBasicMaterial({\n                map: texture\n              });\n              createMesh(material);\n            });\n          } else if (item.type === 'video') {\n            const video = document.createElement('video');\n            video.src = item.url;\n            video.crossOrigin = 'anonymous';\n            video.loop = true;\n            video.muted = true;\n            video.playsInline = true;\n            video.autoplay = true;\n            video.play();\n            const texture = new THREE.VideoTexture(video);\n            material = new THREE.MeshBasicMaterial({\n              map: texture\n            });\n            createMesh(material);\n          }\n          function createMesh(material) {\n            const mesh = new THREE.Mesh(geometry, material);\n            const row = Math.floor(i / itemsPerRow);\n            const col = i % itemsPerRow;\n            const angle = (col - (itemsPerRow - 1) / 2) / itemsPerRow * Math.PI;\n            const x = Math.sin(angle) * radius;\n            const z = Math.cos(angle) * radius;\n            const y = 2 - row * 3;\n            mesh.position.set(x, y, z);\n            mesh.rotation.y = angle;\n            mesh.userData.originalScale = new THREE.Vector3(1, 1, 1);\n\n            // Label\n            const label = createLabel(item.title);\n            label.position.set(0, -1.6, 0);\n            mesh.add(label);\n            scene.add(mesh);\n            meshes.push(mesh);\n            resolve();\n          }\n        });\n      }));\n    };\n    loadMedia().then(() => animate());\n    let isDragging = false;\n    let prevMouseX = 0;\n    let prevMouseY = 0;\n    let rotationY = 0;\n    let rotationX = 0;\n    let targetY = 0;\n    let targetX = 0;\n    const onMouseDown = e => {\n      isDragging = true;\n      prevMouseX = e.clientX;\n      prevMouseY = e.clientY;\n    };\n    const onMouseUp = () => {\n      isDragging = false;\n    };\n    const onMouseMove = e => {\n      mouse.x = e.clientX / width * 2 - 1;\n      mouse.y = -(e.clientY / height) * 2 + 1;\n      if (!isDragging) return;\n      const dx = e.clientX - prevMouseX;\n      const dy = e.clientY - prevMouseY;\n      targetY += dx * 0.01;\n      targetX += dy * 0.005;\n      targetX = Math.max(-Math.PI / 6, Math.min(Math.PI / 6, targetX));\n      prevMouseX = e.clientX;\n      prevMouseY = e.clientY;\n    };\n    const animate = () => {\n      requestAnimationFrame(animate);\n      rotationY += (targetY - rotationY) * 0.05;\n      rotationX += (targetX - rotationX) * 0.05;\n      meshes.forEach(mesh => {\n        const original = mesh.userData.originalPosition || mesh.position.clone();\n        if (!mesh.userData.originalPosition) mesh.userData.originalPosition = original.clone();\n        const p = original.clone().applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\n        p.applyAxisAngle(new THREE.Vector3(1, 0, 0), rotationX);\n        mesh.position.copy(p);\n        mesh.lookAt(0, mesh.position.y, 0);\n      });\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(meshes);\n      if (intersects.length > 0) {\n        const mesh = intersects[0].object;\n        if (hovered !== mesh) {\n          meshes.forEach(m => m.scale.copy(m.userData.originalScale));\n          mesh.scale.set(1.1, 1.1, 1.1);\n          setHovered(mesh);\n        }\n      } else {\n        if (hovered) {\n          hovered.scale.copy(hovered.userData.originalScale);\n          setHovered(null);\n        }\n      }\n      renderer.render(scene, camera);\n      labelRenderer.render(scene, camera);\n    };\n\n    // Events\n    renderer.domElement.addEventListener('mousedown', onMouseDown);\n    window.addEventListener('mouseup', onMouseUp);\n    window.addEventListener('mousemove', onMouseMove);\n    const onResize = () => {\n      const width = mountRef.current.clientWidth;\n      const height = mountRef.current.clientHeight;\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      renderer.setSize(width, height);\n      labelRenderer.setSize(width, height);\n    };\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('mouseup', onMouseUp);\n      window.removeEventListener('mousemove', onMouseMove);\n      window.removeEventListener('resize', onResize);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      width: '100%',\n      height: '100vh',\n      overflow: 'hidden',\n      background: '#000',\n      position: 'relative',\n      cursor: 'grab'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n};\n_s(Carousel3D, \"GXkQXCTwX9058gQyMtTfl1fQteE=\");\n_c = Carousel3D;\nexport default Carousel3D;\nvar _c;\n$RefreshReg$(_c, \"Carousel3D\");","map":{"version":3,"names":["React","useEffect","useRef","useState","THREE","CSS2DRenderer","CSS2DObject","jsxDEV","_jsxDEV","media","type","url","title","Carousel3D","_s","mountRef","hovered","setHovered","width","current","clientWidth","height","clientHeight","scene","Scene","background","Color","fog","Fog","camera","PerspectiveCamera","position","set","renderer","WebGLRenderer","antialias","setSize","appendChild","domElement","labelRenderer","style","top","ambientLight","AmbientLight","add","raycaster","Raycaster","mouse","Vector2","itemsPerRow","radius","meshes","textureLoader","TextureLoader","createLabel","text","div","document","createElement","className","textContent","color","fontSize","marginTop","loadMedia","geometry","PlaneGeometry","Promise","all","map","item","i","resolve","material","load","texture","MeshBasicMaterial","createMesh","video","src","crossOrigin","loop","muted","playsInline","autoplay","play","VideoTexture","mesh","Mesh","row","Math","floor","col","angle","PI","x","sin","z","cos","y","rotation","userData","originalScale","Vector3","label","push","then","animate","isDragging","prevMouseX","prevMouseY","rotationY","rotationX","targetY","targetX","onMouseDown","e","clientX","clientY","onMouseUp","onMouseMove","dx","dy","max","min","requestAnimationFrame","forEach","original","originalPosition","clone","p","applyAxisAngle","copy","lookAt","setFromCamera","intersects","intersectObjects","length","object","m","scale","render","addEventListener","window","onResize","aspect","updateProjectionMatrix","removeEventListener","ref","overflow","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/srk/Downloads/arq_phantom_clone/src/components/Carousel3D.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as THREE from 'three';\r\nimport { CSS2DRenderer, CSS2DObject } from 'three/examples/jsm/renderers/CSS2DRenderer';\r\n\r\nconst media = [\r\n  { type: 'image', url: 'https://picsum.photos/300/200?random=1', title: 'Mountains' },\r\n  { type: 'image', url: 'https://picsum.photos/300/200?random=2', title: 'Desert' },\r\n  { type: 'image', url: 'https://picsum.photos/300/200?random=3', title: 'Ocean' },\r\n  { type: 'video', url: '/assets/video1.mp4', title: 'Showreel' },\r\n  { type: 'image', url: 'https://picsum.photos/300/200?random=4', title: 'Woods' },\r\n  { type: 'image', url: 'https://picsum.photos/300/200?random=5', title: 'River' },\r\n  { type: 'video', url: '/assets/video2.mp4', title: 'Motion' },\r\n];\r\n\r\nconst Carousel3D = () => {\r\n  const mountRef = useRef();\r\n  const [hovered, setHovered] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const width = mountRef.current.clientWidth;\r\n    const height = mountRef.current.clientHeight;\r\n\r\n    const scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(0x000000);\r\n    scene.fog = new THREE.Fog(0x000000, 20, 40);\r\n\r\n    const camera = new THREE.PerspectiveCamera(60, width / height, 0.1, 1000);\r\n    camera.position.set(0, 0, 20);\r\n\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(width, height);\r\n    mountRef.current.appendChild(renderer.domElement);\r\n\r\n    // CSS renderer\r\n    const labelRenderer = new CSS2DRenderer();\r\n    labelRenderer.setSize(width, height);\r\n    labelRenderer.domElement.style.position = 'absolute';\r\n    labelRenderer.domElement.style.top = '0';\r\n    mountRef.current.appendChild(labelRenderer.domElement);\r\n\r\n    const ambientLight = new THREE.AmbientLight(0xffffff, 1.5);\r\n    scene.add(ambientLight);\r\n\r\n    const raycaster = new THREE.Raycaster();\r\n    const mouse = new THREE.Vector2();\r\n\r\n    const itemsPerRow = 5;\r\n    const radius = 12;\r\n    const meshes = [];\r\n\r\n    const textureLoader = new THREE.TextureLoader();\r\n\r\n    const createLabel = (text) => {\r\n      const div = document.createElement('div');\r\n      div.className = 'label';\r\n      div.textContent = text;\r\n      div.style.color = 'white';\r\n      div.style.fontSize = '14px';\r\n      div.style.marginTop = '5px';\r\n      return new CSS2DObject(div);\r\n    };\r\n\r\n    const loadMedia = async () => {\r\n      const geometry = new THREE.PlaneGeometry(4, 2.5);\r\n\r\n      await Promise.all(\r\n        media.map((item, i) => {\r\n          return new Promise((resolve) => {\r\n            let material;\r\n\r\n            if (item.type === 'image') {\r\n              textureLoader.load(item.url, (texture) => {\r\n                material = new THREE.MeshBasicMaterial({ map: texture });\r\n                createMesh(material);\r\n              });\r\n            } else if (item.type === 'video') {\r\n              const video = document.createElement('video');\r\n              video.src = item.url;\r\n              video.crossOrigin = 'anonymous';\r\n              video.loop = true;\r\n              video.muted = true;\r\n              video.playsInline = true;\r\n              video.autoplay = true;\r\n              video.play();\r\n\r\n              const texture = new THREE.VideoTexture(video);\r\n              material = new THREE.MeshBasicMaterial({ map: texture });\r\n              createMesh(material);\r\n            }\r\n\r\n            function createMesh(material) {\r\n              const mesh = new THREE.Mesh(geometry, material);\r\n\r\n              const row = Math.floor(i / itemsPerRow);\r\n              const col = i % itemsPerRow;\r\n              const angle = ((col - (itemsPerRow - 1) / 2) / itemsPerRow) * Math.PI;\r\n              const x = Math.sin(angle) * radius;\r\n              const z = Math.cos(angle) * radius;\r\n              const y = 2 - row * 3;\r\n\r\n              mesh.position.set(x, y, z);\r\n              mesh.rotation.y = angle;\r\n              mesh.userData.originalScale = new THREE.Vector3(1, 1, 1);\r\n\r\n              // Label\r\n              const label = createLabel(item.title);\r\n              label.position.set(0, -1.6, 0);\r\n              mesh.add(label);\r\n\r\n              scene.add(mesh);\r\n              meshes.push(mesh);\r\n              resolve();\r\n            }\r\n          });\r\n        })\r\n      );\r\n    };\r\n\r\n    loadMedia().then(() => animate());\r\n\r\n    let isDragging = false;\r\n    let prevMouseX = 0;\r\n    let prevMouseY = 0;\r\n    let rotationY = 0;\r\n    let rotationX = 0;\r\n    let targetY = 0;\r\n    let targetX = 0;\r\n\r\n    const onMouseDown = (e) => {\r\n      isDragging = true;\r\n      prevMouseX = e.clientX;\r\n      prevMouseY = e.clientY;\r\n    };\r\n\r\n    const onMouseUp = () => {\r\n      isDragging = false;\r\n    };\r\n\r\n    const onMouseMove = (e) => {\r\n      mouse.x = (e.clientX / width) * 2 - 1;\r\n      mouse.y = -(e.clientY / height) * 2 + 1;\r\n\r\n      if (!isDragging) return;\r\n\r\n      const dx = e.clientX - prevMouseX;\r\n      const dy = e.clientY - prevMouseY;\r\n      targetY += dx * 0.01;\r\n      targetX += dy * 0.005;\r\n      targetX = Math.max(-Math.PI / 6, Math.min(Math.PI / 6, targetX));\r\n\r\n      prevMouseX = e.clientX;\r\n      prevMouseY = e.clientY;\r\n    };\r\n\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n\r\n      rotationY += (targetY - rotationY) * 0.05;\r\n      rotationX += (targetX - rotationX) * 0.05;\r\n\r\n      meshes.forEach((mesh) => {\r\n        const original = mesh.userData.originalPosition || mesh.position.clone();\r\n        if (!mesh.userData.originalPosition) mesh.userData.originalPosition = original.clone();\r\n\r\n        const p = original.clone().applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n        p.applyAxisAngle(new THREE.Vector3(1, 0, 0), rotationX);\r\n        mesh.position.copy(p);\r\n        mesh.lookAt(0, mesh.position.y, 0);\r\n      });\r\n\r\n      raycaster.setFromCamera(mouse, camera);\r\n      const intersects = raycaster.intersectObjects(meshes);\r\n\r\n      if (intersects.length > 0) {\r\n        const mesh = intersects[0].object;\r\n        if (hovered !== mesh) {\r\n          meshes.forEach((m) => m.scale.copy(m.userData.originalScale));\r\n          mesh.scale.set(1.1, 1.1, 1.1);\r\n          setHovered(mesh);\r\n        }\r\n      } else {\r\n        if (hovered) {\r\n          hovered.scale.copy(hovered.userData.originalScale);\r\n          setHovered(null);\r\n        }\r\n      }\r\n\r\n      renderer.render(scene, camera);\r\n      labelRenderer.render(scene, camera);\r\n    };\r\n\r\n    // Events\r\n    renderer.domElement.addEventListener('mousedown', onMouseDown);\r\n    window.addEventListener('mouseup', onMouseUp);\r\n    window.addEventListener('mousemove', onMouseMove);\r\n\r\n    const onResize = () => {\r\n      const width = mountRef.current.clientWidth;\r\n      const height = mountRef.current.clientHeight;\r\n      camera.aspect = width / height;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(width, height);\r\n      labelRenderer.setSize(width, height);\r\n    };\r\n\r\n    window.addEventListener('resize', onResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('mouseup', onMouseUp);\r\n      window.removeEventListener('mousemove', onMouseMove);\r\n      window.removeEventListener('resize', onResize);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      ref={mountRef}\r\n      style={{\r\n        width: '100%',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        background: '#000',\r\n        position: 'relative',\r\n        cursor: 'grab',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Carousel3D;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,EAAEC,WAAW,QAAQ,4CAA4C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExF,MAAMC,KAAK,GAAG,CACZ;EAAEC,IAAI,EAAE,OAAO;EAAEC,GAAG,EAAE,wCAAwC;EAAEC,KAAK,EAAE;AAAY,CAAC,EACpF;EAAEF,IAAI,EAAE,OAAO;EAAEC,GAAG,EAAE,wCAAwC;EAAEC,KAAK,EAAE;AAAS,CAAC,EACjF;EAAEF,IAAI,EAAE,OAAO;EAAEC,GAAG,EAAE,wCAAwC;EAAEC,KAAK,EAAE;AAAQ,CAAC,EAChF;EAAEF,IAAI,EAAE,OAAO;EAAEC,GAAG,EAAE,oBAAoB;EAAEC,KAAK,EAAE;AAAW,CAAC,EAC/D;EAAEF,IAAI,EAAE,OAAO;EAAEC,GAAG,EAAE,wCAAwC;EAAEC,KAAK,EAAE;AAAQ,CAAC,EAChF;EAAEF,IAAI,EAAE,OAAO;EAAEC,GAAG,EAAE,wCAAwC;EAAEC,KAAK,EAAE;AAAQ,CAAC,EAChF;EAAEF,IAAI,EAAE,OAAO;EAAEC,GAAG,EAAE,oBAAoB;EAAEC,KAAK,EAAE;AAAS,CAAC,CAC9D;AAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGb,MAAM,CAAC,CAAC;EACzB,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE5CF,SAAS,CAAC,MAAM;IACd,MAAMiB,KAAK,GAAGH,QAAQ,CAACI,OAAO,CAACC,WAAW;IAC1C,MAAMC,MAAM,GAAGN,QAAQ,CAACI,OAAO,CAACG,YAAY;IAE5C,MAAMC,KAAK,GAAG,IAAInB,KAAK,CAACoB,KAAK,CAAC,CAAC;IAC/BD,KAAK,CAACE,UAAU,GAAG,IAAIrB,KAAK,CAACsB,KAAK,CAAC,QAAQ,CAAC;IAC5CH,KAAK,CAACI,GAAG,GAAG,IAAIvB,KAAK,CAACwB,GAAG,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,CAAC;IAE3C,MAAMC,MAAM,GAAG,IAAIzB,KAAK,CAAC0B,iBAAiB,CAAC,EAAE,EAAEZ,KAAK,GAAGG,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC;IACzEQ,MAAM,CAACE,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;IAE7B,MAAMC,QAAQ,GAAG,IAAI7B,KAAK,CAAC8B,aAAa,CAAC;MAAEC,SAAS,EAAE;IAAK,CAAC,CAAC;IAC7DF,QAAQ,CAACG,OAAO,CAAClB,KAAK,EAAEG,MAAM,CAAC;IAC/BN,QAAQ,CAACI,OAAO,CAACkB,WAAW,CAACJ,QAAQ,CAACK,UAAU,CAAC;;IAEjD;IACA,MAAMC,aAAa,GAAG,IAAIlC,aAAa,CAAC,CAAC;IACzCkC,aAAa,CAACH,OAAO,CAAClB,KAAK,EAAEG,MAAM,CAAC;IACpCkB,aAAa,CAACD,UAAU,CAACE,KAAK,CAACT,QAAQ,GAAG,UAAU;IACpDQ,aAAa,CAACD,UAAU,CAACE,KAAK,CAACC,GAAG,GAAG,GAAG;IACxC1B,QAAQ,CAACI,OAAO,CAACkB,WAAW,CAACE,aAAa,CAACD,UAAU,CAAC;IAEtD,MAAMI,YAAY,GAAG,IAAItC,KAAK,CAACuC,YAAY,CAAC,QAAQ,EAAE,GAAG,CAAC;IAC1DpB,KAAK,CAACqB,GAAG,CAACF,YAAY,CAAC;IAEvB,MAAMG,SAAS,GAAG,IAAIzC,KAAK,CAAC0C,SAAS,CAAC,CAAC;IACvC,MAAMC,KAAK,GAAG,IAAI3C,KAAK,CAAC4C,OAAO,CAAC,CAAC;IAEjC,MAAMC,WAAW,GAAG,CAAC;IACrB,MAAMC,MAAM,GAAG,EAAE;IACjB,MAAMC,MAAM,GAAG,EAAE;IAEjB,MAAMC,aAAa,GAAG,IAAIhD,KAAK,CAACiD,aAAa,CAAC,CAAC;IAE/C,MAAMC,WAAW,GAAIC,IAAI,IAAK;MAC5B,MAAMC,GAAG,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MACzCF,GAAG,CAACG,SAAS,GAAG,OAAO;MACvBH,GAAG,CAACI,WAAW,GAAGL,IAAI;MACtBC,GAAG,CAAChB,KAAK,CAACqB,KAAK,GAAG,OAAO;MACzBL,GAAG,CAAChB,KAAK,CAACsB,QAAQ,GAAG,MAAM;MAC3BN,GAAG,CAAChB,KAAK,CAACuB,SAAS,GAAG,KAAK;MAC3B,OAAO,IAAIzD,WAAW,CAACkD,GAAG,CAAC;IAC7B,CAAC;IAED,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,IAAI7D,KAAK,CAAC8D,aAAa,CAAC,CAAC,EAAE,GAAG,CAAC;MAEhD,MAAMC,OAAO,CAACC,GAAG,CACf3D,KAAK,CAAC4D,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAK;QACrB,OAAO,IAAIJ,OAAO,CAAEK,OAAO,IAAK;UAC9B,IAAIC,QAAQ;UAEZ,IAAIH,IAAI,CAAC5D,IAAI,KAAK,OAAO,EAAE;YACzB0C,aAAa,CAACsB,IAAI,CAACJ,IAAI,CAAC3D,GAAG,EAAGgE,OAAO,IAAK;cACxCF,QAAQ,GAAG,IAAIrE,KAAK,CAACwE,iBAAiB,CAAC;gBAAEP,GAAG,EAAEM;cAAQ,CAAC,CAAC;cACxDE,UAAU,CAACJ,QAAQ,CAAC;YACtB,CAAC,CAAC;UACJ,CAAC,MAAM,IAAIH,IAAI,CAAC5D,IAAI,KAAK,OAAO,EAAE;YAChC,MAAMoE,KAAK,GAAGrB,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;YAC7CoB,KAAK,CAACC,GAAG,GAAGT,IAAI,CAAC3D,GAAG;YACpBmE,KAAK,CAACE,WAAW,GAAG,WAAW;YAC/BF,KAAK,CAACG,IAAI,GAAG,IAAI;YACjBH,KAAK,CAACI,KAAK,GAAG,IAAI;YAClBJ,KAAK,CAACK,WAAW,GAAG,IAAI;YACxBL,KAAK,CAACM,QAAQ,GAAG,IAAI;YACrBN,KAAK,CAACO,IAAI,CAAC,CAAC;YAEZ,MAAMV,OAAO,GAAG,IAAIvE,KAAK,CAACkF,YAAY,CAACR,KAAK,CAAC;YAC7CL,QAAQ,GAAG,IAAIrE,KAAK,CAACwE,iBAAiB,CAAC;cAAEP,GAAG,EAAEM;YAAQ,CAAC,CAAC;YACxDE,UAAU,CAACJ,QAAQ,CAAC;UACtB;UAEA,SAASI,UAAUA,CAACJ,QAAQ,EAAE;YAC5B,MAAMc,IAAI,GAAG,IAAInF,KAAK,CAACoF,IAAI,CAACvB,QAAQ,EAAEQ,QAAQ,CAAC;YAE/C,MAAMgB,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACpB,CAAC,GAAGtB,WAAW,CAAC;YACvC,MAAM2C,GAAG,GAAGrB,CAAC,GAAGtB,WAAW;YAC3B,MAAM4C,KAAK,GAAI,CAACD,GAAG,GAAG,CAAC3C,WAAW,GAAG,CAAC,IAAI,CAAC,IAAIA,WAAW,GAAIyC,IAAI,CAACI,EAAE;YACrE,MAAMC,CAAC,GAAGL,IAAI,CAACM,GAAG,CAACH,KAAK,CAAC,GAAG3C,MAAM;YAClC,MAAM+C,CAAC,GAAGP,IAAI,CAACQ,GAAG,CAACL,KAAK,CAAC,GAAG3C,MAAM;YAClC,MAAMiD,CAAC,GAAG,CAAC,GAAGV,GAAG,GAAG,CAAC;YAErBF,IAAI,CAACxD,QAAQ,CAACC,GAAG,CAAC+D,CAAC,EAAEI,CAAC,EAAEF,CAAC,CAAC;YAC1BV,IAAI,CAACa,QAAQ,CAACD,CAAC,GAAGN,KAAK;YACvBN,IAAI,CAACc,QAAQ,CAACC,aAAa,GAAG,IAAIlG,KAAK,CAACmG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;YAExD;YACA,MAAMC,KAAK,GAAGlD,WAAW,CAACgB,IAAI,CAAC1D,KAAK,CAAC;YACrC4F,KAAK,CAACzE,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;YAC9BuD,IAAI,CAAC3C,GAAG,CAAC4D,KAAK,CAAC;YAEfjF,KAAK,CAACqB,GAAG,CAAC2C,IAAI,CAAC;YACfpC,MAAM,CAACsD,IAAI,CAAClB,IAAI,CAAC;YACjBf,OAAO,CAAC,CAAC;UACX;QACF,CAAC,CAAC;MACJ,CAAC,CACH,CAAC;IACH,CAAC;IAEDR,SAAS,CAAC,CAAC,CAAC0C,IAAI,CAAC,MAAMC,OAAO,CAAC,CAAC,CAAC;IAEjC,IAAIC,UAAU,GAAG,KAAK;IACtB,IAAIC,UAAU,GAAG,CAAC;IAClB,IAAIC,UAAU,GAAG,CAAC;IAClB,IAAIC,SAAS,GAAG,CAAC;IACjB,IAAIC,SAAS,GAAG,CAAC;IACjB,IAAIC,OAAO,GAAG,CAAC;IACf,IAAIC,OAAO,GAAG,CAAC;IAEf,MAAMC,WAAW,GAAIC,CAAC,IAAK;MACzBR,UAAU,GAAG,IAAI;MACjBC,UAAU,GAAGO,CAAC,CAACC,OAAO;MACtBP,UAAU,GAAGM,CAAC,CAACE,OAAO;IACxB,CAAC;IAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;MACtBX,UAAU,GAAG,KAAK;IACpB,CAAC;IAED,MAAMY,WAAW,GAAIJ,CAAC,IAAK;MACzBrE,KAAK,CAACgD,CAAC,GAAIqB,CAAC,CAACC,OAAO,GAAGnG,KAAK,GAAI,CAAC,GAAG,CAAC;MACrC6B,KAAK,CAACoD,CAAC,GAAG,EAAEiB,CAAC,CAACE,OAAO,GAAGjG,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC;MAEvC,IAAI,CAACuF,UAAU,EAAE;MAEjB,MAAMa,EAAE,GAAGL,CAAC,CAACC,OAAO,GAAGR,UAAU;MACjC,MAAMa,EAAE,GAAGN,CAAC,CAACE,OAAO,GAAGR,UAAU;MACjCG,OAAO,IAAIQ,EAAE,GAAG,IAAI;MACpBP,OAAO,IAAIQ,EAAE,GAAG,KAAK;MACrBR,OAAO,GAAGxB,IAAI,CAACiC,GAAG,CAAC,CAACjC,IAAI,CAACI,EAAE,GAAG,CAAC,EAAEJ,IAAI,CAACkC,GAAG,CAAClC,IAAI,CAACI,EAAE,GAAG,CAAC,EAAEoB,OAAO,CAAC,CAAC;MAEhEL,UAAU,GAAGO,CAAC,CAACC,OAAO;MACtBP,UAAU,GAAGM,CAAC,CAACE,OAAO;IACxB,CAAC;IAED,MAAMX,OAAO,GAAGA,CAAA,KAAM;MACpBkB,qBAAqB,CAAClB,OAAO,CAAC;MAE9BI,SAAS,IAAI,CAACE,OAAO,GAAGF,SAAS,IAAI,IAAI;MACzCC,SAAS,IAAI,CAACE,OAAO,GAAGF,SAAS,IAAI,IAAI;MAEzC7D,MAAM,CAAC2E,OAAO,CAAEvC,IAAI,IAAK;QACvB,MAAMwC,QAAQ,GAAGxC,IAAI,CAACc,QAAQ,CAAC2B,gBAAgB,IAAIzC,IAAI,CAACxD,QAAQ,CAACkG,KAAK,CAAC,CAAC;QACxE,IAAI,CAAC1C,IAAI,CAACc,QAAQ,CAAC2B,gBAAgB,EAAEzC,IAAI,CAACc,QAAQ,CAAC2B,gBAAgB,GAAGD,QAAQ,CAACE,KAAK,CAAC,CAAC;QAEtF,MAAMC,CAAC,GAAGH,QAAQ,CAACE,KAAK,CAAC,CAAC,CAACE,cAAc,CAAC,IAAI/H,KAAK,CAACmG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAEQ,SAAS,CAAC;QAChFmB,CAAC,CAACC,cAAc,CAAC,IAAI/H,KAAK,CAACmG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAES,SAAS,CAAC;QACvDzB,IAAI,CAACxD,QAAQ,CAACqG,IAAI,CAACF,CAAC,CAAC;QACrB3C,IAAI,CAAC8C,MAAM,CAAC,CAAC,EAAE9C,IAAI,CAACxD,QAAQ,CAACoE,CAAC,EAAE,CAAC,CAAC;MACpC,CAAC,CAAC;MAEFtD,SAAS,CAACyF,aAAa,CAACvF,KAAK,EAAElB,MAAM,CAAC;MACtC,MAAM0G,UAAU,GAAG1F,SAAS,CAAC2F,gBAAgB,CAACrF,MAAM,CAAC;MAErD,IAAIoF,UAAU,CAACE,MAAM,GAAG,CAAC,EAAE;QACzB,MAAMlD,IAAI,GAAGgD,UAAU,CAAC,CAAC,CAAC,CAACG,MAAM;QACjC,IAAI1H,OAAO,KAAKuE,IAAI,EAAE;UACpBpC,MAAM,CAAC2E,OAAO,CAAEa,CAAC,IAAKA,CAAC,CAACC,KAAK,CAACR,IAAI,CAACO,CAAC,CAACtC,QAAQ,CAACC,aAAa,CAAC,CAAC;UAC7Df,IAAI,CAACqD,KAAK,CAAC5G,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;UAC7Bf,UAAU,CAACsE,IAAI,CAAC;QAClB;MACF,CAAC,MAAM;QACL,IAAIvE,OAAO,EAAE;UACXA,OAAO,CAAC4H,KAAK,CAACR,IAAI,CAACpH,OAAO,CAACqF,QAAQ,CAACC,aAAa,CAAC;UAClDrF,UAAU,CAAC,IAAI,CAAC;QAClB;MACF;MAEAgB,QAAQ,CAAC4G,MAAM,CAACtH,KAAK,EAAEM,MAAM,CAAC;MAC9BU,aAAa,CAACsG,MAAM,CAACtH,KAAK,EAAEM,MAAM,CAAC;IACrC,CAAC;;IAED;IACAI,QAAQ,CAACK,UAAU,CAACwG,gBAAgB,CAAC,WAAW,EAAE3B,WAAW,CAAC;IAC9D4B,MAAM,CAACD,gBAAgB,CAAC,SAAS,EAAEvB,SAAS,CAAC;IAC7CwB,MAAM,CAACD,gBAAgB,CAAC,WAAW,EAAEtB,WAAW,CAAC;IAEjD,MAAMwB,QAAQ,GAAGA,CAAA,KAAM;MACrB,MAAM9H,KAAK,GAAGH,QAAQ,CAACI,OAAO,CAACC,WAAW;MAC1C,MAAMC,MAAM,GAAGN,QAAQ,CAACI,OAAO,CAACG,YAAY;MAC5CO,MAAM,CAACoH,MAAM,GAAG/H,KAAK,GAAGG,MAAM;MAC9BQ,MAAM,CAACqH,sBAAsB,CAAC,CAAC;MAC/BjH,QAAQ,CAACG,OAAO,CAAClB,KAAK,EAAEG,MAAM,CAAC;MAC/BkB,aAAa,CAACH,OAAO,CAAClB,KAAK,EAAEG,MAAM,CAAC;IACtC,CAAC;IAED0H,MAAM,CAACD,gBAAgB,CAAC,QAAQ,EAAEE,QAAQ,CAAC;IAE3C,OAAO,MAAM;MACXD,MAAM,CAACI,mBAAmB,CAAC,SAAS,EAAE5B,SAAS,CAAC;MAChDwB,MAAM,CAACI,mBAAmB,CAAC,WAAW,EAAE3B,WAAW,CAAC;MACpDuB,MAAM,CAACI,mBAAmB,CAAC,QAAQ,EAAEH,QAAQ,CAAC;IAChD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACExI,OAAA;IACE4I,GAAG,EAAErI,QAAS;IACdyB,KAAK,EAAE;MACLtB,KAAK,EAAE,MAAM;MACbG,MAAM,EAAE,OAAO;MACfgI,QAAQ,EAAE,QAAQ;MAClB5H,UAAU,EAAE,MAAM;MAClBM,QAAQ,EAAE,UAAU;MACpBuH,MAAM,EAAE;IACV;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAAC5I,EAAA,CArNID,UAAU;AAAA8I,EAAA,GAAV9I,UAAU;AAuNhB,eAAeA,UAAU;AAAC,IAAA8I,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}