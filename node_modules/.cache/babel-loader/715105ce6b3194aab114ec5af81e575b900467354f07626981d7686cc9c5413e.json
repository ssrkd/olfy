{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srk\\\\Downloads\\\\arq_phantom_clone\\\\src\\\\components\\\\Carousel3D.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { CSS2DRenderer, CSS2DObject } from 'three/examples/jsm/renderers/CSS2DRenderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst media = [{\n  url: '/assets/img1.jpg',\n  title: 'Work 1'\n}, {\n  url: '/assets/img2.jpg',\n  title: 'Work 2'\n}, {\n  url: '/assets/img3.jpg',\n  title: 'Work 3'\n}, {\n  url: '/assets/img4.jpg',\n  title: 'Work 4'\n}, {\n  url: '/assets/img5.jpg',\n  title: 'Work 5'\n}, {\n  url: '/assets/img6.jpg',\n  title: 'Work 6'\n}];\nconst Carousel3D = () => {\n  _s();\n  const mountRef = useRef();\n  useEffect(() => {\n    const width = mountRef.current.clientWidth;\n    const height = mountRef.current.clientHeight;\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x000000);\n    scene.fog = new THREE.Fog(0x000000, 15, 30);\n    const camera = new THREE.PerspectiveCamera(60, width / height, 0.1, 1000);\n    camera.position.set(0, 0, 18);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(width, height);\n    mountRef.current.appendChild(renderer.domElement);\n    const labelRenderer = new CSS2DRenderer();\n    labelRenderer.setSize(width, height);\n    labelRenderer.domElement.style.position = 'absolute';\n    labelRenderer.domElement.style.top = '0';\n    labelRenderer.domElement.style.pointerEvents = 'none';\n    mountRef.current.appendChild(labelRenderer.domElement);\n    const ambientLight = new THREE.AmbientLight(0xffffff, 1.5);\n    scene.add(ambientLight);\n    const meshes = [];\n    const loader = new THREE.TextureLoader();\n    const geometry = new THREE.PlaneGeometry(3.2, 2);\n    const itemsPerRow = 3;\n    const radius = 10;\n    media.forEach((item, i) => {\n      loader.load(item.url, texture => {\n        const material = new THREE.MeshBasicMaterial({\n          map: texture\n        });\n        const mesh = new THREE.Mesh(geometry, material);\n        const row = Math.floor(i / itemsPerRow);\n        const col = i % itemsPerRow;\n        const angle = (col - (itemsPerRow - 1) / 2) / itemsPerRow * Math.PI;\n        const x = Math.sin(angle) * radius;\n        const z = Math.cos(angle) * radius;\n        const y = 2 - row * 3;\n        mesh.position.set(x, y, z);\n        mesh.rotation.y = angle;\n        mesh.userData.originalPosition = mesh.position.clone();\n        mesh.userData.originalRotation = mesh.rotation.clone();\n\n        // Label\n        const div = document.createElement('div');\n        div.textContent = item.title;\n        div.style.color = 'white';\n        div.style.fontSize = '12px';\n        div.style.textAlign = 'center';\n        const label = new CSS2DObject(div);\n        label.position.set(0, -1.4, 0);\n        mesh.add(label);\n        scene.add(mesh);\n        meshes.push(mesh);\n      });\n    });\n\n    // Управление\n    let isMouseDown = false;\n    let prevX = 0;\n    let prevY = 0;\n    let targetRotationX = 0;\n    let targetRotationY = 0;\n    let rotationX = 0;\n    let rotationY = 0;\n    const handleMouseDown = e => {\n      isMouseDown = true;\n      prevX = e.clientX;\n      prevY = e.clientY;\n    };\n    const handleMouseMove = e => {\n      if (!isMouseDown) return;\n      const dx = e.clientX - prevX;\n      const dy = e.clientY - prevY;\n      targetRotationY += dx * 0.01;\n      targetRotationX += dy * 0.01;\n      targetRotationX = Math.max(-Math.PI / 4, Math.min(Math.PI / 4, targetRotationX));\n      prevX = e.clientX;\n      prevY = e.clientY;\n    };\n    const handleMouseUp = () => {\n      isMouseDown = false;\n    };\n    const animate = () => {\n      requestAnimationFrame(animate);\n      rotationX += (targetRotationX - rotationX) * 0.05;\n      rotationY += (targetRotationY - rotationY) * 0.05;\n      meshes.forEach(mesh => {\n        const p = mesh.userData.originalPosition.clone();\n        p.applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\n        p.applyAxisAngle(new THREE.Vector3(1, 0, 0), rotationX);\n        mesh.position.copy(p);\n        mesh.lookAt(0, mesh.position.y, 0);\n      });\n      renderer.render(scene, camera);\n      labelRenderer.render(scene, camera);\n    };\n    animate();\n    renderer.domElement.addEventListener('mousedown', handleMouseDown);\n    window.addEventListener('mousemove', handleMouseMove);\n    window.addEventListener('mouseup', handleMouseUp);\n    const onResize = () => {\n      const width = mountRef.current.clientWidth;\n      const height = mountRef.current.clientHeight;\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      renderer.setSize(width, height);\n      labelRenderer.setSize(width, height);\n    };\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('mouseup', handleMouseUp);\n      window.removeEventListener('resize', onResize);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      width: '100%',\n      height: '100vh',\n      background: '#000',\n      overflow: 'hidden',\n      position: 'relative',\n      cursor: 'grab'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(Carousel3D, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = Carousel3D;\nexport default Carousel3D;\nvar _c;\n$RefreshReg$(_c, \"Carousel3D\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","CSS2DRenderer","CSS2DObject","jsxDEV","_jsxDEV","media","url","title","Carousel3D","_s","mountRef","width","current","clientWidth","height","clientHeight","scene","Scene","background","Color","fog","Fog","camera","PerspectiveCamera","position","set","renderer","WebGLRenderer","antialias","setSize","appendChild","domElement","labelRenderer","style","top","pointerEvents","ambientLight","AmbientLight","add","meshes","loader","TextureLoader","geometry","PlaneGeometry","itemsPerRow","radius","forEach","item","i","load","texture","material","MeshBasicMaterial","map","mesh","Mesh","row","Math","floor","col","angle","PI","x","sin","z","cos","y","rotation","userData","originalPosition","clone","originalRotation","div","document","createElement","textContent","color","fontSize","textAlign","label","push","isMouseDown","prevX","prevY","targetRotationX","targetRotationY","rotationX","rotationY","handleMouseDown","e","clientX","clientY","handleMouseMove","dx","dy","max","min","handleMouseUp","animate","requestAnimationFrame","p","applyAxisAngle","Vector3","copy","lookAt","render","addEventListener","window","onResize","aspect","updateProjectionMatrix","removeEventListener","ref","overflow","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/srk/Downloads/arq_phantom_clone/src/components/Carousel3D.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport { CSS2DRenderer, CSS2DObject } from 'three/examples/jsm/renderers/CSS2DRenderer';\r\n\r\nconst media = [\r\n  { url: '/assets/img1.jpg', title: 'Work 1' },\r\n  { url: '/assets/img2.jpg', title: 'Work 2' },\r\n  { url: '/assets/img3.jpg', title: 'Work 3' },\r\n  { url: '/assets/img4.jpg', title: 'Work 4' },\r\n  { url: '/assets/img5.jpg', title: 'Work 5' },\r\n  { url: '/assets/img6.jpg', title: 'Work 6' }\r\n];\r\n\r\nconst Carousel3D = () => {\r\n  const mountRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const width = mountRef.current.clientWidth;\r\n    const height = mountRef.current.clientHeight;\r\n\r\n    const scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(0x000000);\r\n    scene.fog = new THREE.Fog(0x000000, 15, 30);\r\n\r\n    const camera = new THREE.PerspectiveCamera(60, width / height, 0.1, 1000);\r\n    camera.position.set(0, 0, 18);\r\n\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(width, height);\r\n    mountRef.current.appendChild(renderer.domElement);\r\n\r\n    const labelRenderer = new CSS2DRenderer();\r\n    labelRenderer.setSize(width, height);\r\n    labelRenderer.domElement.style.position = 'absolute';\r\n    labelRenderer.domElement.style.top = '0';\r\n    labelRenderer.domElement.style.pointerEvents = 'none';\r\n    mountRef.current.appendChild(labelRenderer.domElement);\r\n\r\n    const ambientLight = new THREE.AmbientLight(0xffffff, 1.5);\r\n    scene.add(ambientLight);\r\n\r\n    const meshes = [];\r\n    const loader = new THREE.TextureLoader();\r\n    const geometry = new THREE.PlaneGeometry(3.2, 2);\r\n\r\n    const itemsPerRow = 3;\r\n    const radius = 10;\r\n\r\n    media.forEach((item, i) => {\r\n      loader.load(item.url, (texture) => {\r\n        const material = new THREE.MeshBasicMaterial({ map: texture });\r\n        const mesh = new THREE.Mesh(geometry, material);\r\n\r\n        const row = Math.floor(i / itemsPerRow);\r\n        const col = i % itemsPerRow;\r\n        const angle = ((col - (itemsPerRow - 1) / 2) / itemsPerRow) * Math.PI;\r\n        const x = Math.sin(angle) * radius;\r\n        const z = Math.cos(angle) * radius;\r\n        const y = 2 - row * 3;\r\n\r\n        mesh.position.set(x, y, z);\r\n        mesh.rotation.y = angle;\r\n        mesh.userData.originalPosition = mesh.position.clone();\r\n        mesh.userData.originalRotation = mesh.rotation.clone();\r\n\r\n        // Label\r\n        const div = document.createElement('div');\r\n        div.textContent = item.title;\r\n        div.style.color = 'white';\r\n        div.style.fontSize = '12px';\r\n        div.style.textAlign = 'center';\r\n        const label = new CSS2DObject(div);\r\n        label.position.set(0, -1.4, 0);\r\n        mesh.add(label);\r\n\r\n        scene.add(mesh);\r\n        meshes.push(mesh);\r\n      });\r\n    });\r\n\r\n    // Управление\r\n    let isMouseDown = false;\r\n    let prevX = 0;\r\n    let prevY = 0;\r\n    let targetRotationX = 0;\r\n    let targetRotationY = 0;\r\n    let rotationX = 0;\r\n    let rotationY = 0;\r\n\r\n    const handleMouseDown = (e) => {\r\n      isMouseDown = true;\r\n      prevX = e.clientX;\r\n      prevY = e.clientY;\r\n    };\r\n\r\n    const handleMouseMove = (e) => {\r\n      if (!isMouseDown) return;\r\n      const dx = e.clientX - prevX;\r\n      const dy = e.clientY - prevY;\r\n      targetRotationY += dx * 0.01;\r\n      targetRotationX += dy * 0.01;\r\n      targetRotationX = Math.max(-Math.PI / 4, Math.min(Math.PI / 4, targetRotationX));\r\n      prevX = e.clientX;\r\n      prevY = e.clientY;\r\n    };\r\n\r\n    const handleMouseUp = () => {\r\n      isMouseDown = false;\r\n    };\r\n\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      rotationX += (targetRotationX - rotationX) * 0.05;\r\n      rotationY += (targetRotationY - rotationY) * 0.05;\r\n\r\n      meshes.forEach((mesh) => {\r\n        const p = mesh.userData.originalPosition.clone();\r\n        p.applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n        p.applyAxisAngle(new THREE.Vector3(1, 0, 0), rotationX);\r\n        mesh.position.copy(p);\r\n        mesh.lookAt(0, mesh.position.y, 0);\r\n      });\r\n\r\n      renderer.render(scene, camera);\r\n      labelRenderer.render(scene, camera);\r\n    };\r\n\r\n    animate();\r\n\r\n    renderer.domElement.addEventListener('mousedown', handleMouseDown);\r\n    window.addEventListener('mousemove', handleMouseMove);\r\n    window.addEventListener('mouseup', handleMouseUp);\r\n\r\n    const onResize = () => {\r\n      const width = mountRef.current.clientWidth;\r\n      const height = mountRef.current.clientHeight;\r\n      camera.aspect = width / height;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(width, height);\r\n      labelRenderer.setSize(width, height);\r\n    };\r\n\r\n    window.addEventListener('resize', onResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('mousemove', handleMouseMove);\r\n      window.removeEventListener('mouseup', handleMouseUp);\r\n      window.removeEventListener('resize', onResize);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      ref={mountRef}\r\n      style={{\r\n        width: '100%',\r\n        height: '100vh',\r\n        background: '#000',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n        cursor: 'grab',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Carousel3D;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}