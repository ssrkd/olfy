{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srk\\\\Downloads\\\\arq_phantom_clone\\\\src\\\\components\\\\Carousel3D.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projects = [{\n  url: 'https://picsum.photos/600/800?random=1',\n  title: 'EXPERIENCE',\n  subtitle: 'WEBSITE',\n  year: '2024'\n}, {\n  url: 'https://picsum.photos/600/800?random=2',\n  title: 'ILLUSTRATION',\n  subtitle: 'CAMPAIGN',\n  year: '2024'\n}, {\n  url: 'https://picsum.photos/600/800?random=3',\n  title: 'PRODUCT',\n  subtitle: 'DESIGN',\n  year: '2024'\n}, {\n  url: 'https://picsum.photos/600/800?random=4',\n  title: 'BRANDING',\n  subtitle: 'IDENTITY',\n  year: '2023'\n}, {\n  url: 'https://picsum.photos/600/800?random=5',\n  title: 'DIGITAL',\n  subtitle: 'EXPERIENCE',\n  year: '2024'\n}, {\n  url: 'https://picsum.photos/600/800?random=6',\n  title: 'CREATIVE',\n  subtitle: 'DIRECTION',\n  year: '2023'\n}, {\n  url: 'https://picsum.photos/600/800?random=7',\n  title: 'TECHNOLOGY',\n  subtitle: 'INNOVATION',\n  year: '2024'\n}, {\n  url: 'https://picsum.photos/600/800?random=8',\n  title: 'VISUAL',\n  subtitle: 'STORYTELLING',\n  year: '2023'\n}, {\n  url: 'https://picsum.photos/600/800?random=9',\n  title: 'STRATEGIC',\n  subtitle: 'THINKING',\n  year: '2024'\n}, {\n  url: 'https://picsum.photos/600/800?random=10',\n  title: 'IMMERSIVE',\n  subtitle: 'MEDIA',\n  year: '2024'\n}, {\n  url: 'https://picsum.photos/600/800?random=11',\n  title: 'INTERACTIVE',\n  subtitle: 'DESIGN',\n  year: '2023'\n}, {\n  url: 'https://picsum.photos/600/800?random=12',\n  title: 'FUTURE',\n  subtitle: 'VISION',\n  year: '2024'\n}];\nconst Carousel3D = () => {\n  _s();\n  const mountRef = useRef();\n  const sceneRef = useRef();\n  const rendererRef = useRef();\n  const cameraRef = useRef();\n  const meshesRef = useRef([]);\n  const textMeshesRef = useRef([]);\n  useEffect(() => {\n    const width = mountRef.current.clientWidth;\n    const height = mountRef.current.clientHeight;\n\n    // Scene setup - exact Phantom.land style\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x000000);\n    scene.fog = new THREE.Fog(0x000000, 20, 100);\n    sceneRef.current = scene;\n\n    // Camera - wider FOV like Phantom\n    const camera = new THREE.PerspectiveCamera(45, width / height, 0.1, 1000);\n    camera.position.set(0, 0, 40);\n    cameraRef.current = camera;\n\n    // Renderer - clean, high quality\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: false,\n      powerPreference: \"high-performance\"\n    });\n    renderer.setSize(width, height);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    renderer.shadowMap.enabled = false; // Phantom doesn't use shadows\n    renderer.outputColorSpace = THREE.SRGBColorSpace;\n    mountRef.current.appendChild(renderer.domElement);\n    rendererRef.current = renderer;\n\n    // Lighting - minimal like Phantom\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.8);\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.3);\n    directionalLight.position.set(0, 0, 10);\n    scene.add(directionalLight);\n\n    // Create image meshes in Phantom's irregular grid pattern\n    const meshes = [];\n    const textMeshes = [];\n    const loader = new THREE.TextureLoader();\n    projects.forEach((project, i) => {\n      // Phantom-style positioning - irregular scattered grid\n      const cols = 4;\n      const rows = 3;\n      const row = Math.floor(i / cols);\n      const col = i % cols;\n\n      // Base grid positions\n      const gridWidth = 50;\n      const gridHeight = 30;\n      const baseX = (col - 1.5) * (gridWidth / cols);\n      const baseY = (1 - row) * (gridHeight / rows);\n\n      // Add Phantom-style randomization and perspective\n      const offsetX = (Math.random() - 0.5) * 8;\n      const offsetY = (Math.random() - 0.5) * 5;\n      const offsetZ = (Math.random() - 0.5) * 15;\n      const x = baseX + offsetX;\n      const y = baseY + offsetY;\n      const z = offsetZ;\n\n      // Create image plane\n      const geometry = new THREE.PlaneGeometry(6, 8);\n      loader.load(project.url, texture => {\n        texture.colorSpace = THREE.SRGBColorSpace;\n        texture.flipY = false;\n        const material = new THREE.MeshBasicMaterial({\n          map: texture,\n          side: THREE.DoubleSide,\n          transparent: false\n        });\n        const mesh = new THREE.Mesh(geometry, material);\n        mesh.position.set(x, y, z);\n\n        // Random rotation like Phantom\n        mesh.rotation.x = (Math.random() - 0.5) * 0.3;\n        mesh.rotation.y = (Math.random() - 0.5) * 0.4;\n        mesh.rotation.z = (Math.random() - 0.5) * 0.1;\n        mesh.userData = {\n          originalPosition: mesh.position.clone(),\n          originalRotation: mesh.rotation.clone(),\n          index: i,\n          project: project\n        };\n        scene.add(mesh);\n        meshes.push(mesh);\n\n        // Create text labels below images (Phantom style)\n        const canvas = document.createElement('canvas');\n        const context = canvas.getContext('2d');\n        canvas.width = 512;\n        canvas.height = 256;\n        context.fillStyle = '#000000';\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.fillStyle = '#ffffff';\n        context.font = 'bold 32px Arial, sans-serif';\n        context.textAlign = 'center';\n        context.fillText(project.title, canvas.width / 2, 80);\n        context.font = '24px Arial, sans-serif';\n        context.fillText(project.subtitle, canvas.width / 2, 120);\n        context.font = '18px Arial, sans-serif';\n        context.fillStyle = '#888888';\n        context.fillText(project.year, canvas.width / 2, 160);\n        const textTexture = new THREE.CanvasTexture(canvas);\n        const textMaterial = new THREE.MeshBasicMaterial({\n          map: textTexture,\n          transparent: true,\n          opacity: 0.9\n        });\n        const textGeometry = new THREE.PlaneGeometry(4, 2);\n        const textMesh = new THREE.Mesh(textGeometry, textMaterial);\n        textMesh.position.set(x, y - 6, z);\n        textMesh.rotation.copy(mesh.rotation);\n        scene.add(textMesh);\n        textMeshes.push(textMesh);\n      });\n    });\n    meshesRef.current = meshes;\n    textMeshesRef.current = textMeshes;\n\n    // Mouse interaction - Phantom style smooth movement\n    let mouseX = 0;\n    let mouseY = 0;\n    let targetX = 0;\n    let targetY = 0;\n    let isMouseDown = false;\n    let mouseDownX = 0;\n    let mouseDownY = 0;\n    const handleMouseMove = event => {\n      if (isMouseDown) {\n        const deltaX = event.clientX - mouseDownX;\n        const deltaY = event.clientY - mouseDownY;\n        targetX += deltaX * 0.01;\n        targetY += deltaY * 0.01;\n        targetY = Math.max(-Math.PI / 3, Math.min(Math.PI / 3, targetY));\n        mouseDownX = event.clientX;\n        mouseDownY = event.clientY;\n      } else {\n        // Subtle mouse following when not dragging\n        mouseX = (event.clientX / width - 0.5) * 0.1;\n        mouseY = (event.clientY / height - 0.5) * 0.1;\n      }\n    };\n    const handleMouseDown = event => {\n      isMouseDown = true;\n      mouseDownX = event.clientX;\n      mouseDownY = event.clientY;\n    };\n    const handleMouseUp = () => {\n      isMouseDown = false;\n    };\n\n    // Animation loop - Phantom's smooth continuous movement\n    let currentX = 0;\n    let currentY = 0;\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      // Smooth rotation interpolation\n      currentX += (targetX - currentX) * 0.05;\n      currentY += (targetY - currentY) * 0.05;\n\n      // Apply rotation to all meshes\n      [...meshes, ...textMeshes].forEach((mesh, index) => {\n        if (mesh.userData) {\n          const pos = mesh.userData.originalPosition.clone();\n\n          // Apply Y rotation (horizontal drag)\n          pos.applyAxisAngle(new THREE.Vector3(0, 1, 0), currentX);\n          // Apply X rotation (vertical drag)\n          pos.applyAxisAngle(new THREE.Vector3(1, 0, 0), currentY);\n          mesh.position.copy(pos);\n\n          // Update rotation\n          const rot = mesh.userData.originalRotation.clone();\n          mesh.rotation.x = rot.x + currentY;\n          mesh.rotation.y = rot.y + currentX;\n          mesh.rotation.z = rot.z;\n        }\n      });\n\n      // Subtle camera movement based on mouse (when not dragging)\n      if (!isMouseDown) {\n        camera.position.x += (mouseX * 2 - camera.position.x * 0.1) * 0.05;\n        camera.position.y += (-mouseY * 2 - camera.position.y * 0.1) * 0.05;\n      }\n\n      // Auto rotation when idle\n      if (!isMouseDown) {\n        targetX += 0.002;\n      }\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Event listeners\n    renderer.domElement.addEventListener('mousemove', handleMouseMove);\n    renderer.domElement.addEventListener('mousedown', handleMouseDown);\n    renderer.domElement.addEventListener('mouseup', handleMouseUp);\n\n    // Resize handler\n    const handleResize = () => {\n      const width = mountRef.current.clientWidth;\n      const height = mountRef.current.clientHeight;\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      renderer.setSize(width, height);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      renderer.domElement.removeEventListener('mousemove', handleMouseMove);\n      renderer.domElement.removeEventListener('mousedown', handleMouseDown);\n      renderer.domElement.removeEventListener('mouseup', handleMouseUp);\n      window.removeEventListener('resize', handleResize);\n      [...meshes, ...textMeshes].forEach(mesh => {\n        scene.remove(mesh);\n        if (mesh.geometry) mesh.geometry.dispose();\n        if (mesh.material) {\n          if (mesh.material.map) mesh.material.map.dispose();\n          mesh.material.dispose();\n        }\n      });\n      renderer.dispose();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-screen bg-black overflow-hidden\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef,\n      className: \"w-full h-full cursor-grab active:cursor-grabbing\",\n      style: {\n        background: '#000000'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 343,\n    columnNumber: 5\n  }, this);\n};\n_s(Carousel3D, \"52CH2v66ncEsEcttI0ZaPdsEuPA=\");\n_c = Carousel3D;\nexport default Carousel3D;\nvar _c;\n$RefreshReg$(_c, \"Carousel3D\");","map":{"version":3,"names":["React","useEffect","useRef","useState","THREE","jsxDEV","_jsxDEV","projects","url","title","subtitle","year","Carousel3D","_s","mountRef","sceneRef","rendererRef","cameraRef","meshesRef","textMeshesRef","width","current","clientWidth","height","clientHeight","scene","Scene","background","Color","fog","Fog","camera","PerspectiveCamera","position","set","renderer","WebGLRenderer","antialias","alpha","powerPreference","setSize","setPixelRatio","Math","min","window","devicePixelRatio","shadowMap","enabled","outputColorSpace","SRGBColorSpace","appendChild","domElement","ambientLight","AmbientLight","add","directionalLight","DirectionalLight","meshes","textMeshes","loader","TextureLoader","forEach","project","i","cols","rows","row","floor","col","gridWidth","gridHeight","baseX","baseY","offsetX","random","offsetY","offsetZ","x","y","z","geometry","PlaneGeometry","load","texture","colorSpace","flipY","material","MeshBasicMaterial","map","side","DoubleSide","transparent","mesh","Mesh","rotation","userData","originalPosition","clone","originalRotation","index","push","canvas","document","createElement","context","getContext","fillStyle","fillRect","font","textAlign","fillText","textTexture","CanvasTexture","textMaterial","opacity","textGeometry","textMesh","copy","mouseX","mouseY","targetX","targetY","isMouseDown","mouseDownX","mouseDownY","handleMouseMove","event","deltaX","clientX","deltaY","clientY","max","PI","handleMouseDown","handleMouseUp","currentX","currentY","animate","requestAnimationFrame","pos","applyAxisAngle","Vector3","rot","render","addEventListener","handleResize","aspect","updateProjectionMatrix","removeEventListener","remove","dispose","className","children","ref","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/srk/Downloads/arq_phantom_clone/src/components/Carousel3D.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as THREE from 'three';\r\n\r\nconst projects = [\r\n  { \r\n    url: 'https://picsum.photos/600/800?random=1',\r\n    title: 'EXPERIENCE',\r\n    subtitle: 'WEBSITE',\r\n    year: '2024'\r\n  },\r\n  { \r\n    url: 'https://picsum.photos/600/800?random=2',\r\n    title: 'ILLUSTRATION', \r\n    subtitle: 'CAMPAIGN',\r\n    year: '2024'\r\n  },\r\n  { \r\n    url: 'https://picsum.photos/600/800?random=3',\r\n    title: 'PRODUCT',\r\n    subtitle: 'DESIGN',\r\n    year: '2024'\r\n  },\r\n  { \r\n    url: 'https://picsum.photos/600/800?random=4',\r\n    title: 'BRANDING',\r\n    subtitle: 'IDENTITY',\r\n    year: '2023'\r\n  },\r\n  { \r\n    url: 'https://picsum.photos/600/800?random=5',\r\n    title: 'DIGITAL',\r\n    subtitle: 'EXPERIENCE',\r\n    year: '2024'\r\n  },\r\n  { \r\n    url: 'https://picsum.photos/600/800?random=6',\r\n    title: 'CREATIVE',\r\n    subtitle: 'DIRECTION',\r\n    year: '2023'\r\n  },\r\n  { \r\n    url: 'https://picsum.photos/600/800?random=7',\r\n    title: 'TECHNOLOGY',\r\n    subtitle: 'INNOVATION',\r\n    year: '2024'\r\n  },\r\n  { \r\n    url: 'https://picsum.photos/600/800?random=8',\r\n    title: 'VISUAL',\r\n    subtitle: 'STORYTELLING',\r\n    year: '2023'\r\n  },\r\n  { \r\n    url: 'https://picsum.photos/600/800?random=9',\r\n    title: 'STRATEGIC',\r\n    subtitle: 'THINKING',\r\n    year: '2024'\r\n  },\r\n  { \r\n    url: 'https://picsum.photos/600/800?random=10',\r\n    title: 'IMMERSIVE',\r\n    subtitle: 'MEDIA',\r\n    year: '2024'\r\n  },\r\n  { \r\n    url: 'https://picsum.photos/600/800?random=11',\r\n    title: 'INTERACTIVE',\r\n    subtitle: 'DESIGN',\r\n    year: '2023'\r\n  },\r\n  { \r\n    url: 'https://picsum.photos/600/800?random=12',\r\n    title: 'FUTURE',\r\n    subtitle: 'VISION',\r\n    year: '2024'\r\n  }\r\n];\r\n\r\nconst Carousel3D = () => {\r\n  const mountRef = useRef();\r\n  const sceneRef = useRef();\r\n  const rendererRef = useRef();\r\n  const cameraRef = useRef();\r\n  const meshesRef = useRef([]);\r\n  const textMeshesRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    const width = mountRef.current.clientWidth;\r\n    const height = mountRef.current.clientHeight;\r\n\r\n    // Scene setup - exact Phantom.land style\r\n    const scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(0x000000);\r\n    scene.fog = new THREE.Fog(0x000000, 20, 100);\r\n    sceneRef.current = scene;\r\n\r\n    // Camera - wider FOV like Phantom\r\n    const camera = new THREE.PerspectiveCamera(45, width / height, 0.1, 1000);\r\n    camera.position.set(0, 0, 40);\r\n    cameraRef.current = camera;\r\n\r\n    // Renderer - clean, high quality\r\n    const renderer = new THREE.WebGLRenderer({ \r\n      antialias: true, \r\n      alpha: false,\r\n      powerPreference: \"high-performance\"\r\n    });\r\n    renderer.setSize(width, height);\r\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\r\n    renderer.shadowMap.enabled = false; // Phantom doesn't use shadows\r\n    renderer.outputColorSpace = THREE.SRGBColorSpace;\r\n    mountRef.current.appendChild(renderer.domElement);\r\n    rendererRef.current = renderer;\r\n\r\n    // Lighting - minimal like Phantom\r\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.8);\r\n    scene.add(ambientLight);\r\n\r\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.3);\r\n    directionalLight.position.set(0, 0, 10);\r\n    scene.add(directionalLight);\r\n\r\n    // Create image meshes in Phantom's irregular grid pattern\r\n    const meshes = [];\r\n    const textMeshes = [];\r\n    const loader = new THREE.TextureLoader();\r\n    \r\n    projects.forEach((project, i) => {\r\n      // Phantom-style positioning - irregular scattered grid\r\n      const cols = 4;\r\n      const rows = 3;\r\n      const row = Math.floor(i / cols);\r\n      const col = i % cols;\r\n      \r\n      // Base grid positions\r\n      const gridWidth = 50;\r\n      const gridHeight = 30;\r\n      const baseX = (col - 1.5) * (gridWidth / cols);\r\n      const baseY = (1 - row) * (gridHeight / rows);\r\n      \r\n      // Add Phantom-style randomization and perspective\r\n      const offsetX = (Math.random() - 0.5) * 8;\r\n      const offsetY = (Math.random() - 0.5) * 5;\r\n      const offsetZ = (Math.random() - 0.5) * 15;\r\n      \r\n      const x = baseX + offsetX;\r\n      const y = baseY + offsetY;\r\n      const z = offsetZ;\r\n\r\n      // Create image plane\r\n      const geometry = new THREE.PlaneGeometry(6, 8);\r\n      \r\n      loader.load(project.url, (texture) => {\r\n        texture.colorSpace = THREE.SRGBColorSpace;\r\n        texture.flipY = false;\r\n        \r\n        const material = new THREE.MeshBasicMaterial({\r\n          map: texture,\r\n          side: THREE.DoubleSide,\r\n          transparent: false\r\n        });\r\n\r\n        const mesh = new THREE.Mesh(geometry, material);\r\n        mesh.position.set(x, y, z);\r\n        \r\n        // Random rotation like Phantom\r\n        mesh.rotation.x = (Math.random() - 0.5) * 0.3;\r\n        mesh.rotation.y = (Math.random() - 0.5) * 0.4;\r\n        mesh.rotation.z = (Math.random() - 0.5) * 0.1;\r\n        \r\n        mesh.userData = {\r\n          originalPosition: mesh.position.clone(),\r\n          originalRotation: mesh.rotation.clone(),\r\n          index: i,\r\n          project: project\r\n        };\r\n        \r\n        scene.add(mesh);\r\n        meshes.push(mesh);\r\n\r\n        // Create text labels below images (Phantom style)\r\n        const canvas = document.createElement('canvas');\r\n        const context = canvas.getContext('2d');\r\n        canvas.width = 512;\r\n        canvas.height = 256;\r\n        \r\n        context.fillStyle = '#000000';\r\n        context.fillRect(0, 0, canvas.width, canvas.height);\r\n        \r\n        context.fillStyle = '#ffffff';\r\n        context.font = 'bold 32px Arial, sans-serif';\r\n        context.textAlign = 'center';\r\n        context.fillText(project.title, canvas.width / 2, 80);\r\n        \r\n        context.font = '24px Arial, sans-serif';\r\n        context.fillText(project.subtitle, canvas.width / 2, 120);\r\n        \r\n        context.font = '18px Arial, sans-serif';\r\n        context.fillStyle = '#888888';\r\n        context.fillText(project.year, canvas.width / 2, 160);\r\n        \r\n        const textTexture = new THREE.CanvasTexture(canvas);\r\n        const textMaterial = new THREE.MeshBasicMaterial({\r\n          map: textTexture,\r\n          transparent: true,\r\n          opacity: 0.9\r\n        });\r\n        \r\n        const textGeometry = new THREE.PlaneGeometry(4, 2);\r\n        const textMesh = new THREE.Mesh(textGeometry, textMaterial);\r\n        textMesh.position.set(x, y - 6, z);\r\n        textMesh.rotation.copy(mesh.rotation);\r\n        \r\n        scene.add(textMesh);\r\n        textMeshes.push(textMesh);\r\n      });\r\n    });\r\n\r\n    meshesRef.current = meshes;\r\n    textMeshesRef.current = textMeshes;\r\n\r\n    // Mouse interaction - Phantom style smooth movement\r\n    let mouseX = 0;\r\n    let mouseY = 0;\r\n    let targetX = 0;\r\n    let targetY = 0;\r\n    let isMouseDown = false;\r\n    let mouseDownX = 0;\r\n    let mouseDownY = 0;\r\n\r\n    const handleMouseMove = (event) => {\r\n      if (isMouseDown) {\r\n        const deltaX = event.clientX - mouseDownX;\r\n        const deltaY = event.clientY - mouseDownY;\r\n        \r\n        targetX += deltaX * 0.01;\r\n        targetY += deltaY * 0.01;\r\n        targetY = Math.max(-Math.PI / 3, Math.min(Math.PI / 3, targetY));\r\n        \r\n        mouseDownX = event.clientX;\r\n        mouseDownY = event.clientY;\r\n      } else {\r\n        // Subtle mouse following when not dragging\r\n        mouseX = (event.clientX / width - 0.5) * 0.1;\r\n        mouseY = (event.clientY / height - 0.5) * 0.1;\r\n      }\r\n    };\r\n\r\n    const handleMouseDown = (event) => {\r\n      isMouseDown = true;\r\n      mouseDownX = event.clientX;\r\n      mouseDownY = event.clientY;\r\n    };\r\n\r\n    const handleMouseUp = () => {\r\n      isMouseDown = false;\r\n    };\r\n\r\n    // Animation loop - Phantom's smooth continuous movement\r\n    let currentX = 0;\r\n    let currentY = 0;\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n\r\n      // Smooth rotation interpolation\r\n      currentX += (targetX - currentX) * 0.05;\r\n      currentY += (targetY - currentY) * 0.05;\r\n\r\n      // Apply rotation to all meshes\r\n      [...meshes, ...textMeshes].forEach((mesh, index) => {\r\n        if (mesh.userData) {\r\n          const pos = mesh.userData.originalPosition.clone();\r\n          \r\n          // Apply Y rotation (horizontal drag)\r\n          pos.applyAxisAngle(new THREE.Vector3(0, 1, 0), currentX);\r\n          // Apply X rotation (vertical drag)\r\n          pos.applyAxisAngle(new THREE.Vector3(1, 0, 0), currentY);\r\n          \r\n          mesh.position.copy(pos);\r\n          \r\n          // Update rotation\r\n          const rot = mesh.userData.originalRotation.clone();\r\n          mesh.rotation.x = rot.x + currentY;\r\n          mesh.rotation.y = rot.y + currentX;\r\n          mesh.rotation.z = rot.z;\r\n        }\r\n      });\r\n\r\n      // Subtle camera movement based on mouse (when not dragging)\r\n      if (!isMouseDown) {\r\n        camera.position.x += (mouseX * 2 - camera.position.x * 0.1) * 0.05;\r\n        camera.position.y += (-mouseY * 2 - camera.position.y * 0.1) * 0.05;\r\n      }\r\n\r\n      // Auto rotation when idle\r\n      if (!isMouseDown) {\r\n        targetX += 0.002;\r\n      }\r\n\r\n      renderer.render(scene, camera);\r\n    };\r\n\r\n    animate();\r\n\r\n    // Event listeners\r\n    renderer.domElement.addEventListener('mousemove', handleMouseMove);\r\n    renderer.domElement.addEventListener('mousedown', handleMouseDown);\r\n    renderer.domElement.addEventListener('mouseup', handleMouseUp);\r\n\r\n    // Resize handler\r\n    const handleResize = () => {\r\n      const width = mountRef.current.clientWidth;\r\n      const height = mountRef.current.clientHeight;\r\n      \r\n      camera.aspect = width / height;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(width, height);\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Cleanup\r\n    return () => {\r\n      renderer.domElement.removeEventListener('mousemove', handleMouseMove);\r\n      renderer.domElement.removeEventListener('mousedown', handleMouseDown);\r\n      renderer.domElement.removeEventListener('mouseup', handleMouseUp);\r\n      window.removeEventListener('resize', handleResize);\r\n      \r\n      [...meshes, ...textMeshes].forEach(mesh => {\r\n        scene.remove(mesh);\r\n        if (mesh.geometry) mesh.geometry.dispose();\r\n        if (mesh.material) {\r\n          if (mesh.material.map) mesh.material.map.dispose();\r\n          mesh.material.dispose();\r\n        }\r\n      });\r\n      \r\n      renderer.dispose();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"w-full h-screen bg-black overflow-hidden\">\r\n      <div\r\n        ref={mountRef}\r\n        className=\"w-full h-full cursor-grab active:cursor-grabbing\"\r\n        style={{ background: '#000000' }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Carousel3D;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}