{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srk\\\\Downloads\\\\arq_phantom_clone\\\\src\\\\components\\\\Carousel3D.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projects = [{\n  url: 'https://picsum.photos/600/800?random=1',\n  title: 'EXPERIENCE',\n  subtitle: 'WEBSITE',\n  year: '2024'\n}, {\n  url: 'https://picsum.photos/600/800?random=2',\n  title: 'ILLUSTRATION',\n  subtitle: 'CAMPAIGN',\n  year: '2024'\n}, {\n  url: 'https://picsum.photos/600/800?random=3',\n  title: 'PRODUCT',\n  subtitle: 'DESIGN',\n  year: '2024'\n}, {\n  url: 'https://picsum.photos/600/800?random=4',\n  title: 'BRANDING',\n  subtitle: 'IDENTITY',\n  year: '2023'\n}, {\n  url: 'https://picsum.photos/600/800?random=5',\n  title: 'DIGITAL',\n  subtitle: 'EXPERIENCE',\n  year: '2024'\n}, {\n  url: 'https://picsum.photos/600/800?random=6',\n  title: 'CREATIVE',\n  subtitle: 'DIRECTION',\n  year: '2023'\n}, {\n  url: 'https://picsum.photos/600/800?random=7',\n  title: 'TECHNOLOGY',\n  subtitle: 'INNOVATION',\n  year: '2024'\n}, {\n  url: 'https://picsum.photos/600/800?random=8',\n  title: 'VISUAL',\n  subtitle: 'STORYTELLING',\n  year: '2023'\n}, {\n  url: 'https://picsum.photos/600/800?random=9',\n  title: 'STRATEGIC',\n  subtitle: 'THINKING',\n  year: '2024'\n}, {\n  url: 'https://picsum.photos/600/800?random=10',\n  title: 'IMMERSIVE',\n  subtitle: 'MEDIA',\n  year: '2024'\n}, {\n  url: 'https://picsum.photos/600/800?random=11',\n  title: 'INTERACTIVE',\n  subtitle: 'DESIGN',\n  year: '2023'\n}, {\n  url: 'https://picsum.photos/600/800?random=12',\n  title: 'FUTURE',\n  subtitle: 'VISION',\n  year: '2024'\n}];\nconst Carousel3D = () => {\n  _s();\n  const mountRef = useRef();\n  const sceneRef = useRef();\n  const rendererRef = useRef();\n  const cameraRef = useRef();\n  const meshesRef = useRef([]);\n  const textMeshesRef = useRef([]);\n  useEffect(() => {\n    const width = mountRef.current.clientWidth;\n    const height = mountRef.current.clientHeight;\n\n    // Scene setup - VR deep space\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x000000);\n    scene.fog = new THREE.Fog(0x000000, 30, 200);\n    sceneRef.current = scene;\n\n    // Camera - VR wide FOV\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    camera.position.set(0, 0, 0);\n    cameraRef.current = camera;\n\n    // Renderer - VR quality\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: false,\n      powerPreference: \"high-performance\"\n    });\n    renderer.setSize(width, height);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    renderer.outputColorSpace = THREE.SRGBColorSpace;\n    renderer.toneMapping = THREE.ACESFilmicToneMapping;\n    renderer.toneMappingExposure = 1.5;\n    mountRef.current.appendChild(renderer.domElement);\n    rendererRef.current = renderer;\n\n    // VR atmospheric lighting\n    const ambientLight = new THREE.AmbientLight(0x222244, 0.3);\n    scene.add(ambientLight);\n    const light1 = new THREE.PointLight(0x4080ff, 2, 150);\n    light1.position.set(-40, 30, 20);\n    scene.add(light1);\n    const light2 = new THREE.PointLight(0xff4080, 1.5, 150);\n    light2.position.set(40, -30, -20);\n    scene.add(light2);\n    const light3 = new THREE.PointLight(0x80ff40, 1, 150);\n    light3.position.set(0, 40, 30);\n    scene.add(light3);\n\n    // Create VR gallery - circular layout\n    const meshes = [];\n    const textMeshes = [];\n    const loader = new THREE.TextureLoader();\n    projects.forEach((project, i) => {\n      // VR circular arrangement\n      const radius = 50;\n      const angle = i / projects.length * Math.PI * 2;\n      const elevation = Math.sin(i * 0.8) * 12;\n      const x = Math.cos(angle) * radius;\n      const y = elevation;\n      const z = Math.sin(angle) * radius;\n\n      // Create floating panels\n      const geometry = new THREE.PlaneGeometry(8, 10);\n      loader.load(project.url, texture => {\n        texture.colorSpace = THREE.SRGBColorSpace;\n        texture.flipY = false;\n        const material = new THREE.MeshStandardMaterial({\n          map: texture,\n          side: THREE.DoubleSide,\n          transparent: true,\n          opacity: 0.9,\n          emissive: new THREE.Color(0x001122),\n          emissiveIntensity: 0.2,\n          roughness: 0.1,\n          metalness: 0.2\n        });\n        const mesh = new THREE.Mesh(geometry, material);\n        mesh.position.set(x, y, z);\n        mesh.lookAt(0, 0, 0);\n        mesh.userData = {\n          originalPosition: mesh.position.clone(),\n          originalRotation: mesh.rotation.clone(),\n          floatOffset: Math.random() * Math.PI * 2,\n          index: i,\n          project: project\n        };\n        scene.add(mesh);\n        meshes.push(mesh);\n\n        // VR holographic text\n        const canvas = document.createElement('canvas');\n        const context = canvas.getContext('2d');\n        canvas.width = 512;\n        canvas.height = 256;\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        context.shadowColor = '#00ffff';\n        context.shadowBlur = 25;\n        context.fillStyle = '#ffffff';\n        context.font = 'bold 32px Arial';\n        context.textAlign = 'center';\n        context.fillText(project.title, canvas.width / 2, 80);\n        context.shadowBlur = 20;\n        context.font = '24px Arial';\n        context.fillStyle = '#aaffff';\n        context.fillText(project.subtitle, canvas.width / 2, 120);\n        context.shadowBlur = 15;\n        context.font = '18px Arial';\n        context.fillStyle = '#00aaff';\n        context.fillText(project.year, canvas.width / 2, 160);\n        const textTexture = new THREE.CanvasTexture(canvas);\n        const textMaterial = new THREE.MeshBasicMaterial({\n          map: textTexture,\n          transparent: true,\n          opacity: 0.8,\n          blending: THREE.AdditiveBlending\n        });\n        const textGeometry = new THREE.PlaneGeometry(6, 3);\n        const textMesh = new THREE.Mesh(textGeometry, textMaterial);\n        textMesh.position.set(x, y - 8, z);\n        textMesh.lookAt(0, 0, 0);\n        scene.add(textMesh);\n        textMeshes.push(textMesh);\n      });\n    });\n    meshesRef.current = meshes;\n    textMeshesRef.current = textMeshes;\n\n    // VR controls\n    let rotationX = 0;\n    let rotationY = 0;\n    let targetRotationX = 0;\n    let targetRotationY = 0;\n    let isMouseDown = false;\n    let mouseDownX = 0;\n    let mouseDownY = 0;\n    const handleMouseMove = event => {\n      if (isMouseDown) {\n        const deltaX = event.clientX - mouseDownX;\n        const deltaY = event.clientY - mouseDownY;\n        targetRotationY += deltaX * 0.006;\n        targetRotationX += deltaY * 0.006;\n        targetRotationX = Math.max(-Math.PI / 2, Math.min(Math.PI / 2, targetRotationX));\n        mouseDownX = event.clientX;\n        mouseDownY = event.clientY;\n      }\n    };\n    const handleMouseDown = event => {\n      isMouseDown = true;\n      mouseDownX = event.clientX;\n      mouseDownY = event.clientY;\n    };\n    const handleMouseUp = () => {\n      isMouseDown = false;\n    };\n\n    // VR animation loop\n    let time = 0;\n    const animate = () => {\n      requestAnimationFrame(animate);\n      time += 0.015;\n\n      // Smooth VR camera rotation\n      rotationX += (targetRotationX - rotationX) * 0.1;\n      rotationY += (targetRotationY - rotationY) * 0.1;\n      camera.rotation.x = rotationX;\n      camera.rotation.y = rotationY;\n\n      // Floating VR panels\n      [...meshes, ...textMeshes].forEach(mesh => {\n        if (!mesh.userData || !mesh.userData.originalPosition) return;\n        const floatY = Math.sin(time + mesh.userData.floatOffset) * 1.5;\n        const floatX = Math.cos(time * 0.6 + mesh.userData.floatOffset) * 0.8;\n        const floatZ = Math.sin(time * 0.4 + mesh.userData.floatOffset) * 0.8;\n        mesh.position.x = mesh.userData.originalPosition.x + floatX;\n        mesh.position.y = mesh.userData.originalPosition.y + floatY;\n        mesh.position.z = mesh.userData.originalPosition.z + floatZ;\n        mesh.rotation.z = Math.sin(time * 0.3 + mesh.userData.floatOffset) * 0.08;\n      });\n\n      // Auto rotation\n      if (!isMouseDown) {\n        targetRotationY += 0.002;\n      }\n\n      // Dynamic lighting\n      scene.children.forEach(child => {\n        if (child.type === 'PointLight') {\n          child.position.x = Math.cos(time * 0.4) * 50;\n          child.position.z = Math.sin(time * 0.4) * 50;\n        }\n      });\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Event listeners\n    renderer.domElement.addEventListener('mousemove', handleMouseMove);\n    renderer.domElement.addEventListener('mousedown', handleMouseDown);\n    renderer.domElement.addEventListener('mouseup', handleMouseUp);\n\n    // Resize handler\n    const handleResize = () => {\n      const width = mountRef.current.clientWidth;\n      const height = mountRef.current.clientHeight;\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      renderer.setSize(width, height);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      renderer.domElement.removeEventListener('mousemove', handleMouseMove);\n      renderer.domElement.removeEventListener('mousedown', handleMouseDown);\n      renderer.domElement.removeEventListener('mouseup', handleMouseUp);\n      window.removeEventListener('resize', handleResize);\n      [...meshes, ...textMeshes].forEach(mesh => {\n        scene.remove(mesh);\n        if (mesh.geometry) mesh.geometry.dispose();\n        if (mesh.material) {\n          if (mesh.material.map) mesh.material.map.dispose();\n          mesh.material.dispose();\n        }\n      });\n      renderer.dispose();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-screen bg-black overflow-hidden\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef,\n      className: \"w-full h-full cursor-grab active:cursor-grabbing\",\n      style: {\n        background: '#000000'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 343,\n    columnNumber: 5\n  }, this);\n};\n_s(Carousel3D, \"52CH2v66ncEsEcttI0ZaPdsEuPA=\");\n_c = Carousel3D;\nexport default Carousel3D;\nvar _c;\n$RefreshReg$(_c, \"Carousel3D\");","map":{"version":3,"names":["React","useEffect","useRef","useState","THREE","jsxDEV","_jsxDEV","projects","url","title","subtitle","year","Carousel3D","_s","mountRef","sceneRef","rendererRef","cameraRef","meshesRef","textMeshesRef","width","current","clientWidth","height","clientHeight","scene","Scene","background","Color","fog","Fog","camera","PerspectiveCamera","position","set","renderer","WebGLRenderer","antialias","alpha","powerPreference","setSize","setPixelRatio","Math","min","window","devicePixelRatio","outputColorSpace","SRGBColorSpace","toneMapping","ACESFilmicToneMapping","toneMappingExposure","appendChild","domElement","ambientLight","AmbientLight","add","light1","PointLight","light2","light3","meshes","textMeshes","loader","TextureLoader","forEach","project","i","radius","angle","length","PI","elevation","sin","x","cos","y","z","geometry","PlaneGeometry","load","texture","colorSpace","flipY","material","MeshStandardMaterial","map","side","DoubleSide","transparent","opacity","emissive","emissiveIntensity","roughness","metalness","mesh","Mesh","lookAt","userData","originalPosition","clone","originalRotation","rotation","floatOffset","random","index","push","canvas","document","createElement","context","getContext","clearRect","shadowColor","shadowBlur","fillStyle","font","textAlign","fillText","textTexture","CanvasTexture","textMaterial","MeshBasicMaterial","blending","AdditiveBlending","textGeometry","textMesh","rotationX","rotationY","targetRotationX","targetRotationY","isMouseDown","mouseDownX","mouseDownY","handleMouseMove","event","deltaX","clientX","deltaY","clientY","max","handleMouseDown","handleMouseUp","time","animate","requestAnimationFrame","floatY","floatX","floatZ","children","child","type","render","addEventListener","handleResize","aspect","updateProjectionMatrix","removeEventListener","remove","dispose","className","ref","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/srk/Downloads/arq_phantom_clone/src/components/Carousel3D.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as THREE from 'three';\r\n\r\nconst projects = [\r\n  { \r\n    url: 'https://picsum.photos/600/800?random=1',\r\n    title: 'EXPERIENCE',\r\n    subtitle: 'WEBSITE',\r\n    year: '2024'\r\n  },\r\n  { \r\n    url: 'https://picsum.photos/600/800?random=2',\r\n    title: 'ILLUSTRATION', \r\n    subtitle: 'CAMPAIGN',\r\n    year: '2024'\r\n  },\r\n  { \r\n    url: 'https://picsum.photos/600/800?random=3',\r\n    title: 'PRODUCT',\r\n    subtitle: 'DESIGN',\r\n    year: '2024'\r\n  },\r\n  { \r\n    url: 'https://picsum.photos/600/800?random=4',\r\n    title: 'BRANDING',\r\n    subtitle: 'IDENTITY',\r\n    year: '2023'\r\n  },\r\n  { \r\n    url: 'https://picsum.photos/600/800?random=5',\r\n    title: 'DIGITAL',\r\n    subtitle: 'EXPERIENCE',\r\n    year: '2024'\r\n  },\r\n  { \r\n    url: 'https://picsum.photos/600/800?random=6',\r\n    title: 'CREATIVE',\r\n    subtitle: 'DIRECTION',\r\n    year: '2023'\r\n  },\r\n  { \r\n    url: 'https://picsum.photos/600/800?random=7',\r\n    title: 'TECHNOLOGY',\r\n    subtitle: 'INNOVATION',\r\n    year: '2024'\r\n  },\r\n  { \r\n    url: 'https://picsum.photos/600/800?random=8',\r\n    title: 'VISUAL',\r\n    subtitle: 'STORYTELLING',\r\n    year: '2023'\r\n  },\r\n  { \r\n    url: 'https://picsum.photos/600/800?random=9',\r\n    title: 'STRATEGIC',\r\n    subtitle: 'THINKING',\r\n    year: '2024'\r\n  },\r\n  { \r\n    url: 'https://picsum.photos/600/800?random=10',\r\n    title: 'IMMERSIVE',\r\n    subtitle: 'MEDIA',\r\n    year: '2024'\r\n  },\r\n  { \r\n    url: 'https://picsum.photos/600/800?random=11',\r\n    title: 'INTERACTIVE',\r\n    subtitle: 'DESIGN',\r\n    year: '2023'\r\n  },\r\n  { \r\n    url: 'https://picsum.photos/600/800?random=12',\r\n    title: 'FUTURE',\r\n    subtitle: 'VISION',\r\n    year: '2024'\r\n  }\r\n];\r\n\r\nconst Carousel3D = () => {\r\n  const mountRef = useRef();\r\n  const sceneRef = useRef();\r\n  const rendererRef = useRef();\r\n  const cameraRef = useRef();\r\n  const meshesRef = useRef([]);\r\n  const textMeshesRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    const width = mountRef.current.clientWidth;\r\n    const height = mountRef.current.clientHeight;\r\n\r\n    // Scene setup - VR deep space\r\n    const scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(0x000000);\r\n    scene.fog = new THREE.Fog(0x000000, 30, 200);\r\n    sceneRef.current = scene;\r\n\r\n    // Camera - VR wide FOV\r\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\r\n    camera.position.set(0, 0, 0);\r\n    cameraRef.current = camera;\r\n\r\n    // Renderer - VR quality\r\n    const renderer = new THREE.WebGLRenderer({ \r\n      antialias: true, \r\n      alpha: false,\r\n      powerPreference: \"high-performance\"\r\n    });\r\n    renderer.setSize(width, height);\r\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\r\n    renderer.outputColorSpace = THREE.SRGBColorSpace;\r\n    renderer.toneMapping = THREE.ACESFilmicToneMapping;\r\n    renderer.toneMappingExposure = 1.5;\r\n    mountRef.current.appendChild(renderer.domElement);\r\n    rendererRef.current = renderer;\r\n\r\n    // VR atmospheric lighting\r\n    const ambientLight = new THREE.AmbientLight(0x222244, 0.3);\r\n    scene.add(ambientLight);\r\n\r\n    const light1 = new THREE.PointLight(0x4080ff, 2, 150);\r\n    light1.position.set(-40, 30, 20);\r\n    scene.add(light1);\r\n\r\n    const light2 = new THREE.PointLight(0xff4080, 1.5, 150);\r\n    light2.position.set(40, -30, -20);\r\n    scene.add(light2);\r\n\r\n    const light3 = new THREE.PointLight(0x80ff40, 1, 150);\r\n    light3.position.set(0, 40, 30);\r\n    scene.add(light3);\r\n\r\n    // Create VR gallery - circular layout\r\n    const meshes = [];\r\n    const textMeshes = [];\r\n    const loader = new THREE.TextureLoader();\r\n    \r\n    projects.forEach((project, i) => {\r\n      // VR circular arrangement\r\n      const radius = 50;\r\n      const angle = (i / projects.length) * Math.PI * 2;\r\n      const elevation = Math.sin(i * 0.8) * 12;\r\n      \r\n      const x = Math.cos(angle) * radius;\r\n      const y = elevation;\r\n      const z = Math.sin(angle) * radius;\r\n\r\n      // Create floating panels\r\n      const geometry = new THREE.PlaneGeometry(8, 10);\r\n      \r\n      loader.load(project.url, (texture) => {\r\n        texture.colorSpace = THREE.SRGBColorSpace;\r\n        texture.flipY = false;\r\n        \r\n        const material = new THREE.MeshStandardMaterial({\r\n          map: texture,\r\n          side: THREE.DoubleSide,\r\n          transparent: true,\r\n          opacity: 0.9,\r\n          emissive: new THREE.Color(0x001122),\r\n          emissiveIntensity: 0.2,\r\n          roughness: 0.1,\r\n          metalness: 0.2\r\n        });\r\n\r\n        const mesh = new THREE.Mesh(geometry, material);\r\n        mesh.position.set(x, y, z);\r\n        mesh.lookAt(0, 0, 0);\r\n        \r\n        mesh.userData = {\r\n          originalPosition: mesh.position.clone(),\r\n          originalRotation: mesh.rotation.clone(),\r\n          floatOffset: Math.random() * Math.PI * 2,\r\n          index: i,\r\n          project: project\r\n        };\r\n        \r\n        scene.add(mesh);\r\n        meshes.push(mesh);\r\n\r\n        // VR holographic text\r\n        const canvas = document.createElement('canvas');\r\n        const context = canvas.getContext('2d');\r\n        canvas.width = 512;\r\n        canvas.height = 256;\r\n        \r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n        \r\n        context.shadowColor = '#00ffff';\r\n        context.shadowBlur = 25;\r\n        context.fillStyle = '#ffffff';\r\n        context.font = 'bold 32px Arial';\r\n        context.textAlign = 'center';\r\n        context.fillText(project.title, canvas.width / 2, 80);\r\n        \r\n        context.shadowBlur = 20;\r\n        context.font = '24px Arial';\r\n        context.fillStyle = '#aaffff';\r\n        context.fillText(project.subtitle, canvas.width / 2, 120);\r\n        \r\n        context.shadowBlur = 15;\r\n        context.font = '18px Arial';\r\n        context.fillStyle = '#00aaff';\r\n        context.fillText(project.year, canvas.width / 2, 160);\r\n        \r\n        const textTexture = new THREE.CanvasTexture(canvas);\r\n        const textMaterial = new THREE.MeshBasicMaterial({\r\n          map: textTexture,\r\n          transparent: true,\r\n          opacity: 0.8,\r\n          blending: THREE.AdditiveBlending\r\n        });\r\n        \r\n        const textGeometry = new THREE.PlaneGeometry(6, 3);\r\n        const textMesh = new THREE.Mesh(textGeometry, textMaterial);\r\n        textMesh.position.set(x, y - 8, z);\r\n        textMesh.lookAt(0, 0, 0);\r\n        \r\n        scene.add(textMesh);\r\n        textMeshes.push(textMesh);\r\n      });\r\n    });\r\n\r\n    meshesRef.current = meshes;\r\n    textMeshesRef.current = textMeshes;\r\n\r\n    // VR controls\r\n    let rotationX = 0;\r\n    let rotationY = 0;\r\n    let targetRotationX = 0;\r\n    let targetRotationY = 0;\r\n    let isMouseDown = false;\r\n    let mouseDownX = 0;\r\n    let mouseDownY = 0;\r\n\r\n    const handleMouseMove = (event) => {\r\n      if (isMouseDown) {\r\n        const deltaX = event.clientX - mouseDownX;\r\n        const deltaY = event.clientY - mouseDownY;\r\n        \r\n        targetRotationY += deltaX * 0.006;\r\n        targetRotationX += deltaY * 0.006;\r\n        targetRotationX = Math.max(-Math.PI / 2, Math.min(Math.PI / 2, targetRotationX));\r\n        \r\n        mouseDownX = event.clientX;\r\n        mouseDownY = event.clientY;\r\n      }\r\n    };\r\n\r\n    const handleMouseDown = (event) => {\r\n      isMouseDown = true;\r\n      mouseDownX = event.clientX;\r\n      mouseDownY = event.clientY;\r\n    };\r\n\r\n    const handleMouseUp = () => {\r\n      isMouseDown = false;\r\n    };\r\n\r\n    // VR animation loop\r\n    let time = 0;\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      time += 0.015;\r\n\r\n      // Smooth VR camera rotation\r\n      rotationX += (targetRotationX - rotationX) * 0.1;\r\n      rotationY += (targetRotationY - rotationY) * 0.1;\r\n\r\n      camera.rotation.x = rotationX;\r\n      camera.rotation.y = rotationY;\r\n\r\n      // Floating VR panels\r\n      [...meshes, ...textMeshes].forEach((mesh) => {\r\n        if (!mesh.userData || !mesh.userData.originalPosition) return;\r\n        \r\n        const floatY = Math.sin(time + mesh.userData.floatOffset) * 1.5;\r\n        const floatX = Math.cos(time * 0.6 + mesh.userData.floatOffset) * 0.8;\r\n        const floatZ = Math.sin(time * 0.4 + mesh.userData.floatOffset) * 0.8;\r\n        \r\n        mesh.position.x = mesh.userData.originalPosition.x + floatX;\r\n        mesh.position.y = mesh.userData.originalPosition.y + floatY;\r\n        mesh.position.z = mesh.userData.originalPosition.z + floatZ;\r\n        \r\n        mesh.rotation.z = Math.sin(time * 0.3 + mesh.userData.floatOffset) * 0.08;\r\n      });\r\n\r\n      // Auto rotation\r\n      if (!isMouseDown) {\r\n        targetRotationY += 0.002;\r\n      }\r\n\r\n      // Dynamic lighting\r\n      scene.children.forEach(child => {\r\n        if (child.type === 'PointLight') {\r\n          child.position.x = Math.cos(time * 0.4) * 50;\r\n          child.position.z = Math.sin(time * 0.4) * 50;\r\n        }\r\n      });\r\n\r\n      renderer.render(scene, camera);\r\n    };\r\n\r\n    animate();\r\n\r\n    // Event listeners\r\n    renderer.domElement.addEventListener('mousemove', handleMouseMove);\r\n    renderer.domElement.addEventListener('mousedown', handleMouseDown);\r\n    renderer.domElement.addEventListener('mouseup', handleMouseUp);\r\n\r\n    // Resize handler\r\n    const handleResize = () => {\r\n      const width = mountRef.current.clientWidth;\r\n      const height = mountRef.current.clientHeight;\r\n      \r\n      camera.aspect = width / height;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(width, height);\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Cleanup\r\n    return () => {\r\n      renderer.domElement.removeEventListener('mousemove', handleMouseMove);\r\n      renderer.domElement.removeEventListener('mousedown', handleMouseDown);\r\n      renderer.domElement.removeEventListener('mouseup', handleMouseUp);\r\n      window.removeEventListener('resize', handleResize);\r\n      \r\n      [...meshes, ...textMeshes].forEach(mesh => {\r\n        scene.remove(mesh);\r\n        if (mesh.geometry) mesh.geometry.dispose();\r\n        if (mesh.material) {\r\n          if (mesh.material.map) mesh.material.map.dispose();\r\n          mesh.material.dispose();\r\n        }\r\n      });\r\n      \r\n      renderer.dispose();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"w-full h-screen bg-black overflow-hidden\">\r\n      <div\r\n        ref={mountRef}\r\n        className=\"w-full h-full cursor-grab active:cursor-grabbing\"\r\n        style={{ background: '#000000' }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Carousel3D;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}