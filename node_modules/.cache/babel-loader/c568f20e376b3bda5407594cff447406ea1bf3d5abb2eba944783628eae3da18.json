{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srk\\\\Downloads\\\\arq_phantom_clone\\\\src\\\\components\\\\Carousel3D.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst videos = [{\n  url: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4',\n  title: 'STRONGER WITH YOU',\n  year: '2024',\n  color: '#ff6b6b'\n}, {\n  url: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ElephantsDream.mp4',\n  title: 'INTENSO',\n  year: '2023',\n  color: '#4ecdc4'\n}, {\n  url: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerBlazes.mp4',\n  title: 'THE SCENT',\n  year: '2024',\n  color: '#45b7d1'\n}, {\n  url: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerEscapes.mp4',\n  title: 'SAUVAGE',\n  year: '2022',\n  color: '#f9ca24'\n}, {\n  url: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerFun.mp4',\n  title: 'LE MALE',\n  year: '2023',\n  color: '#ff9ff3'\n}, {\n  url: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerJoyrides.mp4',\n  title: 'BLEU DE CHANEL',\n  year: '2024',\n  color: '#70a1ff'\n}];\nconst VRPerfumeGallery = () => {\n  _s();\n  const mountRef = useRef();\n  const sceneRef = useRef();\n  const rendererRef = useRef();\n  const cameraRef = useRef();\n  const videoElements = useRef([]);\n  const panelGroups = useRef([]);\n  const frameId = useRef();\n  const raycaster = useRef(new THREE.Raycaster());\n  const mouse = useRef(new THREE.Vector2());\n  const [isVRSupported, setIsVRSupported] = useState(false);\n  const [isVRActive, setIsVRActive] = useState(false);\n  const [selectedPanel, setSelectedPanel] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Enhanced VR movement state\n  const vrState = useRef({\n    rotation: {\n      x: 0,\n      y: 0\n    },\n    targetRotation: {\n      x: 0,\n      y: 0\n    },\n    position: {\n      x: 0,\n      y: 0,\n      z: 0\n    },\n    targetPosition: {\n      x: 0,\n      y: 0,\n      z: 0\n    },\n    isMoving: false,\n    lastMouseX: 0,\n    lastMouseY: 0,\n    velocity: {\n      x: 0,\n      y: 0,\n      z: 0\n    },\n    teleportTarget: null\n  });\n\n  // Audio context for spatial audio\n  const audioContext = useRef();\n  const audioSources = useRef([]);\n  const initAudio = useCallback(() => {\n    try {\n      audioContext.current = new (window.AudioContext || window.webkitAudioContext)();\n    } catch (error) {\n      console.warn('Audio context not supported:', error);\n    }\n  }, []);\n  const createSpatialAudio = useCallback((video, position) => {\n    if (!audioContext.current) return;\n    try {\n      const source = audioContext.current.createMediaElementSource(video);\n      const panner = audioContext.current.createPanner();\n      panner.panningModel = 'HRTF';\n      panner.distanceModel = 'inverse';\n      panner.refDistance = 1;\n      panner.maxDistance = 50;\n      panner.rolloffFactor = 1;\n      panner.coneInnerAngle = 360;\n      panner.coneOuterAngle = 0;\n      panner.coneOuterGain = 0;\n      panner.setPosition(position.x, position.y, position.z);\n      source.connect(panner);\n      panner.connect(audioContext.current.destination);\n      audioSources.current.push({\n        panner,\n        position\n      });\n    } catch (error) {\n      console.warn('Spatial audio setup failed:', error);\n    }\n  }, []);\n  const handlePanelClick = useCallback(panelIndex => {\n    setSelectedPanel(panelIndex);\n    const targetPanel = panelGroups.current[panelIndex];\n    if (targetPanel) {\n      // Smooth movement to selected panel\n      const panelPosition = targetPanel.position;\n      const direction = new THREE.Vector3().copy(panelPosition).normalize();\n      const targetPos = direction.multiplyScalar(-15).add(panelPosition);\n      vrState.current.targetPosition = {\n        x: targetPos.x,\n        y: targetPos.y,\n        z: targetPos.z\n      };\n\n      // Look at the panel\n      const lookDirection = new THREE.Vector3().subVectors(panelPosition, targetPos).normalize();\n      vrState.current.targetRotation.y = Math.atan2(lookDirection.x, lookDirection.z);\n      vrState.current.targetRotation.x = Math.asin(-lookDirection.y);\n    }\n  }, []);\n  const createTeleportationSystem = useCallback(scene => {\n    // Create teleport indicator\n    const teleportGeometry = new THREE.RingGeometry(0.5, 1, 16);\n    const teleportMaterial = new THREE.MeshBasicMaterial({\n      color: 0x00ff00,\n      transparent: true,\n      opacity: 0.7,\n      side: THREE.DoubleSide\n    });\n    const teleportIndicator = new THREE.Mesh(teleportGeometry, teleportMaterial);\n    teleportIndicator.rotation.x = -Math.PI / 2;\n    teleportIndicator.visible = false;\n    scene.add(teleportIndicator);\n    return teleportIndicator;\n  }, []);\n  useEffect(() => {\n    if (!mountRef.current) return;\n    const width = mountRef.current.clientWidth;\n    const height = mountRef.current.clientHeight;\n\n    // Scene setup with enhanced environment\n    const scene = new THREE.Scene();\n    scene.fog = new THREE.Fog(0x0a0a0a, 30, 100);\n    sceneRef.current = scene;\n\n    // Create immersive space environment\n    const starGeometry = new THREE.BufferGeometry();\n    const starMaterial = new THREE.PointsMaterial({\n      color: 0xffffff,\n      size: 0.8,\n      transparent: true,\n      opacity: 0.8,\n      sizeAttenuation: true\n    });\n    const starVertices = [];\n    const starColors = [];\n    for (let i = 0; i < 15000; i++) {\n      const x = (Math.random() - 0.5) * 3000;\n      const y = (Math.random() - 0.5) * 3000;\n      const z = (Math.random() - 0.5) * 3000;\n      starVertices.push(x, y, z);\n\n      // Add some colored stars\n      const color = Math.random() > 0.95 ? new THREE.Color().setHSL(Math.random(), 0.7, 0.8) : new THREE.Color(1, 1, 1);\n      starColors.push(color.r, color.g, color.b);\n    }\n    starGeometry.setAttribute('position', new THREE.Float32BufferAttribute(starVertices, 3));\n    starGeometry.setAttribute('color', new THREE.Float32BufferAttribute(starColors, 3));\n    const stars = new THREE.Points(starGeometry, starMaterial);\n    scene.add(stars);\n\n    // Add nebula-like background\n    const nebulaGeometry = new THREE.SphereGeometry(200, 32, 16);\n    const nebulaMaterial = new THREE.MeshBasicMaterial({\n      color: 0x220066,\n      transparent: true,\n      opacity: 0.1,\n      side: THREE.BackSide\n    });\n    const nebula = new THREE.Mesh(nebulaGeometry, nebulaMaterial);\n    scene.add(nebula);\n\n    // Camera setup with improved parameters\n    const camera = new THREE.PerspectiveCamera(85, width / height, 0.1, 2000);\n    camera.position.set(0, 2, 30);\n    cameraRef.current = camera;\n\n    // Enhanced renderer setup\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: false,\n      powerPreference: \"high-performance\",\n      stencil: false,\n      depth: true\n    });\n    renderer.setSize(width, height);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    renderer.toneMapping = THREE.ACESFilmicToneMapping;\n    renderer.toneMappingExposure = 1.4;\n    renderer.outputColorSpace = THREE.SRGBColorSpace;\n    rendererRef.current = renderer;\n\n    // VR support check\n    if ('xr' in navigator) {\n      navigator.xr.isSessionSupported('immersive-vr').then(supported => {\n        setIsVRSupported(supported);\n        if (supported) {\n          renderer.xr.enabled = true;\n        }\n      });\n    }\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Enhanced lighting system\n    const ambientLight = new THREE.AmbientLight(0x404060, 0.4);\n    scene.add(ambientLight);\n    const keyLight = new THREE.DirectionalLight(0xffffff, 1.2);\n    keyLight.position.set(20, 20, 10);\n    keyLight.castShadow = true;\n    keyLight.shadow.mapSize.width = 4096;\n    keyLight.shadow.mapSize.height = 4096;\n    keyLight.shadow.camera.near = 0.1;\n    keyLight.shadow.camera.far = 200;\n    keyLight.shadow.camera.left = -50;\n    keyLight.shadow.camera.right = 50;\n    keyLight.shadow.camera.top = 50;\n    keyLight.shadow.camera.bottom = -50;\n    scene.add(keyLight);\n\n    // Add rim lighting\n    const rimLight = new THREE.DirectionalLight(0x4488ff, 0.6);\n    rimLight.position.set(-20, 10, -10);\n    scene.add(rimLight);\n\n    // Point lights for atmosphere\n    const pointLight1 = new THREE.PointLight(0xff4488, 2, 50);\n    pointLight1.position.set(30, 10, 30);\n    scene.add(pointLight1);\n    const pointLight2 = new THREE.PointLight(0x44ff88, 2, 50);\n    pointLight2.position.set(-30, 10, -30);\n    scene.add(pointLight2);\n\n    // Enhanced floating particles system\n    const particleGeometry = new THREE.BufferGeometry();\n    const particleCount = 2000;\n    const particlePositions = new Float32Array(particleCount * 3);\n    const particleColors = new Float32Array(particleCount * 3);\n    const particleSizes = new Float32Array(particleCount);\n    const particleVelocities = new Float32Array(particleCount * 3);\n    for (let i = 0; i < particleCount; i++) {\n      particlePositions[i * 3] = (Math.random() - 0.5) * 150;\n      particlePositions[i * 3 + 1] = (Math.random() - 0.5) * 150;\n      particlePositions[i * 3 + 2] = (Math.random() - 0.5) * 150;\n      const color = new THREE.Color();\n      color.setHSL(Math.random(), 0.8, 0.6);\n      particleColors[i * 3] = color.r;\n      particleColors[i * 3 + 1] = color.g;\n      particleColors[i * 3 + 2] = color.b;\n      particleSizes[i] = Math.random() * 0.3 + 0.1;\n      particleVelocities[i * 3] = (Math.random() - 0.5) * 0.02;\n      particleVelocities[i * 3 + 1] = (Math.random() - 0.5) * 0.02;\n      particleVelocities[i * 3 + 2] = (Math.random() - 0.5) * 0.02;\n    }\n    particleGeometry.setAttribute('position', new THREE.BufferAttribute(particlePositions, 3));\n    particleGeometry.setAttribute('color', new THREE.BufferAttribute(particleColors, 3));\n    particleGeometry.setAttribute('size', new THREE.BufferAttribute(particleSizes, 1));\n    const particleMaterial = new THREE.PointsMaterial({\n      size: 0.2,\n      vertexColors: true,\n      transparent: true,\n      opacity: 0.8,\n      blending: THREE.AdditiveBlending,\n      sizeAttenuation: true\n    });\n    const particles = new THREE.Points(particleGeometry, particleMaterial);\n    scene.add(particles);\n\n    // Create teleportation system\n    const teleportIndicator = createTeleportationSystem(scene);\n\n    // Initialize audio\n    initAudio();\n\n    // Enhanced video panels with better interactivity\n    const radius = 35;\n    const panels = [];\n    let loadedVideos = 0;\n    videos.forEach((video, index) => {\n      const angle = index / videos.length * Math.PI * 2;\n      const height = Math.sin(index * 0.8) * 8; // More varied heights\n\n      const x = Math.cos(angle) * radius;\n      const z = Math.sin(angle) * radius;\n      const y = height + 5;\n\n      // Create video element with better loading\n      const videoElement = document.createElement('video');\n      videoElement.src = video.url;\n      videoElement.muted = true;\n      videoElement.loop = true;\n      videoElement.playsInline = true;\n      videoElement.crossOrigin = 'anonymous';\n      videoElement.preload = 'metadata';\n      videoElement.addEventListener('loadeddata', () => {\n        videoElement.play().catch(console.error);\n        loadedVideos++;\n        if (loadedVideos === videos.length) {\n          setIsLoading(false);\n        }\n      });\n      videoElements.current.push(videoElement);\n\n      // Create spatial audio for this video\n      createSpatialAudio(videoElement, {\n        x,\n        y,\n        z\n      });\n\n      // Create video texture with better filtering\n      const videoTexture = new THREE.VideoTexture(videoElement);\n      videoTexture.minFilter = THREE.LinearFilter;\n      videoTexture.magFilter = THREE.LinearFilter;\n      videoTexture.format = THREE.RGBFormat;\n\n      // Enhanced panel group\n      const panelGroup = new THREE.Group();\n      panelGroup.userData = {\n        index,\n        video,\n        interactive: true\n      };\n\n      // Create holographic frame with animated colors\n      const frameGeometry = new THREE.RingGeometry(5, 5.8, 64);\n      const frameMaterial = new THREE.MeshBasicMaterial({\n        color: new THREE.Color(video.color),\n        transparent: true,\n        opacity: 0.8,\n        side: THREE.DoubleSide\n      });\n      const frame = new THREE.Mesh(frameGeometry, frameMaterial);\n      panelGroup.add(frame);\n\n      // Enhanced video screen with rounded corners effect\n      const screenGeometry = new THREE.PlaneGeometry(10, 7.5, 32, 32);\n      const screenMaterial = new THREE.MeshLambertMaterial({\n        map: videoTexture,\n        transparent: true,\n        opacity: 0.95,\n        side: THREE.DoubleSide\n      });\n      const screen = new THREE.Mesh(screenGeometry, screenMaterial);\n      screen.castShadow = true;\n      screen.receiveShadow = true;\n      panelGroup.add(screen);\n\n      // Multi-layered glow effect\n      for (let i = 0; i < 3; i++) {\n        const glowSize = 11 + i * 1.5;\n        const glowGeometry = new THREE.PlaneGeometry(glowSize, glowSize * 0.75);\n        const glowMaterial = new THREE.MeshBasicMaterial({\n          color: new THREE.Color(video.color),\n          transparent: true,\n          opacity: 0.1 - i * 0.03,\n          blending: THREE.AdditiveBlending,\n          side: THREE.DoubleSide\n        });\n        const glow = new THREE.Mesh(glowGeometry, glowMaterial);\n        glow.position.z = -0.1 - i * 0.05;\n        panelGroup.add(glow);\n      }\n\n      // Enhanced title with better typography\n      const canvas = document.createElement('canvas');\n      canvas.width = 1024;\n      canvas.height = 256;\n      const context = canvas.getContext('2d');\n\n      // Gradient background\n      const gradient = context.createLinearGradient(0, 0, canvas.width, 0);\n      gradient.addColorStop(0, 'rgba(0,0,0,0.8)');\n      gradient.addColorStop(0.5, 'rgba(0,0,0,0.9)');\n      gradient.addColorStop(1, 'rgba(0,0,0,0.8)');\n      context.fillStyle = gradient;\n      context.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Title text with shadow\n      context.shadowColor = video.color;\n      context.shadowBlur = 20;\n      context.fillStyle = '#ffffff';\n      context.font = 'bold 48px Arial, sans-serif';\n      context.textAlign = 'center';\n      context.fillText(video.title, 512, 100);\n\n      // Year text\n      context.shadowBlur = 10;\n      context.font = '32px Arial, sans-serif';\n      context.fillStyle = '#cccccc';\n      context.fillText(video.year, 512, 160);\n\n      // Brand accent\n      context.shadowBlur = 15;\n      context.fillStyle = video.color;\n      context.font = 'italic 24px Arial, sans-serif';\n      context.fillText('PARFUM COLLECTION', 512, 200);\n      const textTexture = new THREE.CanvasTexture(canvas);\n      textTexture.needsUpdate = true;\n      const textGeometry = new THREE.PlaneGeometry(8, 2);\n      const textMaterial = new THREE.MeshBasicMaterial({\n        map: textTexture,\n        transparent: true,\n        opacity: 0.9\n      });\n      const textMesh = new THREE.Mesh(textGeometry, textMaterial);\n      textMesh.position.y = -5.5;\n      panelGroup.add(textMesh);\n\n      // Add interaction zone (invisible mesh for raycasting)\n      const interactionGeometry = new THREE.PlaneGeometry(12, 10);\n      const interactionMaterial = new THREE.MeshBasicMaterial({\n        transparent: true,\n        opacity: 0,\n        side: THREE.DoubleSide\n      });\n      const interactionMesh = new THREE.Mesh(interactionGeometry, interactionMaterial);\n      interactionMesh.userData = {\n        interactive: true,\n        panelIndex: index\n      };\n      panelGroup.add(interactionMesh);\n      panelGroup.position.set(x, y, z);\n      panelGroup.lookAt(0, y, 0);\n\n      // Staggered entrance animation\n      panelGroup.scale.setScalar(0);\n      panelGroup.rotation.y += Math.PI;\n      panels.push(panelGroup);\n      panelGroups.current.push(panelGroup);\n      scene.add(panelGroup);\n\n      // Enhanced entrance animation\n      const animateIn = () => {\n        const targetScale = 1;\n        const targetRotationY = panelGroup.rotation.y - Math.PI;\n        const currentScale = panelGroup.scale.x;\n        const currentRotationY = panelGroup.rotation.y;\n        if (currentScale < targetScale || Math.abs(currentRotationY - targetRotationY) > 0.01) {\n          panelGroup.scale.setScalar(Math.min(targetScale, currentScale + 0.03));\n          panelGroup.rotation.y += (targetRotationY - currentRotationY) * 0.1;\n          requestAnimationFrame(animateIn);\n        }\n      };\n      setTimeout(() => {\n        animateIn();\n      }, index * 300);\n    });\n\n    // Enhanced mouse/touch controls\n    const handlePointerDown = event => {\n      vrState.current.isMoving = true;\n      vrState.current.lastMouseX = event.clientX || event.touches[0].clientX;\n      vrState.current.lastMouseY = event.clientY || event.touches[0].clientY;\n\n      // Check for panel clicks\n      const rect = renderer.domElement.getBoundingClientRect();\n      mouse.current.x = (event.clientX - rect.left) / rect.width * 2 - 1;\n      mouse.current.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n      raycaster.current.setFromCamera(mouse.current, camera);\n      const intersects = raycaster.current.intersectObjects(scene.children, true);\n      for (let intersect of intersects) {\n        if (intersect.object.userData.interactive && intersect.object.userData.panelIndex !== undefined) {\n          handlePanelClick(intersect.object.userData.panelIndex);\n          break;\n        }\n      }\n    };\n    const handlePointerMove = event => {\n      if (!vrState.current.isMoving) {\n        // Hover effects\n        const rect = renderer.domElement.getBoundingClientRect();\n        mouse.current.x = (event.clientX - rect.left) / rect.width * 2 - 1;\n        mouse.current.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n        raycaster.current.setFromCamera(mouse.current, camera);\n        const intersects = raycaster.current.intersectObjects(scene.children, true);\n\n        // Reset all panels\n        panelGroups.current.forEach(group => {\n          if (group.userData.hovered) {\n            group.userData.hovered = false;\n          }\n        });\n\n        // Set hovered panel\n        for (let intersect of intersects) {\n          if (intersect.object.userData.interactive && intersect.object.userData.panelIndex !== undefined) {\n            const panelIndex = intersect.object.userData.panelIndex;\n            panelGroups.current[panelIndex].userData.hovered = true;\n            document.body.style.cursor = 'pointer';\n            break;\n          } else {\n            document.body.style.cursor = 'default';\n          }\n        }\n        return;\n      }\n      const clientX = event.clientX || event.touches && event.touches[0].clientX;\n      const clientY = event.clientY || event.touches && event.touches[0].clientY;\n      const deltaX = clientX - vrState.current.lastMouseX;\n      const deltaY = clientY - vrState.current.lastMouseY;\n      vrState.current.targetRotation.y += deltaX * 0.008;\n      vrState.current.targetRotation.x += deltaY * 0.008;\n      vrState.current.targetRotation.x = Math.max(-Math.PI / 2.5, Math.min(Math.PI / 2.5, vrState.current.targetRotation.x));\n      vrState.current.lastMouseX = clientX;\n      vrState.current.lastMouseY = clientY;\n    };\n    const handlePointerUp = () => {\n      vrState.current.isMoving = false;\n    };\n\n    // Enhanced keyboard controls\n    const keys = {};\n    const handleKeyDown = event => {\n      keys[event.code] = true;\n\n      // Quick panel selection\n      const num = parseInt(event.key);\n      if (num >= 1 && num <= videos.length) {\n        handlePanelClick(num - 1);\n      }\n      if (event.code === 'Space') {\n        event.preventDefault();\n        // Reset to center\n        vrState.current.targetPosition = {\n          x: 0,\n          y: 2,\n          z: 30\n        };\n        vrState.current.targetRotation = {\n          x: 0,\n          y: 0\n        };\n        setSelectedPanel(null);\n      }\n    };\n    const handleKeyUp = event => {\n      keys[event.code] = false;\n    };\n\n    // Add event listeners\n    const canvas = renderer.domElement;\n    canvas.addEventListener('mousedown', handlePointerDown);\n    canvas.addEventListener('mousemove', handlePointerMove);\n    canvas.addEventListener('mouseup', handlePointerUp);\n    canvas.addEventListener('mouseleave', handlePointerUp);\n    canvas.addEventListener('touchstart', handlePointerDown, {\n      passive: true\n    });\n    canvas.addEventListener('touchmove', handlePointerMove, {\n      passive: true\n    });\n    canvas.addEventListener('touchend', handlePointerUp);\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n\n    // Enhanced animation loop\n    const animate = () => {\n      var _particleGeometry$use;\n      frameId.current = requestAnimationFrame(animate);\n      const time = Date.now() * 0.001;\n      const deltaTime = 0.016; // Assume 60fps\n\n      // Smooth camera movement with easing\n      const lerpFactor = 0.08;\n      vrState.current.rotation.y += (vrState.current.targetRotation.y - vrState.current.rotation.y) * lerpFactor;\n      vrState.current.rotation.x += (vrState.current.targetRotation.x - vrState.current.rotation.x) * lerpFactor;\n      vrState.current.position.x += (vrState.current.targetPosition.x - vrState.current.position.x) * lerpFactor;\n      vrState.current.position.y += (vrState.current.targetPosition.y - vrState.current.position.y) * lerpFactor;\n      vrState.current.position.z += (vrState.current.targetPosition.z - vrState.current.position.z) * lerpFactor;\n\n      // Enhanced keyboard movement with momentum\n      const moveSpeed = 1.2;\n      const acceleration = 0.2;\n      const friction = 0.85;\n      if (keys['KeyW'] || keys['ArrowUp']) {\n        vrState.current.velocity.z -= acceleration;\n      }\n      if (keys['KeyS'] || keys['ArrowDown']) {\n        vrState.current.velocity.z += acceleration;\n      }\n      if (keys['KeyA'] || keys['ArrowLeft']) {\n        vrState.current.velocity.x -= acceleration;\n      }\n      if (keys['KeyD'] || keys['ArrowRight']) {\n        vrState.current.velocity.x += acceleration;\n      }\n      if (keys['KeyQ']) {\n        vrState.current.velocity.y += acceleration;\n      }\n      if (keys['KeyE']) {\n        vrState.current.velocity.y -= acceleration;\n      }\n\n      // Apply velocity with friction\n      vrState.current.velocity.x *= friction;\n      vrState.current.velocity.y *= friction;\n      vrState.current.velocity.z *= friction;\n      vrState.current.targetPosition.x += vrState.current.velocity.x * moveSpeed;\n      vrState.current.targetPosition.y += vrState.current.velocity.y * moveSpeed;\n      vrState.current.targetPosition.z += vrState.current.velocity.z * moveSpeed;\n\n      // Apply camera transformations\n      camera.position.set(vrState.current.position.x, vrState.current.position.y, vrState.current.position.z);\n      camera.rotation.set(vrState.current.rotation.x, vrState.current.rotation.y, 0);\n\n      // Update spatial audio listener position\n      if (audioContext.current && audioContext.current.listener) {\n        audioContext.current.listener.setPosition(camera.position.x, camera.position.y, camera.position.z);\n        const forward = new THREE.Vector3(0, 0, -1);\n        const up = new THREE.Vector3(0, 1, 0);\n        forward.applyQuaternion(camera.quaternion);\n        up.applyQuaternion(camera.quaternion);\n        audioContext.current.listener.setOrientation(forward.x, forward.y, forward.z, up.x, up.y, up.z);\n      }\n\n      // Animate enhanced particles with physics\n      const positions = particles.geometry.attributes.position.array;\n      const velocities = ((_particleGeometry$use = particleGeometry.userData) === null || _particleGeometry$use === void 0 ? void 0 : _particleGeometry$use.velocities) || particleVelocities;\n      for (let i = 0; i < positions.length; i += 3) {\n        positions[i] += velocities[i];\n        positions[i + 1] += velocities[i + 1] + Math.sin(time + positions[i]) * 0.02;\n        positions[i + 2] += velocities[i + 2];\n\n        // Boundary wrapping\n        if (Math.abs(positions[i]) > 75) velocities[i] *= -1;\n        if (Math.abs(positions[i + 1]) > 75) velocities[i + 1] *= -1;\n        if (Math.abs(positions[i + 2]) > 75) velocities[i + 2] *= -1;\n      }\n      particles.geometry.attributes.position.needsUpdate = true;\n      particles.rotation.y = time * 0.05;\n\n      // Enhanced panel animations\n      panelGroups.current.forEach((group, index) => {\n        const offset = time + index * 0.8;\n        const hovered = group.userData.hovered;\n        const selected = selectedPanel === index;\n\n        // Floating animation\n        group.position.y += Math.sin(offset) * 0.015;\n        group.children[0].rotation.z = Math.sin(offset * 1.5) * 0.08; // Frame rotation\n\n        // Hover and selection effects\n        const targetScale = selected ? 1.2 : hovered ? 1.1 : 1.0;\n        const currentScale = group.scale.x;\n        group.scale.setScalar(currentScale + (targetScale - currentScale) * 0.1);\n\n        // Pulsing glow effects\n        for (let i = 2; i < group.children.length - 2; i++) {\n          if (group.children[i].material && group.children[i].material.opacity !== undefined) {\n            const baseOpacity = 0.1 - (i - 2) * 0.03;\n            const pulse = Math.sin(offset * 2 + i) * 0.05;\n            const hoverBoost = hovered ? 0.1 : 0;\n            const selectBoost = selected ? 0.2 : 0;\n            group.children[i].material.opacity = Math.max(0, baseOpacity + pulse + hoverBoost + selectBoost);\n          }\n        }\n\n        // Color shifting for selected panel\n        if (selected && group.children[0].material) {\n          const hue = (time * 0.5 + index) % 1;\n          group.children[0].material.color.setHSL(hue, 0.8, 0.6);\n        }\n      });\n\n      // Animate environment\n      stars.rotation.y = time * 0.01;\n      stars.rotation.x = Math.sin(time * 0.5) * 0.02;\n      nebula.rotation.y = time * 0.003;\n      nebula.material.opacity = 0.1 + Math.sin(time * 0.2) * 0.05;\n\n      // Animate point lights\n      pointLight1.position.x = Math.cos(time * 0.3) * 40;\n      pointLight1.position.z = Math.sin(time * 0.3) * 40;\n      pointLight1.intensity = 2 + Math.sin(time * 2) * 0.5;\n      pointLight2.position.x = Math.cos(time * 0.4 + Math.PI) * 35;\n      pointLight2.position.z = Math.sin(time * 0.4 + Math.PI) * 35;\n      pointLight2.intensity = 2 + Math.cos(time * 1.8) * 0.5;\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Handle resize\n    const handleResize = () => {\n      if (!mountRef.current) return;\n      const width = mountRef.current.clientWidth;\n      const height = mountRef.current.clientHeight;\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      renderer.setSize(width, height);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      if (frameId.current) {\n        cancelAnimationFrame(frameId.current);\n      }\n      canvas.removeEventListener('mousedown', handlePointerDown);\n      canvas.removeEventListener('mousemove', handlePointerMove);\n      canvas.removeEventListener('mouseup', handlePointerUp);\n      canvas.removeEventListener('mouseleave', handlePointerUp);\n      canvas.removeEventListener('touchstart', handlePointerDown);\n      canvas.removeEventListener('touchmove', handlePointerMove);\n      canvas.removeEventListener('touchend', handlePointerUp);\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n      window.removeEventListener('resize', handleResize);\n      videoElements.current.forEach(video => {\n        video.pause();\n        video.src = '';\n      });\n      if (audioContext.current) {\n        audioContext.current.close();\n      }\n      if (mountRef.current && renderer.domElement) {\n        mountRef.current.removeChild(renderer.domElement);\n      }\n      renderer.dispose();\n\n      // Dispose geometries and materials\n      scene.traverse(object => {\n        if (object.geometry) object.geometry.dispose();\n        if (object.material) {\n          if (Array.isArray(object.material)) {\n            object.material.forEach(material => material.dispose());\n          } else {\n            object.material.dispose();\n          }\n        }\n      });\n    };\n  }, [handlePanelClick, createSpatialAudio, createTeleportationSystem, initAudio]);\n  const enterVR = async () => {\n    if (!isVRSupported || !rendererRef.current) return;\n    try {\n      const session = await navigator.xr.requestSession('immersive-vr', {\n        optionalFeatures: ['hand-tracking', 'eye-tracking']\n      });\n      rendererRef.current.xr.setSession(session);\n      setIsVRActive(true);\n\n      // Resume audio context for VR\n      if (audioContext.current && audioContext.current.state === 'suspended') {\n        audioContext.current.resume();\n      }\n      session.addEventListener('end', () => {\n        setIsVRActive(false);\n      });\n    } catch (error) {\n      console.error('Failed to enter VR:', error);\n    }\n  };\n  const resetView = () => {\n    vrState.current.targetPosition = {\n      x: 0,\n      y: 2,\n      z: 30\n    };\n    vrState.current.targetRotation = {\n      x: 0,\n      y: 0\n    };\n    vrState.current.velocity = {\n      x: 0,\n      y: 0,\n      z: 0\n    };\n    setSelectedPanel(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative w-full h-screen bg-black overflow-hidden\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 z-50 flex items-center justify-center bg-black\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-16 h-16 border-4 border-blue-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xl font-semibold\",\n          children: \"Loading VR Gallery...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-400 mt-2\",\n          children: \"Preparing immersive experience\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef,\n      className: \"w-full h-full\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 814,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-4 left-4 z-10 text-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-black bg-opacity-70 p-5 rounded-xl backdrop-blur-md border border-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-3 text-transparent bg-clip-text bg-gradient-to-r from-blue-400 to-purple-400\",\n          children: \"VR Perfume Gallery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-blue-400\",\n              children: \"\\uD83D\\uDDB1\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 824,\n              columnNumber: 14\n            }, this), \" Mouse: Look around\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 823,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-green-400\",\n              children: \"\\u2328\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 827,\n              columnNumber: 14\n            }, this), \" WASD/Arrows: Move\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 826,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-purple-400\",\n              children: \"QE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 830,\n              columnNumber: 14\n            }, this), \" Up/Down\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 829,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-yellow-400\",\n              children: \"1-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 833,\n              columnNumber: 14\n            }, this), \" Select panel\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 832,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-400\",\n              children: \"Space\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 836,\n              columnNumber: 14\n            }, this), \" Reset view\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 835,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-pink-400\",\n              children: \"\\uD83D\\uDCF1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 839,\n              columnNumber: 14\n            }, this), \" Touch: Drag to look\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2 mt-4\",\n          children: [isVRSupported && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: enterVR,\n            disabled: isVRActive,\n            className: \"flex-1 px-4 py-2 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 disabled:from-gray-600 disabled:to-gray-600 rounded-lg text-white font-medium transition-all duration-300 transform hover:scale-105\",\n            children: isVRActive ? '🥽 VR Active' : '🥽 Enter VR'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 845,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetView,\n            className: \"px-4 py-2 bg-gradient-to-r from-gray-600 to-gray-700 hover:from-gray-700 hover:to-gray-800 rounded-lg text-white font-medium transition-all duration-300 transform hover:scale-105\",\n            children: \"\\uD83C\\uDFAF Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 854,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 818,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 6\n    }, this), selectedPanel !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-4 right-4 z-10 text-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-black bg-opacity-70 p-4 rounded-xl backdrop-blur-md border border-gray-700 max-w-xs\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-lg font-bold text-transparent bg-clip-text bg-gradient-to-r from-pink-400 to-yellow-400\",\n          children: videos[selectedPanel].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300\",\n          children: videos[selectedPanel].year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-400 mt-2\",\n          children: \"Selected fragrance in focus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 872,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 867,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 866,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bottom-4 right-4 z-10 text-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-black bg-opacity-70 p-4 rounded-xl backdrop-blur-md border border-gray-700 max-w-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-semibold mb-2 text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-blue-400\",\n          children: \"\\uD83C\\uDF1F Immersive Experience\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 882,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-300 leading-relaxed\",\n          children: \"Navigate through this luxurious perfume gallery. Click on panels to focus, use keyboard or mouse to explore. Experience spatial audio and dynamic lighting in this premium fragrance showcase.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 885,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 881,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 880,\n      columnNumber: 6\n    }, this), process.env.NODE_ENV === 'development' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bottom-4 left-4 z-10 text-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-black bg-opacity-50 p-2 rounded text-xs font-mono\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"VR: \", isVRSupported ? '✅' : '❌']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 897,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Audio: \", audioContext.current ? '🔊' : '🔇']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 898,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Selected: \", selectedPanel !== null ? selectedPanel + 1 : 'None']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 899,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 896,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 895,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 803,\n    columnNumber: 4\n  }, this);\n};\n_s(VRPerfumeGallery, \"mEYrnx/rcMenyzYC2FXj9aDZLkc=\");\n_c = VRPerfumeGallery;\nexport default VRPerfumeGallery;\nvar _c;\n$RefreshReg$(_c, \"VRPerfumeGallery\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","THREE","jsxDEV","_jsxDEV","videos","url","title","year","color","VRPerfumeGallery","_s","mountRef","sceneRef","rendererRef","cameraRef","videoElements","panelGroups","frameId","raycaster","Raycaster","mouse","Vector2","isVRSupported","setIsVRSupported","isVRActive","setIsVRActive","selectedPanel","setSelectedPanel","isLoading","setIsLoading","vrState","rotation","x","y","targetRotation","position","z","targetPosition","isMoving","lastMouseX","lastMouseY","velocity","teleportTarget","audioContext","audioSources","initAudio","current","window","AudioContext","webkitAudioContext","error","console","warn","createSpatialAudio","video","source","createMediaElementSource","panner","createPanner","panningModel","distanceModel","refDistance","maxDistance","rolloffFactor","coneInnerAngle","coneOuterAngle","coneOuterGain","setPosition","connect","destination","push","handlePanelClick","panelIndex","targetPanel","panelPosition","direction","Vector3","copy","normalize","targetPos","multiplyScalar","add","lookDirection","subVectors","Math","atan2","asin","createTeleportationSystem","scene","teleportGeometry","RingGeometry","teleportMaterial","MeshBasicMaterial","transparent","opacity","side","DoubleSide","teleportIndicator","Mesh","PI","visible","width","clientWidth","height","clientHeight","Scene","fog","Fog","starGeometry","BufferGeometry","starMaterial","PointsMaterial","size","sizeAttenuation","starVertices","starColors","i","random","Color","setHSL","r","g","b","setAttribute","Float32BufferAttribute","stars","Points","nebulaGeometry","SphereGeometry","nebulaMaterial","BackSide","nebula","camera","PerspectiveCamera","set","renderer","WebGLRenderer","antialias","alpha","powerPreference","stencil","depth","setSize","setPixelRatio","min","devicePixelRatio","shadowMap","enabled","type","PCFSoftShadowMap","toneMapping","ACESFilmicToneMapping","toneMappingExposure","outputColorSpace","SRGBColorSpace","navigator","xr","isSessionSupported","then","supported","appendChild","domElement","ambientLight","AmbientLight","keyLight","DirectionalLight","castShadow","shadow","mapSize","near","far","left","right","top","bottom","rimLight","pointLight1","PointLight","pointLight2","particleGeometry","particleCount","particlePositions","Float32Array","particleColors","particleSizes","particleVelocities","BufferAttribute","particleMaterial","vertexColors","blending","AdditiveBlending","particles","radius","panels","loadedVideos","forEach","index","angle","length","sin","cos","videoElement","document","createElement","src","muted","loop","playsInline","crossOrigin","preload","addEventListener","play","catch","videoTexture","VideoTexture","minFilter","LinearFilter","magFilter","format","RGBFormat","panelGroup","Group","userData","interactive","frameGeometry","frameMaterial","frame","screenGeometry","PlaneGeometry","screenMaterial","MeshLambertMaterial","map","screen","receiveShadow","glowSize","glowGeometry","glowMaterial","glow","canvas","context","getContext","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","shadowColor","shadowBlur","font","textAlign","fillText","textTexture","CanvasTexture","needsUpdate","textGeometry","textMaterial","textMesh","interactionGeometry","interactionMaterial","interactionMesh","lookAt","scale","setScalar","animateIn","targetScale","targetRotationY","currentScale","currentRotationY","abs","requestAnimationFrame","setTimeout","handlePointerDown","event","clientX","touches","clientY","rect","getBoundingClientRect","setFromCamera","intersects","intersectObjects","children","intersect","object","undefined","handlePointerMove","group","hovered","body","style","cursor","deltaX","deltaY","max","handlePointerUp","keys","handleKeyDown","code","num","parseInt","key","preventDefault","handleKeyUp","passive","animate","_particleGeometry$use","time","Date","now","deltaTime","lerpFactor","moveSpeed","acceleration","friction","listener","forward","up","applyQuaternion","quaternion","setOrientation","positions","geometry","attributes","array","velocities","offset","selected","material","baseOpacity","pulse","hoverBoost","selectBoost","hue","intensity","render","handleResize","aspect","updateProjectionMatrix","cancelAnimationFrame","removeEventListener","pause","close","removeChild","dispose","traverse","Array","isArray","enterVR","session","requestSession","optionalFeatures","setSession","state","resume","resetView","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","disabled","process","env","NODE_ENV","_c","$RefreshReg$"],"sources":["C:/Users/srk/Downloads/arq_phantom_clone/src/components/Carousel3D.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport * as THREE from 'three';\r\n\r\nconst videos = [\r\n  { url: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4', title: 'STRONGER WITH YOU', year: '2024', color: '#ff6b6b' },\r\n  { url: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ElephantsDream.mp4', title: 'INTENSO', year: '2023', color: '#4ecdc4' },\r\n  { url: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerBlazes.mp4', title: 'THE SCENT', year: '2024', color: '#45b7d1' },\r\n  { url: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerEscapes.mp4', title: 'SAUVAGE', year: '2022', color: '#f9ca24' },\r\n  { url: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerFun.mp4', title: 'LE MALE', year: '2023', color: '#ff9ff3' },\r\n  { url: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerJoyrides.mp4', title: 'BLEU DE CHANEL', year: '2024', color: '#70a1ff' },\r\n];\r\n\r\nconst VRPerfumeGallery = () => {\r\n  const mountRef = useRef();\r\n  const sceneRef = useRef();\r\n  const rendererRef = useRef();\r\n  const cameraRef = useRef();\r\n  const videoElements = useRef([]);\r\n  const panelGroups = useRef([]);\r\n  const frameId = useRef();\r\n  const raycaster = useRef(new THREE.Raycaster());\r\n  const mouse = useRef(new THREE.Vector2());\r\n  const [isVRSupported, setIsVRSupported] = useState(false);\r\n  const [isVRActive, setIsVRActive] = useState(false);\r\n  const [selectedPanel, setSelectedPanel] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Enhanced VR movement state\r\n  const vrState = useRef({\r\n    rotation: { x: 0, y: 0 },\r\n    targetRotation: { x: 0, y: 0 },\r\n    position: { x: 0, y: 0, z: 0 },\r\n    targetPosition: { x: 0, y: 0, z: 0 },\r\n    isMoving: false,\r\n    lastMouseX: 0,\r\n    lastMouseY: 0,\r\n    velocity: { x: 0, y: 0, z: 0 },\r\n    teleportTarget: null\r\n  });\r\n\r\n  // Audio context for spatial audio\r\n  const audioContext = useRef();\r\n  const audioSources = useRef([]);\r\n\r\n  const initAudio = useCallback(() => {\r\n    try {\r\n      audioContext.current = new (window.AudioContext || window.webkitAudioContext)();\r\n    } catch (error) {\r\n      console.warn('Audio context not supported:', error);\r\n    }\r\n  }, []);\r\n\r\n  const createSpatialAudio = useCallback((video, position) => {\r\n    if (!audioContext.current) return;\r\n    \r\n    try {\r\n      const source = audioContext.current.createMediaElementSource(video);\r\n      const panner = audioContext.current.createPanner();\r\n      \r\n      panner.panningModel = 'HRTF';\r\n      panner.distanceModel = 'inverse';\r\n      panner.refDistance = 1;\r\n      panner.maxDistance = 50;\r\n      panner.rolloffFactor = 1;\r\n      panner.coneInnerAngle = 360;\r\n      panner.coneOuterAngle = 0;\r\n      panner.coneOuterGain = 0;\r\n      \r\n      panner.setPosition(position.x, position.y, position.z);\r\n      \r\n      source.connect(panner);\r\n      panner.connect(audioContext.current.destination);\r\n      \r\n      audioSources.current.push({ panner, position });\r\n    } catch (error) {\r\n      console.warn('Spatial audio setup failed:', error);\r\n    }\r\n  }, []);\r\n\r\n  const handlePanelClick = useCallback((panelIndex) => {\r\n    setSelectedPanel(panelIndex);\r\n    const targetPanel = panelGroups.current[panelIndex];\r\n    if (targetPanel) {\r\n      // Smooth movement to selected panel\r\n      const panelPosition = targetPanel.position;\r\n      const direction = new THREE.Vector3().copy(panelPosition).normalize();\r\n      const targetPos = direction.multiplyScalar(-15).add(panelPosition);\r\n      \r\n      vrState.current.targetPosition = {\r\n        x: targetPos.x,\r\n        y: targetPos.y,\r\n        z: targetPos.z\r\n      };\r\n      \r\n      // Look at the panel\r\n      const lookDirection = new THREE.Vector3().subVectors(panelPosition, targetPos).normalize();\r\n      vrState.current.targetRotation.y = Math.atan2(lookDirection.x, lookDirection.z);\r\n      vrState.current.targetRotation.x = Math.asin(-lookDirection.y);\r\n    }\r\n  }, []);\r\n\r\n  const createTeleportationSystem = useCallback((scene) => {\r\n    // Create teleport indicator\r\n    const teleportGeometry = new THREE.RingGeometry(0.5, 1, 16);\r\n    const teleportMaterial = new THREE.MeshBasicMaterial({\r\n      color: 0x00ff00,\r\n      transparent: true,\r\n      opacity: 0.7,\r\n      side: THREE.DoubleSide\r\n    });\r\n    const teleportIndicator = new THREE.Mesh(teleportGeometry, teleportMaterial);\r\n    teleportIndicator.rotation.x = -Math.PI / 2;\r\n    teleportIndicator.visible = false;\r\n    scene.add(teleportIndicator);\r\n    \r\n    return teleportIndicator;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!mountRef.current) return;\r\n\r\n    const width = mountRef.current.clientWidth;\r\n    const height = mountRef.current.clientHeight;\r\n\r\n    // Scene setup with enhanced environment\r\n    const scene = new THREE.Scene();\r\n    scene.fog = new THREE.Fog(0x0a0a0a, 30, 100);\r\n    sceneRef.current = scene;\r\n\r\n    // Create immersive space environment\r\n    const starGeometry = new THREE.BufferGeometry();\r\n    const starMaterial = new THREE.PointsMaterial({ \r\n      color: 0xffffff, \r\n      size: 0.8,\r\n      transparent: true,\r\n      opacity: 0.8,\r\n      sizeAttenuation: true\r\n    });\r\n    const starVertices = [];\r\n    const starColors = [];\r\n    \r\n    for (let i = 0; i < 15000; i++) {\r\n      const x = (Math.random() - 0.5) * 3000;\r\n      const y = (Math.random() - 0.5) * 3000;\r\n      const z = (Math.random() - 0.5) * 3000;\r\n      starVertices.push(x, y, z);\r\n      \r\n      // Add some colored stars\r\n      const color = Math.random() > 0.95 ? new THREE.Color().setHSL(Math.random(), 0.7, 0.8) : new THREE.Color(1, 1, 1);\r\n      starColors.push(color.r, color.g, color.b);\r\n    }\r\n    \r\n    starGeometry.setAttribute('position', new THREE.Float32BufferAttribute(starVertices, 3));\r\n    starGeometry.setAttribute('color', new THREE.Float32BufferAttribute(starColors, 3));\r\n    const stars = new THREE.Points(starGeometry, starMaterial);\r\n    scene.add(stars);\r\n\r\n    // Add nebula-like background\r\n    const nebulaGeometry = new THREE.SphereGeometry(200, 32, 16);\r\n    const nebulaMaterial = new THREE.MeshBasicMaterial({\r\n      color: 0x220066,\r\n      transparent: true,\r\n      opacity: 0.1,\r\n      side: THREE.BackSide\r\n    });\r\n    const nebula = new THREE.Mesh(nebulaGeometry, nebulaMaterial);\r\n    scene.add(nebula);\r\n\r\n    // Camera setup with improved parameters\r\n    const camera = new THREE.PerspectiveCamera(85, width / height, 0.1, 2000);\r\n    camera.position.set(0, 2, 30);\r\n    cameraRef.current = camera;\r\n\r\n    // Enhanced renderer setup\r\n    const renderer = new THREE.WebGLRenderer({ \r\n      antialias: true, \r\n      alpha: false,\r\n      powerPreference: \"high-performance\",\r\n      stencil: false,\r\n      depth: true\r\n    });\r\n    renderer.setSize(width, height);\r\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\r\n    renderer.shadowMap.enabled = true;\r\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n    renderer.toneMapping = THREE.ACESFilmicToneMapping;\r\n    renderer.toneMappingExposure = 1.4;\r\n    renderer.outputColorSpace = THREE.SRGBColorSpace;\r\n    rendererRef.current = renderer;\r\n\r\n    // VR support check\r\n    if ('xr' in navigator) {\r\n      navigator.xr.isSessionSupported('immersive-vr').then((supported) => {\r\n        setIsVRSupported(supported);\r\n        if (supported) {\r\n          renderer.xr.enabled = true;\r\n        }\r\n      });\r\n    }\r\n\r\n    mountRef.current.appendChild(renderer.domElement);\r\n\r\n    // Enhanced lighting system\r\n    const ambientLight = new THREE.AmbientLight(0x404060, 0.4);\r\n    scene.add(ambientLight);\r\n\r\n    const keyLight = new THREE.DirectionalLight(0xffffff, 1.2);\r\n    keyLight.position.set(20, 20, 10);\r\n    keyLight.castShadow = true;\r\n    keyLight.shadow.mapSize.width = 4096;\r\n    keyLight.shadow.mapSize.height = 4096;\r\n    keyLight.shadow.camera.near = 0.1;\r\n    keyLight.shadow.camera.far = 200;\r\n    keyLight.shadow.camera.left = -50;\r\n    keyLight.shadow.camera.right = 50;\r\n    keyLight.shadow.camera.top = 50;\r\n    keyLight.shadow.camera.bottom = -50;\r\n    scene.add(keyLight);\r\n\r\n    // Add rim lighting\r\n    const rimLight = new THREE.DirectionalLight(0x4488ff, 0.6);\r\n    rimLight.position.set(-20, 10, -10);\r\n    scene.add(rimLight);\r\n\r\n    // Point lights for atmosphere\r\n    const pointLight1 = new THREE.PointLight(0xff4488, 2, 50);\r\n    pointLight1.position.set(30, 10, 30);\r\n    scene.add(pointLight1);\r\n\r\n    const pointLight2 = new THREE.PointLight(0x44ff88, 2, 50);\r\n    pointLight2.position.set(-30, 10, -30);\r\n    scene.add(pointLight2);\r\n\r\n    // Enhanced floating particles system\r\n    const particleGeometry = new THREE.BufferGeometry();\r\n    const particleCount = 2000;\r\n    const particlePositions = new Float32Array(particleCount * 3);\r\n    const particleColors = new Float32Array(particleCount * 3);\r\n    const particleSizes = new Float32Array(particleCount);\r\n    const particleVelocities = new Float32Array(particleCount * 3);\r\n\r\n    for (let i = 0; i < particleCount; i++) {\r\n      particlePositions[i * 3] = (Math.random() - 0.5) * 150;\r\n      particlePositions[i * 3 + 1] = (Math.random() - 0.5) * 150;\r\n      particlePositions[i * 3 + 2] = (Math.random() - 0.5) * 150;\r\n\r\n      const color = new THREE.Color();\r\n      color.setHSL(Math.random(), 0.8, 0.6);\r\n      particleColors[i * 3] = color.r;\r\n      particleColors[i * 3 + 1] = color.g;\r\n      particleColors[i * 3 + 2] = color.b;\r\n\r\n      particleSizes[i] = Math.random() * 0.3 + 0.1;\r\n      \r\n      particleVelocities[i * 3] = (Math.random() - 0.5) * 0.02;\r\n      particleVelocities[i * 3 + 1] = (Math.random() - 0.5) * 0.02;\r\n      particleVelocities[i * 3 + 2] = (Math.random() - 0.5) * 0.02;\r\n    }\r\n\r\n    particleGeometry.setAttribute('position', new THREE.BufferAttribute(particlePositions, 3));\r\n    particleGeometry.setAttribute('color', new THREE.BufferAttribute(particleColors, 3));\r\n    particleGeometry.setAttribute('size', new THREE.BufferAttribute(particleSizes, 1));\r\n\r\n    const particleMaterial = new THREE.PointsMaterial({\r\n      size: 0.2,\r\n      vertexColors: true,\r\n      transparent: true,\r\n      opacity: 0.8,\r\n      blending: THREE.AdditiveBlending,\r\n      sizeAttenuation: true\r\n    });\r\n\r\n    const particles = new THREE.Points(particleGeometry, particleMaterial);\r\n    scene.add(particles);\r\n\r\n    // Create teleportation system\r\n    const teleportIndicator = createTeleportationSystem(scene);\r\n\r\n    // Initialize audio\r\n    initAudio();\r\n\r\n    // Enhanced video panels with better interactivity\r\n    const radius = 35;\r\n    const panels = [];\r\n    let loadedVideos = 0;\r\n\r\n    videos.forEach((video, index) => {\r\n      const angle = (index / videos.length) * Math.PI * 2;\r\n      const height = Math.sin(index * 0.8) * 8; // More varied heights\r\n      \r\n      const x = Math.cos(angle) * radius;\r\n      const z = Math.sin(angle) * radius;\r\n      const y = height + 5;\r\n\r\n      // Create video element with better loading\r\n      const videoElement = document.createElement('video');\r\n      videoElement.src = video.url;\r\n      videoElement.muted = true;\r\n      videoElement.loop = true;\r\n      videoElement.playsInline = true;\r\n      videoElement.crossOrigin = 'anonymous';\r\n      videoElement.preload = 'metadata';\r\n      \r\n      videoElement.addEventListener('loadeddata', () => {\r\n        videoElement.play().catch(console.error);\r\n        loadedVideos++;\r\n        if (loadedVideos === videos.length) {\r\n          setIsLoading(false);\r\n        }\r\n      });\r\n      \r\n      videoElements.current.push(videoElement);\r\n\r\n      // Create spatial audio for this video\r\n      createSpatialAudio(videoElement, { x, y, z });\r\n\r\n      // Create video texture with better filtering\r\n      const videoTexture = new THREE.VideoTexture(videoElement);\r\n      videoTexture.minFilter = THREE.LinearFilter;\r\n      videoTexture.magFilter = THREE.LinearFilter;\r\n      videoTexture.format = THREE.RGBFormat;\r\n\r\n      // Enhanced panel group\r\n      const panelGroup = new THREE.Group();\r\n      panelGroup.userData = { index, video, interactive: true };\r\n\r\n      // Create holographic frame with animated colors\r\n      const frameGeometry = new THREE.RingGeometry(5, 5.8, 64);\r\n      const frameMaterial = new THREE.MeshBasicMaterial({\r\n        color: new THREE.Color(video.color),\r\n        transparent: true,\r\n        opacity: 0.8,\r\n        side: THREE.DoubleSide\r\n      });\r\n      const frame = new THREE.Mesh(frameGeometry, frameMaterial);\r\n      panelGroup.add(frame);\r\n\r\n      // Enhanced video screen with rounded corners effect\r\n      const screenGeometry = new THREE.PlaneGeometry(10, 7.5, 32, 32);\r\n      const screenMaterial = new THREE.MeshLambertMaterial({\r\n        map: videoTexture,\r\n        transparent: true,\r\n        opacity: 0.95,\r\n        side: THREE.DoubleSide\r\n      });\r\n      const screen = new THREE.Mesh(screenGeometry, screenMaterial);\r\n      screen.castShadow = true;\r\n      screen.receiveShadow = true;\r\n      panelGroup.add(screen);\r\n\r\n      // Multi-layered glow effect\r\n      for (let i = 0; i < 3; i++) {\r\n        const glowSize = 11 + i * 1.5;\r\n        const glowGeometry = new THREE.PlaneGeometry(glowSize, glowSize * 0.75);\r\n        const glowMaterial = new THREE.MeshBasicMaterial({\r\n          color: new THREE.Color(video.color),\r\n          transparent: true,\r\n          opacity: 0.1 - i * 0.03,\r\n          blending: THREE.AdditiveBlending,\r\n          side: THREE.DoubleSide\r\n        });\r\n        const glow = new THREE.Mesh(glowGeometry, glowMaterial);\r\n        glow.position.z = -0.1 - i * 0.05;\r\n        panelGroup.add(glow);\r\n      }\r\n\r\n      // Enhanced title with better typography\r\n      const canvas = document.createElement('canvas');\r\n      canvas.width = 1024;\r\n      canvas.height = 256;\r\n      const context = canvas.getContext('2d');\r\n      \r\n      // Gradient background\r\n      const gradient = context.createLinearGradient(0, 0, canvas.width, 0);\r\n      gradient.addColorStop(0, 'rgba(0,0,0,0.8)');\r\n      gradient.addColorStop(0.5, 'rgba(0,0,0,0.9)');\r\n      gradient.addColorStop(1, 'rgba(0,0,0,0.8)');\r\n      context.fillStyle = gradient;\r\n      context.fillRect(0, 0, canvas.width, canvas.height);\r\n      \r\n      // Title text with shadow\r\n      context.shadowColor = video.color;\r\n      context.shadowBlur = 20;\r\n      context.fillStyle = '#ffffff';\r\n      context.font = 'bold 48px Arial, sans-serif';\r\n      context.textAlign = 'center';\r\n      context.fillText(video.title, 512, 100);\r\n      \r\n      // Year text\r\n      context.shadowBlur = 10;\r\n      context.font = '32px Arial, sans-serif';\r\n      context.fillStyle = '#cccccc';\r\n      context.fillText(video.year, 512, 160);\r\n      \r\n      // Brand accent\r\n      context.shadowBlur = 15;\r\n      context.fillStyle = video.color;\r\n      context.font = 'italic 24px Arial, sans-serif';\r\n      context.fillText('PARFUM COLLECTION', 512, 200);\r\n\r\n      const textTexture = new THREE.CanvasTexture(canvas);\r\n      textTexture.needsUpdate = true;\r\n      const textGeometry = new THREE.PlaneGeometry(8, 2);\r\n      const textMaterial = new THREE.MeshBasicMaterial({\r\n        map: textTexture,\r\n        transparent: true,\r\n        opacity: 0.9\r\n      });\r\n      const textMesh = new THREE.Mesh(textGeometry, textMaterial);\r\n      textMesh.position.y = -5.5;\r\n      panelGroup.add(textMesh);\r\n\r\n      // Add interaction zone (invisible mesh for raycasting)\r\n      const interactionGeometry = new THREE.PlaneGeometry(12, 10);\r\n      const interactionMaterial = new THREE.MeshBasicMaterial({\r\n        transparent: true,\r\n        opacity: 0,\r\n        side: THREE.DoubleSide\r\n      });\r\n      const interactionMesh = new THREE.Mesh(interactionGeometry, interactionMaterial);\r\n      interactionMesh.userData = { interactive: true, panelIndex: index };\r\n      panelGroup.add(interactionMesh);\r\n\r\n      panelGroup.position.set(x, y, z);\r\n      panelGroup.lookAt(0, y, 0);\r\n      \r\n      // Staggered entrance animation\r\n      panelGroup.scale.setScalar(0);\r\n      panelGroup.rotation.y += Math.PI;\r\n      panels.push(panelGroup);\r\n      panelGroups.current.push(panelGroup);\r\n      scene.add(panelGroup);\r\n\r\n      // Enhanced entrance animation\r\n      const animateIn = () => {\r\n        const targetScale = 1;\r\n        const targetRotationY = panelGroup.rotation.y - Math.PI;\r\n        const currentScale = panelGroup.scale.x;\r\n        const currentRotationY = panelGroup.rotation.y;\r\n        \r\n        if (currentScale < targetScale || Math.abs(currentRotationY - targetRotationY) > 0.01) {\r\n          panelGroup.scale.setScalar(Math.min(targetScale, currentScale + 0.03));\r\n          panelGroup.rotation.y += (targetRotationY - currentRotationY) * 0.1;\r\n          requestAnimationFrame(animateIn);\r\n        }\r\n      };\r\n      \r\n      setTimeout(() => {\r\n        animateIn();\r\n      }, index * 300);\r\n    });\r\n\r\n    // Enhanced mouse/touch controls\r\n    const handlePointerDown = (event) => {\r\n      vrState.current.isMoving = true;\r\n      vrState.current.lastMouseX = event.clientX || event.touches[0].clientX;\r\n      vrState.current.lastMouseY = event.clientY || event.touches[0].clientY;\r\n      \r\n      // Check for panel clicks\r\n      const rect = renderer.domElement.getBoundingClientRect();\r\n      mouse.current.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\r\n      mouse.current.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\r\n      \r\n      raycaster.current.setFromCamera(mouse.current, camera);\r\n      const intersects = raycaster.current.intersectObjects(scene.children, true);\r\n      \r\n      for (let intersect of intersects) {\r\n        if (intersect.object.userData.interactive && intersect.object.userData.panelIndex !== undefined) {\r\n          handlePanelClick(intersect.object.userData.panelIndex);\r\n          break;\r\n        }\r\n      }\r\n    };\r\n\r\n    const handlePointerMove = (event) => {\r\n      if (!vrState.current.isMoving) {\r\n        // Hover effects\r\n        const rect = renderer.domElement.getBoundingClientRect();\r\n        mouse.current.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\r\n        mouse.current.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\r\n        \r\n        raycaster.current.setFromCamera(mouse.current, camera);\r\n        const intersects = raycaster.current.intersectObjects(scene.children, true);\r\n        \r\n        // Reset all panels\r\n        panelGroups.current.forEach(group => {\r\n          if (group.userData.hovered) {\r\n            group.userData.hovered = false;\r\n          }\r\n        });\r\n        \r\n        // Set hovered panel\r\n        for (let intersect of intersects) {\r\n          if (intersect.object.userData.interactive && intersect.object.userData.panelIndex !== undefined) {\r\n            const panelIndex = intersect.object.userData.panelIndex;\r\n            panelGroups.current[panelIndex].userData.hovered = true;\r\n            document.body.style.cursor = 'pointer';\r\n            break;\r\n          } else {\r\n            document.body.style.cursor = 'default';\r\n          }\r\n        }\r\n        return;\r\n      }\r\n\r\n      const clientX = event.clientX || (event.touches && event.touches[0].clientX);\r\n      const clientY = event.clientY || (event.touches && event.touches[0].clientY);\r\n\r\n      const deltaX = clientX - vrState.current.lastMouseX;\r\n      const deltaY = clientY - vrState.current.lastMouseY;\r\n\r\n      vrState.current.targetRotation.y += deltaX * 0.008;\r\n      vrState.current.targetRotation.x += deltaY * 0.008;\r\n      vrState.current.targetRotation.x = Math.max(-Math.PI/2.5, Math.min(Math.PI/2.5, vrState.current.targetRotation.x));\r\n\r\n      vrState.current.lastMouseX = clientX;\r\n      vrState.current.lastMouseY = clientY;\r\n    };\r\n\r\n    const handlePointerUp = () => {\r\n      vrState.current.isMoving = false;\r\n    };\r\n\r\n    // Enhanced keyboard controls\r\n    const keys = {};\r\n    const handleKeyDown = (event) => {\r\n      keys[event.code] = true;\r\n      \r\n      // Quick panel selection\r\n      const num = parseInt(event.key);\r\n      if (num >= 1 && num <= videos.length) {\r\n        handlePanelClick(num - 1);\r\n      }\r\n      \r\n      if (event.code === 'Space') {\r\n        event.preventDefault();\r\n        // Reset to center\r\n        vrState.current.targetPosition = { x: 0, y: 2, z: 30 };\r\n        vrState.current.targetRotation = { x: 0, y: 0 };\r\n        setSelectedPanel(null);\r\n      }\r\n    };\r\n    \r\n    const handleKeyUp = (event) => {\r\n      keys[event.code] = false;\r\n    };\r\n\r\n    // Add event listeners\r\n    const canvas = renderer.domElement;\r\n    canvas.addEventListener('mousedown', handlePointerDown);\r\n    canvas.addEventListener('mousemove', handlePointerMove);\r\n    canvas.addEventListener('mouseup', handlePointerUp);\r\n    canvas.addEventListener('mouseleave', handlePointerUp);\r\n    canvas.addEventListener('touchstart', handlePointerDown, { passive: true });\r\n    canvas.addEventListener('touchmove', handlePointerMove, { passive: true });\r\n    canvas.addEventListener('touchend', handlePointerUp);\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    window.addEventListener('keyup', handleKeyUp);\r\n\r\n    // Enhanced animation loop\r\n    const animate = () => {\r\n      frameId.current = requestAnimationFrame(animate);\r\n\r\n      const time = Date.now() * 0.001;\r\n      const deltaTime = 0.016; // Assume 60fps\r\n\r\n      // Smooth camera movement with easing\r\n      const lerpFactor = 0.08;\r\n      vrState.current.rotation.y += (vrState.current.targetRotation.y - vrState.current.rotation.y) * lerpFactor;\r\n      vrState.current.rotation.x += (vrState.current.targetRotation.x - vrState.current.rotation.x) * lerpFactor;\r\n      \r\n      vrState.current.position.x += (vrState.current.targetPosition.x - vrState.current.position.x) * lerpFactor;\r\n      vrState.current.position.y += (vrState.current.targetPosition.y - vrState.current.position.y) * lerpFactor;\r\n      vrState.current.position.z += (vrState.current.targetPosition.z - vrState.current.position.z) * lerpFactor;\r\n\r\n      // Enhanced keyboard movement with momentum\r\n      const moveSpeed = 1.2;\r\n      const acceleration = 0.2;\r\n      const friction = 0.85;\r\n\r\n      if (keys['KeyW'] || keys['ArrowUp']) {\r\n        vrState.current.velocity.z -= acceleration;\r\n      }\r\n      if (keys['KeyS'] || keys['ArrowDown']) {\r\n        vrState.current.velocity.z += acceleration;\r\n      }\r\n      if (keys['KeyA'] || keys['ArrowLeft']) {\r\n        vrState.current.velocity.x -= acceleration;\r\n      }\r\n      if (keys['KeyD'] || keys['ArrowRight']) {\r\n        vrState.current.velocity.x += acceleration;\r\n      }\r\n      if (keys['KeyQ']) {\r\n        vrState.current.velocity.y += acceleration;\r\n      }\r\n      if (keys['KeyE']) {\r\n        vrState.current.velocity.y -= acceleration;\r\n      }\r\n\r\n      // Apply velocity with friction\r\n      vrState.current.velocity.x *= friction;\r\n      vrState.current.velocity.y *= friction;\r\n      vrState.current.velocity.z *= friction;\r\n\r\n      vrState.current.targetPosition.x += vrState.current.velocity.x * moveSpeed;\r\n      vrState.current.targetPosition.y += vrState.current.velocity.y * moveSpeed;\r\n      vrState.current.targetPosition.z += vrState.current.velocity.z * moveSpeed;\r\n\r\n      // Apply camera transformations\r\n      camera.position.set(\r\n        vrState.current.position.x,\r\n        vrState.current.position.y,\r\n        vrState.current.position.z\r\n      );\r\n      camera.rotation.set(\r\n        vrState.current.rotation.x,\r\n        vrState.current.rotation.y,\r\n        0\r\n      );\r\n\r\n      // Update spatial audio listener position\r\n      if (audioContext.current && audioContext.current.listener) {\r\n        audioContext.current.listener.setPosition(\r\n          camera.position.x,\r\n          camera.position.y,\r\n          camera.position.z\r\n        );\r\n        \r\n        const forward = new THREE.Vector3(0, 0, -1);\r\n        const up = new THREE.Vector3(0, 1, 0);\r\n        forward.applyQuaternion(camera.quaternion);\r\n        up.applyQuaternion(camera.quaternion);\r\n        \r\n        audioContext.current.listener.setOrientation(\r\n          forward.x, forward.y, forward.z,\r\n          up.x, up.y, up.z\r\n        );\r\n      }\r\n\r\n      // Animate enhanced particles with physics\r\n      const positions = particles.geometry.attributes.position.array;\r\n      const velocities = particleGeometry.userData?.velocities || particleVelocities;\r\n      \r\n      for (let i = 0; i < positions.length; i += 3) {\r\n        positions[i] += velocities[i];\r\n        positions[i + 1] += velocities[i + 1] + Math.sin(time + positions[i]) * 0.02;\r\n        positions[i + 2] += velocities[i + 2];\r\n        \r\n        // Boundary wrapping\r\n        if (Math.abs(positions[i]) > 75) velocities[i] *= -1;\r\n        if (Math.abs(positions[i + 1]) > 75) velocities[i + 1] *= -1;\r\n        if (Math.abs(positions[i + 2]) > 75) velocities[i + 2] *= -1;\r\n      }\r\n      particles.geometry.attributes.position.needsUpdate = true;\r\n      particles.rotation.y = time * 0.05;\r\n\r\n      // Enhanced panel animations\r\n      panelGroups.current.forEach((group, index) => {\r\n        const offset = time + index * 0.8;\r\n        const hovered = group.userData.hovered;\r\n        const selected = selectedPanel === index;\r\n        \r\n        // Floating animation\r\n        group.position.y += Math.sin(offset) * 0.015;\r\n        group.children[0].rotation.z = Math.sin(offset * 1.5) * 0.08; // Frame rotation\r\n        \r\n        // Hover and selection effects\r\n        const targetScale = selected ? 1.2 : (hovered ? 1.1 : 1.0);\r\n        const currentScale = group.scale.x;\r\n        group.scale.setScalar(currentScale + (targetScale - currentScale) * 0.1);\r\n\r\n        // Pulsing glow effects\r\n       for (let i = 2; i < group.children.length - 2; i++) {\r\n         if (group.children[i].material && group.children[i].material.opacity !== undefined) {\r\n           const baseOpacity = 0.1 - (i - 2) * 0.03;\r\n           const pulse = Math.sin(offset * 2 + i) * 0.05;\r\n           const hoverBoost = hovered ? 0.1 : 0;\r\n           const selectBoost = selected ? 0.2 : 0;\r\n           group.children[i].material.opacity = Math.max(0, baseOpacity + pulse + hoverBoost + selectBoost);\r\n         }\r\n       }\r\n       \r\n       // Color shifting for selected panel\r\n       if (selected && group.children[0].material) {\r\n         const hue = (time * 0.5 + index) % 1;\r\n         group.children[0].material.color.setHSL(hue, 0.8, 0.6);\r\n       }\r\n     });\r\n\r\n     // Animate environment\r\n     stars.rotation.y = time * 0.01;\r\n     stars.rotation.x = Math.sin(time * 0.5) * 0.02;\r\n     \r\n     nebula.rotation.y = time * 0.003;\r\n     nebula.material.opacity = 0.1 + Math.sin(time * 0.2) * 0.05;\r\n\r\n     // Animate point lights\r\n     pointLight1.position.x = Math.cos(time * 0.3) * 40;\r\n     pointLight1.position.z = Math.sin(time * 0.3) * 40;\r\n     pointLight1.intensity = 2 + Math.sin(time * 2) * 0.5;\r\n\r\n     pointLight2.position.x = Math.cos(time * 0.4 + Math.PI) * 35;\r\n     pointLight2.position.z = Math.sin(time * 0.4 + Math.PI) * 35;\r\n     pointLight2.intensity = 2 + Math.cos(time * 1.8) * 0.5;\r\n\r\n     renderer.render(scene, camera);\r\n   };\r\n\r\n   animate();\r\n\r\n   // Handle resize\r\n   const handleResize = () => {\r\n     if (!mountRef.current) return;\r\n     const width = mountRef.current.clientWidth;\r\n     const height = mountRef.current.clientHeight;\r\n\r\n     camera.aspect = width / height;\r\n     camera.updateProjectionMatrix();\r\n     renderer.setSize(width, height);\r\n   };\r\n\r\n   window.addEventListener('resize', handleResize);\r\n\r\n   // Cleanup\r\n   return () => {\r\n     if (frameId.current) {\r\n       cancelAnimationFrame(frameId.current);\r\n     }\r\n     \r\n     canvas.removeEventListener('mousedown', handlePointerDown);\r\n     canvas.removeEventListener('mousemove', handlePointerMove);\r\n     canvas.removeEventListener('mouseup', handlePointerUp);\r\n     canvas.removeEventListener('mouseleave', handlePointerUp);\r\n     canvas.removeEventListener('touchstart', handlePointerDown);\r\n     canvas.removeEventListener('touchmove', handlePointerMove);\r\n     canvas.removeEventListener('touchend', handlePointerUp);\r\n     \r\n     window.removeEventListener('keydown', handleKeyDown);\r\n     window.removeEventListener('keyup', handleKeyUp);\r\n     window.removeEventListener('resize', handleResize);\r\n\r\n     videoElements.current.forEach(video => {\r\n       video.pause();\r\n       video.src = '';\r\n     });\r\n\r\n     if (audioContext.current) {\r\n       audioContext.current.close();\r\n     }\r\n\r\n     if (mountRef.current && renderer.domElement) {\r\n       mountRef.current.removeChild(renderer.domElement);\r\n     }\r\n\r\n     renderer.dispose();\r\n     \r\n     // Dispose geometries and materials\r\n     scene.traverse((object) => {\r\n       if (object.geometry) object.geometry.dispose();\r\n       if (object.material) {\r\n         if (Array.isArray(object.material)) {\r\n           object.material.forEach(material => material.dispose());\r\n         } else {\r\n           object.material.dispose();\r\n         }\r\n       }\r\n     });\r\n   };\r\n }, [handlePanelClick, createSpatialAudio, createTeleportationSystem, initAudio]);\r\n\r\n const enterVR = async () => {\r\n   if (!isVRSupported || !rendererRef.current) return;\r\n\r\n   try {\r\n     const session = await navigator.xr.requestSession('immersive-vr', {\r\n       optionalFeatures: ['hand-tracking', 'eye-tracking']\r\n     });\r\n     rendererRef.current.xr.setSession(session);\r\n     setIsVRActive(true);\r\n     \r\n     // Resume audio context for VR\r\n     if (audioContext.current && audioContext.current.state === 'suspended') {\r\n       audioContext.current.resume();\r\n     }\r\n     \r\n     session.addEventListener('end', () => {\r\n       setIsVRActive(false);\r\n     });\r\n   } catch (error) {\r\n     console.error('Failed to enter VR:', error);\r\n   }\r\n };\r\n\r\n const resetView = () => {\r\n   vrState.current.targetPosition = { x: 0, y: 2, z: 30 };\r\n   vrState.current.targetRotation = { x: 0, y: 0 };\r\n   vrState.current.velocity = { x: 0, y: 0, z: 0 };\r\n   setSelectedPanel(null);\r\n };\r\n\r\n return (\r\n   <div className=\"relative w-full h-screen bg-black overflow-hidden\">\r\n     {isLoading && (\r\n       <div className=\"absolute inset-0 z-50 flex items-center justify-center bg-black\">\r\n         <div className=\"text-center text-white\">\r\n           <div className=\"w-16 h-16 border-4 border-blue-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\r\n           <p className=\"text-xl font-semibold\">Loading VR Gallery...</p>\r\n           <p className=\"text-sm text-gray-400 mt-2\">Preparing immersive experience</p>\r\n         </div>\r\n       </div>\r\n     )}\r\n     \r\n     <div ref={mountRef} className=\"w-full h-full\" />\r\n     \r\n     {/* Enhanced VR Controls */}\r\n     <div className=\"absolute top-4 left-4 z-10 text-white\">\r\n       <div className=\"bg-black bg-opacity-70 p-5 rounded-xl backdrop-blur-md border border-gray-700\">\r\n         <h3 className=\"text-xl font-bold mb-3 text-transparent bg-clip-text bg-gradient-to-r from-blue-400 to-purple-400\">\r\n           VR Perfume Gallery\r\n         </h3>\r\n         <div className=\"text-sm space-y-2\">\r\n           <p className=\"flex items-center gap-2\">\r\n             <span className=\"text-blue-400\">🖱️</span> Mouse: Look around\r\n           </p>\r\n           <p className=\"flex items-center gap-2\">\r\n             <span className=\"text-green-400\">⌨️</span> WASD/Arrows: Move\r\n           </p>\r\n           <p className=\"flex items-center gap-2\">\r\n             <span className=\"text-purple-400\">QE</span> Up/Down\r\n           </p>\r\n           <p className=\"flex items-center gap-2\">\r\n             <span className=\"text-yellow-400\">1-6</span> Select panel\r\n           </p>\r\n           <p className=\"flex items-center gap-2\">\r\n             <span className=\"text-red-400\">Space</span> Reset view\r\n           </p>\r\n           <p className=\"flex items-center gap-2\">\r\n             <span className=\"text-pink-400\">📱</span> Touch: Drag to look\r\n           </p>\r\n         </div>\r\n         \r\n         <div className=\"flex gap-2 mt-4\">\r\n           {isVRSupported && (\r\n             <button\r\n               onClick={enterVR}\r\n               disabled={isVRActive}\r\n               className=\"flex-1 px-4 py-2 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 disabled:from-gray-600 disabled:to-gray-600 rounded-lg text-white font-medium transition-all duration-300 transform hover:scale-105\"\r\n             >\r\n               {isVRActive ? '🥽 VR Active' : '🥽 Enter VR'}\r\n             </button>\r\n           )}\r\n           \r\n           <button\r\n             onClick={resetView}\r\n             className=\"px-4 py-2 bg-gradient-to-r from-gray-600 to-gray-700 hover:from-gray-700 hover:to-gray-800 rounded-lg text-white font-medium transition-all duration-300 transform hover:scale-105\"\r\n           >\r\n             🎯 Reset\r\n           </button>\r\n         </div>\r\n       </div>\r\n     </div>\r\n\r\n     {/* Panel Selection Info */}\r\n     {selectedPanel !== null && (\r\n       <div className=\"absolute top-4 right-4 z-10 text-white\">\r\n         <div className=\"bg-black bg-opacity-70 p-4 rounded-xl backdrop-blur-md border border-gray-700 max-w-xs\">\r\n           <h4 className=\"text-lg font-bold text-transparent bg-clip-text bg-gradient-to-r from-pink-400 to-yellow-400\">\r\n             {videos[selectedPanel].title}\r\n           </h4>\r\n           <p className=\"text-gray-300\">{videos[selectedPanel].year}</p>\r\n           <p className=\"text-sm text-gray-400 mt-2\">\r\n             Selected fragrance in focus\r\n           </p>\r\n         </div>\r\n       </div>\r\n     )}\r\n\r\n     {/* Enhanced Instructions */}\r\n     <div className=\"absolute bottom-4 right-4 z-10 text-white\">\r\n       <div className=\"bg-black bg-opacity-70 p-4 rounded-xl backdrop-blur-md border border-gray-700 max-w-sm\">\r\n         <h4 className=\"font-semibold mb-2 text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-blue-400\">\r\n           🌟 Immersive Experience\r\n         </h4>\r\n         <p className=\"text-sm text-gray-300 leading-relaxed\">\r\n           Navigate through this luxurious perfume gallery. Click on panels to focus, \r\n           use keyboard or mouse to explore. Experience spatial audio and dynamic lighting \r\n           in this premium fragrance showcase.\r\n         </p>\r\n       </div>\r\n     </div>\r\n\r\n     {/* Performance Stats (Debug) */}\r\n     {process.env.NODE_ENV === 'development' && (\r\n       <div className=\"absolute bottom-4 left-4 z-10 text-white\">\r\n         <div className=\"bg-black bg-opacity-50 p-2 rounded text-xs font-mono\">\r\n           <p>VR: {isVRSupported ? '✅' : '❌'}</p>\r\n           <p>Audio: {audioContext.current ? '🔊' : '🔇'}</p>\r\n           <p>Selected: {selectedPanel !== null ? selectedPanel + 1 : 'None'}</p>\r\n         </div>\r\n       </div>\r\n     )}\r\n   </div>\r\n );\r\n};\r\n\r\nexport default VRPerfumeGallery;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}