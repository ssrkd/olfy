{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srk\\\\Downloads\\\\arq_phantom_clone\\\\src\\\\components\\\\Carousel3D.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst videos = [{\n  url: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4',\n  title: 'STRONGER WITH YOU',\n  year: '2024'\n}, {\n  url: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ElephantsDream.mp4',\n  title: 'INTENSO',\n  year: '2023'\n}, {\n  url: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerBlazes.mp4',\n  title: 'THE SCENT',\n  year: '2024'\n}, {\n  url: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerEscapes.mp4',\n  title: 'SAUVAGE',\n  year: '2022'\n}, {\n  url: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerFun.mp4',\n  title: 'LE MALE',\n  year: '2023'\n}, {\n  url: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerJoyrides.mp4',\n  title: 'BLEU DE CHANEL',\n  year: '2024'\n}];\nconst VRPerfumeGallery = () => {\n  _s();\n  const mountRef = useRef();\n  const sceneRef = useRef();\n  const rendererRef = useRef();\n  const cameraRef = useRef();\n  const videoElements = useRef([]);\n  const panelGroups = useRef([]);\n  const frameId = useRef();\n  const [isVRSupported, setIsVRSupported] = useState(false);\n  const [isVRActive, setIsVRActive] = useState(false);\n\n  // VR movement state\n  const vrState = useRef({\n    rotation: {\n      x: 0,\n      y: 0\n    },\n    targetRotation: {\n      x: 0,\n      y: 0\n    },\n    position: {\n      x: 0,\n      y: 0,\n      z: 0\n    },\n    isMoving: false,\n    lastMouseX: 0,\n    lastMouseY: 0\n  });\n  useEffect(() => {\n    if (!mountRef.current) return;\n    const width = mountRef.current.clientWidth;\n    const height = mountRef.current.clientHeight;\n\n    // Scene setup\n    const scene = new THREE.Scene();\n    scene.fog = new THREE.Fog(0x000000, 50, 200);\n    sceneRef.current = scene;\n\n    // Create immersive environment\n    const starGeometry = new THREE.BufferGeometry();\n    const starMaterial = new THREE.PointsMaterial({\n      color: 0xffffff,\n      size: 0.5\n    });\n    const starVertices = [];\n    for (let i = 0; i < 10000; i++) {\n      const x = (Math.random() - 0.5) * 2000;\n      const y = (Math.random() - 0.5) * 2000;\n      const z = (Math.random() - 0.5) * 2000;\n      starVertices.push(x, y, z);\n    }\n    starGeometry.setAttribute('position', new THREE.Float32BufferAttribute(starVertices, 3));\n    const stars = new THREE.Points(starGeometry, starMaterial);\n    scene.add(stars);\n\n    // Camera setup\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    camera.position.set(0, 0, 0);\n    cameraRef.current = camera;\n\n    // Renderer setup\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true,\n      powerPreference: \"high-performance\"\n    });\n    renderer.setSize(width, height);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    renderer.toneMapping = THREE.ACESFilmicToneMapping;\n    renderer.toneMappingExposure = 1.2;\n    rendererRef.current = renderer;\n\n    // Check VR support\n    if ('xr' in navigator) {\n      navigator.xr.isSessionSupported('immersive-vr').then(supported => {\n        setIsVRSupported(supported);\n        if (supported) {\n          renderer.xr.enabled = true;\n        }\n      });\n    }\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Lighting\n    const ambientLight = new THREE.AmbientLight(0x404040, 0.3);\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n    directionalLight.position.set(10, 10, 5);\n    directionalLight.castShadow = true;\n    directionalLight.shadow.mapSize.width = 2048;\n    directionalLight.shadow.mapSize.height = 2048;\n    scene.add(directionalLight);\n\n    // Create floating particles\n    const particleGeometry = new THREE.BufferGeometry();\n    const particleCount = 1000;\n    const particlePositions = new Float32Array(particleCount * 3);\n    const particleColors = new Float32Array(particleCount * 3);\n    for (let i = 0; i < particleCount; i++) {\n      particlePositions[i * 3] = (Math.random() - 0.5) * 100;\n      particlePositions[i * 3 + 1] = (Math.random() - 0.5) * 100;\n      particlePositions[i * 3 + 2] = (Math.random() - 0.5) * 100;\n      const color = new THREE.Color();\n      color.setHSL(Math.random(), 0.7, 0.5);\n      particleColors[i * 3] = color.r;\n      particleColors[i * 3 + 1] = color.g;\n      particleColors[i * 3 + 2] = color.b;\n    }\n    particleGeometry.setAttribute('position', new THREE.BufferAttribute(particlePositions, 3));\n    particleGeometry.setAttribute('color', new THREE.BufferAttribute(particleColors, 3));\n    const particleMaterial = new THREE.PointsMaterial({\n      size: 0.1,\n      vertexColors: true,\n      transparent: true,\n      opacity: 0.6,\n      blending: THREE.AdditiveBlending\n    });\n    const particles = new THREE.Points(particleGeometry, particleMaterial);\n    scene.add(particles);\n\n    // Create video panels in 3D space\n    const radius = 25;\n    const panels = [];\n    videos.forEach((video, index) => {\n      const angle = index / videos.length * Math.PI * 2;\n      const height = Math.sin(index * 0.5) * 5; // Varying heights\n\n      const x = Math.cos(angle) * radius;\n      const z = Math.sin(angle) * radius;\n      const y = height;\n\n      // Create video element\n      const videoElement = document.createElement('video');\n      videoElement.src = video.url;\n      videoElement.muted = true;\n      videoElement.loop = true;\n      videoElement.playsInline = true;\n      videoElement.crossOrigin = 'anonymous';\n      videoElement.addEventListener('loadeddata', () => {\n        videoElement.play().catch(console.error);\n      });\n      videoElements.current.push(videoElement);\n\n      // Create video texture\n      const videoTexture = new THREE.VideoTexture(videoElement);\n      videoTexture.minFilter = THREE.LinearFilter;\n      videoTexture.magFilter = THREE.LinearFilter;\n\n      // Panel group\n      const panelGroup = new THREE.Group();\n\n      // Holographic frame\n      const frameGeometry = new THREE.RingGeometry(4, 4.5, 32);\n      const frameMaterial = new THREE.MeshBasicMaterial({\n        color: 0x00ffff,\n        transparent: true,\n        opacity: 0.7,\n        side: THREE.DoubleSide\n      });\n      const frame = new THREE.Mesh(frameGeometry, frameMaterial);\n      panelGroup.add(frame);\n\n      // Video screen\n      const screenGeometry = new THREE.PlaneGeometry(8, 6);\n      const screenMaterial = new THREE.MeshBasicMaterial({\n        map: videoTexture,\n        transparent: true,\n        opacity: 0.9\n      });\n      const screen = new THREE.Mesh(screenGeometry, screenMaterial);\n      screen.castShadow = true;\n      panelGroup.add(screen);\n\n      // Glowing border effect\n      const glowGeometry = new THREE.PlaneGeometry(8.5, 6.5);\n      const glowMaterial = new THREE.MeshBasicMaterial({\n        color: 0x00ffff,\n        transparent: true,\n        opacity: 0.2,\n        blending: THREE.AdditiveBlending\n      });\n      const glow = new THREE.Mesh(glowGeometry, glowMaterial);\n      glow.position.z = -0.01;\n      panelGroup.add(glow);\n\n      // Title text (simplified as plane with text texture)\n      const canvas = document.createElement('canvas');\n      canvas.width = 512;\n      canvas.height = 128;\n      const context = canvas.getContext('2d');\n      context.fillStyle = '#ffffff';\n      context.font = 'bold 32px Arial';\n      context.textAlign = 'center';\n      context.fillText(video.title, 256, 50);\n      context.font = '24px Arial';\n      context.fillStyle = '#888888';\n      context.fillText(video.year, 256, 90);\n      const textTexture = new THREE.CanvasTexture(canvas);\n      const textGeometry = new THREE.PlaneGeometry(6, 1.5);\n      const textMaterial = new THREE.MeshBasicMaterial({\n        map: textTexture,\n        transparent: true\n      });\n      const textMesh = new THREE.Mesh(textGeometry, textMaterial);\n      textMesh.position.y = -4;\n      panelGroup.add(textMesh);\n      panelGroup.position.set(x, y, z);\n      panelGroup.lookAt(0, y, 0);\n\n      // Initial scale animation\n      panelGroup.scale.setScalar(0);\n      panels.push(panelGroup);\n      panelGroups.current.push(panelGroup);\n      scene.add(panelGroup);\n\n      // Animate in\n      const animateIn = () => {\n        const scale = panelGroup.scale.x;\n        if (scale < 1) {\n          panelGroup.scale.setScalar(Math.min(1, scale + 0.02));\n          requestAnimationFrame(animateIn);\n        }\n      };\n      setTimeout(animateIn, index * 200);\n    });\n\n    // Mouse/Touch controls for VR-like movement\n    const handlePointerDown = event => {\n      vrState.current.isMoving = true;\n      vrState.current.lastMouseX = event.clientX || event.touches[0].clientX;\n      vrState.current.lastMouseY = event.clientY || event.touches[0].clientY;\n    };\n    const handlePointerMove = event => {\n      if (!vrState.current.isMoving) return;\n      const clientX = event.clientX || event.touches && event.touches[0].clientX;\n      const clientY = event.clientY || event.touches && event.touches[0].clientY;\n      const deltaX = clientX - vrState.current.lastMouseX;\n      const deltaY = clientY - vrState.current.lastMouseY;\n      vrState.current.targetRotation.y += deltaX * 0.005;\n      vrState.current.targetRotation.x += deltaY * 0.005;\n      vrState.current.targetRotation.x = Math.max(-Math.PI / 3, Math.min(Math.PI / 3, vrState.current.targetRotation.x));\n      vrState.current.lastMouseX = clientX;\n      vrState.current.lastMouseY = clientY;\n    };\n    const handlePointerUp = () => {\n      vrState.current.isMoving = false;\n    };\n\n    // Add event listeners\n    const canvas = renderer.domElement;\n    canvas.addEventListener('mousedown', handlePointerDown);\n    canvas.addEventListener('mousemove', handlePointerMove);\n    canvas.addEventListener('mouseup', handlePointerUp);\n    canvas.addEventListener('mouseleave', handlePointerUp);\n    canvas.addEventListener('touchstart', handlePointerDown, {\n      passive: true\n    });\n    canvas.addEventListener('touchmove', handlePointerMove, {\n      passive: true\n    });\n    canvas.addEventListener('touchend', handlePointerUp);\n\n    // Keyboard controls\n    const keys = {};\n    const handleKeyDown = event => {\n      keys[event.code] = true;\n    };\n    const handleKeyUp = event => {\n      keys[event.code] = false;\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n\n    // Animation loop\n    const animate = () => {\n      frameId.current = requestAnimationFrame(animate);\n      const time = Date.now() * 0.001;\n\n      // Smooth camera rotation\n      vrState.current.rotation.y += (vrState.current.targetRotation.y - vrState.current.rotation.y) * 0.1;\n      vrState.current.rotation.x += (vrState.current.targetRotation.x - vrState.current.rotation.x) * 0.1;\n\n      // Keyboard movement\n      const moveSpeed = 0.5;\n      if (keys['KeyW'] || keys['ArrowUp']) {\n        vrState.current.position.z -= moveSpeed;\n      }\n      if (keys['KeyS'] || keys['ArrowDown']) {\n        vrState.current.position.z += moveSpeed;\n      }\n      if (keys['KeyA'] || keys['ArrowLeft']) {\n        vrState.current.position.x -= moveSpeed;\n      }\n      if (keys['KeyD'] || keys['ArrowRight']) {\n        vrState.current.position.x += moveSpeed;\n      }\n\n      // Apply camera transformations\n      camera.position.set(vrState.current.position.x, vrState.current.position.y, vrState.current.position.z);\n      camera.rotation.set(vrState.current.rotation.x, vrState.current.rotation.y, 0);\n\n      // Animate particles\n      const positions = particles.geometry.attributes.position.array;\n      for (let i = 0; i < positions.length; i += 3) {\n        positions[i + 1] += Math.sin(time + positions[i]) * 0.01;\n      }\n      particles.geometry.attributes.position.needsUpdate = true;\n      particles.rotation.y = time * 0.1;\n\n      // Animate panels\n      panelGroups.current.forEach((group, index) => {\n        const offset = time + index * 0.5;\n        group.position.y += Math.sin(offset) * 0.01;\n        group.children[0].rotation.z = Math.sin(offset * 2) * 0.1; // Frame rotation\n\n        // Pulsing glow effect\n        if (group.children[2]) {\n          group.children[2].material.opacity = 0.2 + Math.sin(offset * 3) * 0.1;\n        }\n      });\n\n      // Rotate stars\n      stars.rotation.y = time * 0.02;\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Handle resize\n    const handleResize = () => {\n      if (!mountRef.current) return;\n      const width = mountRef.current.clientWidth;\n      const height = mountRef.current.clientHeight;\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      renderer.setSize(width, height);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      if (frameId.current) {\n        cancelAnimationFrame(frameId.current);\n      }\n      canvas.removeEventListener('mousedown', handlePointerDown);\n      canvas.removeEventListener('mousemove', handlePointerMove);\n      canvas.removeEventListener('mouseup', handlePointerUp);\n      canvas.removeEventListener('mouseleave', handlePointerUp);\n      canvas.removeEventListener('touchstart', handlePointerDown);\n      canvas.removeEventListener('touchmove', handlePointerMove);\n      canvas.removeEventListener('touchend', handlePointerUp);\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n      window.removeEventListener('resize', handleResize);\n      videoElements.current.forEach(video => {\n        video.pause();\n        video.src = '';\n      });\n      if (mountRef.current && renderer.domElement) {\n        mountRef.current.removeChild(renderer.domElement);\n      }\n      renderer.dispose();\n    };\n  }, []);\n  const enterVR = async () => {\n    if (!isVRSupported || !rendererRef.current) return;\n    try {\n      const session = await navigator.xr.requestSession('immersive-vr');\n      rendererRef.current.xr.setSession(session);\n      setIsVRActive(true);\n      session.addEventListener('end', () => {\n        setIsVRActive(false);\n      });\n    } catch (error) {\n      console.error('Failed to enter VR:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative w-full h-screen bg-black overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef,\n      className: \"w-full h-full\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-4 left-4 z-10 text-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-black bg-opacity-50 p-4 rounded-lg backdrop-blur-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-bold mb-2\",\n          children: \"VR Perfume Gallery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm space-y-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uD83D\\uDDB1\\uFE0F Mouse: Look around\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u2328\\uFE0F WASD/Arrows: Move\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uD83D\\uDCF1 Touch: Drag to look around\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this), isVRSupported && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: enterVR,\n          disabled: isVRActive,\n          className: \"mt-3 px-4 py-2 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-600 rounded-lg text-white font-medium transition-colors\",\n          children: isVRActive ? 'VR Active' : 'Enter VR'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bottom-4 right-4 z-10 text-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-black bg-opacity-50 p-3 rounded-lg backdrop-blur-sm text-sm max-w-xs\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Immerse yourself in the perfume gallery. Move through space and explore each fragrance in this VR-like environment.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 417,\n    columnNumber: 5\n  }, this);\n};\n_s(VRPerfumeGallery, \"EHRPe6IHd7qccFv6Mvt+o3xy0CI=\");\n_c = VRPerfumeGallery;\nexport default VRPerfumeGallery;\nvar _c;\n$RefreshReg$(_c, \"VRPerfumeGallery\");","map":{"version":3,"names":["React","useEffect","useRef","useState","THREE","jsxDEV","_jsxDEV","videos","url","title","year","VRPerfumeGallery","_s","mountRef","sceneRef","rendererRef","cameraRef","videoElements","panelGroups","frameId","isVRSupported","setIsVRSupported","isVRActive","setIsVRActive","vrState","rotation","x","y","targetRotation","position","z","isMoving","lastMouseX","lastMouseY","current","width","clientWidth","height","clientHeight","scene","Scene","fog","Fog","starGeometry","BufferGeometry","starMaterial","PointsMaterial","color","size","starVertices","i","Math","random","push","setAttribute","Float32BufferAttribute","stars","Points","add","camera","PerspectiveCamera","set","renderer","WebGLRenderer","antialias","alpha","powerPreference","setSize","setPixelRatio","min","window","devicePixelRatio","shadowMap","enabled","type","PCFSoftShadowMap","toneMapping","ACESFilmicToneMapping","toneMappingExposure","navigator","xr","isSessionSupported","then","supported","appendChild","domElement","ambientLight","AmbientLight","directionalLight","DirectionalLight","castShadow","shadow","mapSize","particleGeometry","particleCount","particlePositions","Float32Array","particleColors","Color","setHSL","r","g","b","BufferAttribute","particleMaterial","vertexColors","transparent","opacity","blending","AdditiveBlending","particles","radius","panels","forEach","video","index","angle","length","PI","sin","cos","videoElement","document","createElement","src","muted","loop","playsInline","crossOrigin","addEventListener","play","catch","console","error","videoTexture","VideoTexture","minFilter","LinearFilter","magFilter","panelGroup","Group","frameGeometry","RingGeometry","frameMaterial","MeshBasicMaterial","side","DoubleSide","frame","Mesh","screenGeometry","PlaneGeometry","screenMaterial","map","screen","glowGeometry","glowMaterial","glow","canvas","context","getContext","fillStyle","font","textAlign","fillText","textTexture","CanvasTexture","textGeometry","textMaterial","textMesh","lookAt","scale","setScalar","animateIn","requestAnimationFrame","setTimeout","handlePointerDown","event","clientX","touches","clientY","handlePointerMove","deltaX","deltaY","max","handlePointerUp","passive","keys","handleKeyDown","code","handleKeyUp","animate","time","Date","now","moveSpeed","positions","geometry","attributes","array","needsUpdate","group","offset","children","material","render","handleResize","aspect","updateProjectionMatrix","cancelAnimationFrame","removeEventListener","pause","removeChild","dispose","enterVR","session","requestSession","setSession","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/srk/Downloads/arq_phantom_clone/src/components/Carousel3D.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as THREE from 'three';\r\n\r\nconst videos = [\r\n  { url: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4', title: 'STRONGER WITH YOU', year: '2024' },\r\n  { url: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ElephantsDream.mp4', title: 'INTENSO', year: '2023' },\r\n  { url: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerBlazes.mp4', title: 'THE SCENT', year: '2024' },\r\n  { url: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerEscapes.mp4', title: 'SAUVAGE', year: '2022' },\r\n  { url: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerFun.mp4', title: 'LE MALE', year: '2023' },\r\n  { url: 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerJoyrides.mp4', title: 'BLEU DE CHANEL', year: '2024' },\r\n];\r\n\r\nconst VRPerfumeGallery = () => {\r\n  const mountRef = useRef();\r\n  const sceneRef = useRef();\r\n  const rendererRef = useRef();\r\n  const cameraRef = useRef();\r\n  const videoElements = useRef([]);\r\n  const panelGroups = useRef([]);\r\n  const frameId = useRef();\r\n  const [isVRSupported, setIsVRSupported] = useState(false);\r\n  const [isVRActive, setIsVRActive] = useState(false);\r\n\r\n  // VR movement state\r\n  const vrState = useRef({\r\n    rotation: { x: 0, y: 0 },\r\n    targetRotation: { x: 0, y: 0 },\r\n    position: { x: 0, y: 0, z: 0 },\r\n    isMoving: false,\r\n    lastMouseX: 0,\r\n    lastMouseY: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!mountRef.current) return;\r\n\r\n    const width = mountRef.current.clientWidth;\r\n    const height = mountRef.current.clientHeight;\r\n\r\n    // Scene setup\r\n    const scene = new THREE.Scene();\r\n    scene.fog = new THREE.Fog(0x000000, 50, 200);\r\n    sceneRef.current = scene;\r\n\r\n    // Create immersive environment\r\n    const starGeometry = new THREE.BufferGeometry();\r\n    const starMaterial = new THREE.PointsMaterial({ color: 0xffffff, size: 0.5 });\r\n    const starVertices = [];\r\n    for (let i = 0; i < 10000; i++) {\r\n      const x = (Math.random() - 0.5) * 2000;\r\n      const y = (Math.random() - 0.5) * 2000;\r\n      const z = (Math.random() - 0.5) * 2000;\r\n      starVertices.push(x, y, z);\r\n    }\r\n    starGeometry.setAttribute('position', new THREE.Float32BufferAttribute(starVertices, 3));\r\n    const stars = new THREE.Points(starGeometry, starMaterial);\r\n    scene.add(stars);\r\n\r\n    // Camera setup\r\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\r\n    camera.position.set(0, 0, 0);\r\n    cameraRef.current = camera;\r\n\r\n    // Renderer setup\r\n    const renderer = new THREE.WebGLRenderer({ \r\n      antialias: true, \r\n      alpha: true,\r\n      powerPreference: \"high-performance\"\r\n    });\r\n    renderer.setSize(width, height);\r\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\r\n    renderer.shadowMap.enabled = true;\r\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n    renderer.toneMapping = THREE.ACESFilmicToneMapping;\r\n    renderer.toneMappingExposure = 1.2;\r\n    rendererRef.current = renderer;\r\n\r\n    // Check VR support\r\n    if ('xr' in navigator) {\r\n      navigator.xr.isSessionSupported('immersive-vr').then((supported) => {\r\n        setIsVRSupported(supported);\r\n        if (supported) {\r\n          renderer.xr.enabled = true;\r\n        }\r\n      });\r\n    }\r\n\r\n    mountRef.current.appendChild(renderer.domElement);\r\n\r\n    // Lighting\r\n    const ambientLight = new THREE.AmbientLight(0x404040, 0.3);\r\n    scene.add(ambientLight);\r\n\r\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\r\n    directionalLight.position.set(10, 10, 5);\r\n    directionalLight.castShadow = true;\r\n    directionalLight.shadow.mapSize.width = 2048;\r\n    directionalLight.shadow.mapSize.height = 2048;\r\n    scene.add(directionalLight);\r\n\r\n    // Create floating particles\r\n    const particleGeometry = new THREE.BufferGeometry();\r\n    const particleCount = 1000;\r\n    const particlePositions = new Float32Array(particleCount * 3);\r\n    const particleColors = new Float32Array(particleCount * 3);\r\n\r\n    for (let i = 0; i < particleCount; i++) {\r\n      particlePositions[i * 3] = (Math.random() - 0.5) * 100;\r\n      particlePositions[i * 3 + 1] = (Math.random() - 0.5) * 100;\r\n      particlePositions[i * 3 + 2] = (Math.random() - 0.5) * 100;\r\n\r\n      const color = new THREE.Color();\r\n      color.setHSL(Math.random(), 0.7, 0.5);\r\n      particleColors[i * 3] = color.r;\r\n      particleColors[i * 3 + 1] = color.g;\r\n      particleColors[i * 3 + 2] = color.b;\r\n    }\r\n\r\n    particleGeometry.setAttribute('position', new THREE.BufferAttribute(particlePositions, 3));\r\n    particleGeometry.setAttribute('color', new THREE.BufferAttribute(particleColors, 3));\r\n\r\n    const particleMaterial = new THREE.PointsMaterial({\r\n      size: 0.1,\r\n      vertexColors: true,\r\n      transparent: true,\r\n      opacity: 0.6,\r\n      blending: THREE.AdditiveBlending\r\n    });\r\n\r\n    const particles = new THREE.Points(particleGeometry, particleMaterial);\r\n    scene.add(particles);\r\n\r\n    // Create video panels in 3D space\r\n    const radius = 25;\r\n    const panels = [];\r\n\r\n    videos.forEach((video, index) => {\r\n      const angle = (index / videos.length) * Math.PI * 2;\r\n      const height = Math.sin(index * 0.5) * 5; // Varying heights\r\n      \r\n      const x = Math.cos(angle) * radius;\r\n      const z = Math.sin(angle) * radius;\r\n      const y = height;\r\n\r\n      // Create video element\r\n      const videoElement = document.createElement('video');\r\n      videoElement.src = video.url;\r\n      videoElement.muted = true;\r\n      videoElement.loop = true;\r\n      videoElement.playsInline = true;\r\n      videoElement.crossOrigin = 'anonymous';\r\n      videoElement.addEventListener('loadeddata', () => {\r\n        videoElement.play().catch(console.error);\r\n      });\r\n      videoElements.current.push(videoElement);\r\n\r\n      // Create video texture\r\n      const videoTexture = new THREE.VideoTexture(videoElement);\r\n      videoTexture.minFilter = THREE.LinearFilter;\r\n      videoTexture.magFilter = THREE.LinearFilter;\r\n\r\n      // Panel group\r\n      const panelGroup = new THREE.Group();\r\n\r\n      // Holographic frame\r\n      const frameGeometry = new THREE.RingGeometry(4, 4.5, 32);\r\n      const frameMaterial = new THREE.MeshBasicMaterial({\r\n        color: 0x00ffff,\r\n        transparent: true,\r\n        opacity: 0.7,\r\n        side: THREE.DoubleSide\r\n      });\r\n      const frame = new THREE.Mesh(frameGeometry, frameMaterial);\r\n      panelGroup.add(frame);\r\n\r\n      // Video screen\r\n      const screenGeometry = new THREE.PlaneGeometry(8, 6);\r\n      const screenMaterial = new THREE.MeshBasicMaterial({\r\n        map: videoTexture,\r\n        transparent: true,\r\n        opacity: 0.9\r\n      });\r\n      const screen = new THREE.Mesh(screenGeometry, screenMaterial);\r\n      screen.castShadow = true;\r\n      panelGroup.add(screen);\r\n\r\n      // Glowing border effect\r\n      const glowGeometry = new THREE.PlaneGeometry(8.5, 6.5);\r\n      const glowMaterial = new THREE.MeshBasicMaterial({\r\n        color: 0x00ffff,\r\n        transparent: true,\r\n        opacity: 0.2,\r\n        blending: THREE.AdditiveBlending\r\n      });\r\n      const glow = new THREE.Mesh(glowGeometry, glowMaterial);\r\n      glow.position.z = -0.01;\r\n      panelGroup.add(glow);\r\n\r\n      // Title text (simplified as plane with text texture)\r\n      const canvas = document.createElement('canvas');\r\n      canvas.width = 512;\r\n      canvas.height = 128;\r\n      const context = canvas.getContext('2d');\r\n      context.fillStyle = '#ffffff';\r\n      context.font = 'bold 32px Arial';\r\n      context.textAlign = 'center';\r\n      context.fillText(video.title, 256, 50);\r\n      context.font = '24px Arial';\r\n      context.fillStyle = '#888888';\r\n      context.fillText(video.year, 256, 90);\r\n\r\n      const textTexture = new THREE.CanvasTexture(canvas);\r\n      const textGeometry = new THREE.PlaneGeometry(6, 1.5);\r\n      const textMaterial = new THREE.MeshBasicMaterial({\r\n        map: textTexture,\r\n        transparent: true\r\n      });\r\n      const textMesh = new THREE.Mesh(textGeometry, textMaterial);\r\n      textMesh.position.y = -4;\r\n      panelGroup.add(textMesh);\r\n\r\n      panelGroup.position.set(x, y, z);\r\n      panelGroup.lookAt(0, y, 0);\r\n      \r\n      // Initial scale animation\r\n      panelGroup.scale.setScalar(0);\r\n      panels.push(panelGroup);\r\n      panelGroups.current.push(panelGroup);\r\n      scene.add(panelGroup);\r\n\r\n      // Animate in\r\n      const animateIn = () => {\r\n        const scale = panelGroup.scale.x;\r\n        if (scale < 1) {\r\n          panelGroup.scale.setScalar(Math.min(1, scale + 0.02));\r\n          requestAnimationFrame(animateIn);\r\n        }\r\n      };\r\n      setTimeout(animateIn, index * 200);\r\n    });\r\n\r\n    // Mouse/Touch controls for VR-like movement\r\n    const handlePointerDown = (event) => {\r\n      vrState.current.isMoving = true;\r\n      vrState.current.lastMouseX = event.clientX || event.touches[0].clientX;\r\n      vrState.current.lastMouseY = event.clientY || event.touches[0].clientY;\r\n    };\r\n\r\n    const handlePointerMove = (event) => {\r\n      if (!vrState.current.isMoving) return;\r\n\r\n      const clientX = event.clientX || (event.touches && event.touches[0].clientX);\r\n      const clientY = event.clientY || (event.touches && event.touches[0].clientY);\r\n\r\n      const deltaX = clientX - vrState.current.lastMouseX;\r\n      const deltaY = clientY - vrState.current.lastMouseY;\r\n\r\n      vrState.current.targetRotation.y += deltaX * 0.005;\r\n      vrState.current.targetRotation.x += deltaY * 0.005;\r\n      vrState.current.targetRotation.x = Math.max(-Math.PI/3, Math.min(Math.PI/3, vrState.current.targetRotation.x));\r\n\r\n      vrState.current.lastMouseX = clientX;\r\n      vrState.current.lastMouseY = clientY;\r\n    };\r\n\r\n    const handlePointerUp = () => {\r\n      vrState.current.isMoving = false;\r\n    };\r\n\r\n    // Add event listeners\r\n    const canvas = renderer.domElement;\r\n    canvas.addEventListener('mousedown', handlePointerDown);\r\n    canvas.addEventListener('mousemove', handlePointerMove);\r\n    canvas.addEventListener('mouseup', handlePointerUp);\r\n    canvas.addEventListener('mouseleave', handlePointerUp);\r\n    canvas.addEventListener('touchstart', handlePointerDown, { passive: true });\r\n    canvas.addEventListener('touchmove', handlePointerMove, { passive: true });\r\n    canvas.addEventListener('touchend', handlePointerUp);\r\n\r\n    // Keyboard controls\r\n    const keys = {};\r\n    const handleKeyDown = (event) => {\r\n      keys[event.code] = true;\r\n    };\r\n    const handleKeyUp = (event) => {\r\n      keys[event.code] = false;\r\n    };\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    window.addEventListener('keyup', handleKeyUp);\r\n\r\n    // Animation loop\r\n    const animate = () => {\r\n      frameId.current = requestAnimationFrame(animate);\r\n\r\n      const time = Date.now() * 0.001;\r\n\r\n      // Smooth camera rotation\r\n      vrState.current.rotation.y += (vrState.current.targetRotation.y - vrState.current.rotation.y) * 0.1;\r\n      vrState.current.rotation.x += (vrState.current.targetRotation.x - vrState.current.rotation.x) * 0.1;\r\n\r\n      // Keyboard movement\r\n      const moveSpeed = 0.5;\r\n      if (keys['KeyW'] || keys['ArrowUp']) {\r\n        vrState.current.position.z -= moveSpeed;\r\n      }\r\n      if (keys['KeyS'] || keys['ArrowDown']) {\r\n        vrState.current.position.z += moveSpeed;\r\n      }\r\n      if (keys['KeyA'] || keys['ArrowLeft']) {\r\n        vrState.current.position.x -= moveSpeed;\r\n      }\r\n      if (keys['KeyD'] || keys['ArrowRight']) {\r\n        vrState.current.position.x += moveSpeed;\r\n      }\r\n\r\n      // Apply camera transformations\r\n      camera.position.set(\r\n        vrState.current.position.x,\r\n        vrState.current.position.y,\r\n        vrState.current.position.z\r\n      );\r\n      camera.rotation.set(\r\n        vrState.current.rotation.x,\r\n        vrState.current.rotation.y,\r\n        0\r\n      );\r\n\r\n      // Animate particles\r\n      const positions = particles.geometry.attributes.position.array;\r\n      for (let i = 0; i < positions.length; i += 3) {\r\n        positions[i + 1] += Math.sin(time + positions[i]) * 0.01;\r\n      }\r\n      particles.geometry.attributes.position.needsUpdate = true;\r\n      particles.rotation.y = time * 0.1;\r\n\r\n      // Animate panels\r\n      panelGroups.current.forEach((group, index) => {\r\n        const offset = time + index * 0.5;\r\n        group.position.y += Math.sin(offset) * 0.01;\r\n        group.children[0].rotation.z = Math.sin(offset * 2) * 0.1; // Frame rotation\r\n        \r\n        // Pulsing glow effect\r\n        if (group.children[2]) {\r\n          group.children[2].material.opacity = 0.2 + Math.sin(offset * 3) * 0.1;\r\n        }\r\n      });\r\n\r\n      // Rotate stars\r\n      stars.rotation.y = time * 0.02;\r\n\r\n      renderer.render(scene, camera);\r\n    };\r\n\r\n    animate();\r\n\r\n    // Handle resize\r\n    const handleResize = () => {\r\n      if (!mountRef.current) return;\r\n      const width = mountRef.current.clientWidth;\r\n      const height = mountRef.current.clientHeight;\r\n\r\n      camera.aspect = width / height;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(width, height);\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Cleanup\r\n    return () => {\r\n      if (frameId.current) {\r\n        cancelAnimationFrame(frameId.current);\r\n      }\r\n      \r\n      canvas.removeEventListener('mousedown', handlePointerDown);\r\n      canvas.removeEventListener('mousemove', handlePointerMove);\r\n      canvas.removeEventListener('mouseup', handlePointerUp);\r\n      canvas.removeEventListener('mouseleave', handlePointerUp);\r\n      canvas.removeEventListener('touchstart', handlePointerDown);\r\n      canvas.removeEventListener('touchmove', handlePointerMove);\r\n      canvas.removeEventListener('touchend', handlePointerUp);\r\n      \r\n      window.removeEventListener('keydown', handleKeyDown);\r\n      window.removeEventListener('keyup', handleKeyUp);\r\n      window.removeEventListener('resize', handleResize);\r\n\r\n      videoElements.current.forEach(video => {\r\n        video.pause();\r\n        video.src = '';\r\n      });\r\n\r\n      if (mountRef.current && renderer.domElement) {\r\n        mountRef.current.removeChild(renderer.domElement);\r\n      }\r\n\r\n      renderer.dispose();\r\n    };\r\n  }, []);\r\n\r\n  const enterVR = async () => {\r\n    if (!isVRSupported || !rendererRef.current) return;\r\n\r\n    try {\r\n      const session = await navigator.xr.requestSession('immersive-vr');\r\n      rendererRef.current.xr.setSession(session);\r\n      setIsVRActive(true);\r\n      \r\n      session.addEventListener('end', () => {\r\n        setIsVRActive(false);\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to enter VR:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative w-full h-screen bg-black overflow-hidden\">\r\n      <div ref={mountRef} className=\"w-full h-full\" />\r\n      \r\n      {/* VR Controls */}\r\n      <div className=\"absolute top-4 left-4 z-10 text-white\">\r\n        <div className=\"bg-black bg-opacity-50 p-4 rounded-lg backdrop-blur-sm\">\r\n          <h3 className=\"text-lg font-bold mb-2\">VR Perfume Gallery</h3>\r\n          <div className=\"text-sm space-y-1\">\r\n            <p>🖱️ Mouse: Look around</p>\r\n            <p>⌨️ WASD/Arrows: Move</p>\r\n            <p>📱 Touch: Drag to look around</p>\r\n          </div>\r\n          {isVRSupported && (\r\n            <button\r\n              onClick={enterVR}\r\n              disabled={isVRActive}\r\n              className=\"mt-3 px-4 py-2 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-600 rounded-lg text-white font-medium transition-colors\"\r\n            >\r\n              {isVRActive ? 'VR Active' : 'Enter VR'}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Instructions */}\r\n      <div className=\"absolute bottom-4 right-4 z-10 text-white\">\r\n        <div className=\"bg-black bg-opacity-50 p-3 rounded-lg backdrop-blur-sm text-sm max-w-xs\">\r\n          <p>Immerse yourself in the perfume gallery. Move through space and explore each fragrance in this VR-like environment.</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VRPerfumeGallery;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}