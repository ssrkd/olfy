{"ast":null,"code":"import { Matrix4, Object3D, Vector2, Vector3 } from 'three';\n\n/**\n * The only type of 3D object that is supported by {@link CSS2DRenderer}.\n *\n * @augments Object3D\n * @three_import import { CSS2DObject } from 'three/addons/renderers/CSS2DRenderer.js';\n */\nclass CSS2DObject extends Object3D {\n  /**\n   * Constructs a new CSS2D object.\n   *\n   * @param {DOMElement} [element] - The DOM element.\n   */\n  constructor(element = document.createElement('div')) {\n    super();\n\n    /**\n     * This flag can be used for type testing.\n     *\n     * @type {boolean}\n     * @readonly\n     * @default true\n     */\n    this.isCSS2DObject = true;\n\n    /**\n     * The DOM element which defines the appearance of this 3D object.\n     *\n     * @type {DOMElement}\n     * @readonly\n     * @default true\n     */\n    this.element = element;\n    this.element.style.position = 'absolute';\n    this.element.style.userSelect = 'none';\n    this.element.setAttribute('draggable', false);\n\n    /**\n     * The 3D objects center point.\n     * `( 0, 0 )` is the lower left, `( 1, 1 )` is the top right.\n     *\n     * @type {Vector2}\n     * @default (0.5,0.5)\n     */\n    this.center = new Vector2(0.5, 0.5);\n    this.addEventListener('removed', function () {\n      this.traverse(function (object) {\n        if (object.element instanceof object.element.ownerDocument.defaultView.Element && object.element.parentNode !== null) {\n          object.element.remove();\n        }\n      });\n    });\n  }\n  copy(source, recursive) {\n    super.copy(source, recursive);\n    this.element = source.element.cloneNode(true);\n    this.center = source.center;\n    return this;\n  }\n}\n\n//\n\nconst _vector = new Vector3();\nconst _viewMatrix = new Matrix4();\nconst _viewProjectionMatrix = new Matrix4();\nconst _a = new Vector3();\nconst _b = new Vector3();\n\n/**\n * This renderer is a simplified version of {@link CSS3DRenderer}. The only transformation that is\n * supported is translation.\n *\n * The renderer is very useful if you want to combine HTML based labels with 3D objects. Here too,\n * the respective DOM elements are wrapped into an instance of {@link CSS2DObject} and added to the\n * scene graph. All other types of renderable 3D objects (like meshes or point clouds) are ignored.\n *\n * `CSS2DRenderer` only supports 100% browser and display zoom.\n *\n * @three_import import { CSS2DRenderer } from 'three/addons/renderers/CSS2DRenderer.js';\n */\nclass CSS2DRenderer {\n  /**\n   * Constructs a new CSS2D renderer.\n   *\n   * @param {CSS2DRenderer~Parameters} [parameters] - The parameters.\n   */\n  constructor(parameters = {}) {\n    const _this = this;\n    let _width, _height;\n    let _widthHalf, _heightHalf;\n    const cache = {\n      objects: new WeakMap()\n    };\n    const domElement = parameters.element !== undefined ? parameters.element : document.createElement('div');\n    domElement.style.overflow = 'hidden';\n\n    /**\n     * The DOM where the renderer appends its child-elements.\n     *\n     * @type {DOMElement}\n     */\n    this.domElement = domElement;\n\n    /**\n     * Returns an object containing the width and height of the renderer.\n     *\n     * @return {{width:number,height:number}} The size of the renderer.\n     */\n    this.getSize = function () {\n      return {\n        width: _width,\n        height: _height\n      };\n    };\n\n    /**\n     * Renders the given scene using the given camera.\n     *\n     * @param {Object3D} scene - A scene or any other type of 3D object.\n     * @param {Camera} camera - The camera.\n     */\n    this.render = function (scene, camera) {\n      if (scene.matrixWorldAutoUpdate === true) scene.updateMatrixWorld();\n      if (camera.parent === null && camera.matrixWorldAutoUpdate === true) camera.updateMatrixWorld();\n      _viewMatrix.copy(camera.matrixWorldInverse);\n      _viewProjectionMatrix.multiplyMatrices(camera.projectionMatrix, _viewMatrix);\n      renderObject(scene, scene, camera);\n      zOrder(scene);\n    };\n\n    /**\n     * Resizes the renderer to the given width and height.\n     *\n     * @param {number} width - The width of the renderer.\n     * @param {number} height - The height of the renderer.\n     */\n    this.setSize = function (width, height) {\n      _width = width;\n      _height = height;\n      _widthHalf = _width / 2;\n      _heightHalf = _height / 2;\n      domElement.style.width = width + 'px';\n      domElement.style.height = height + 'px';\n    };\n    function hideObject(object) {\n      if (object.isCSS2DObject) object.element.style.display = 'none';\n      for (let i = 0, l = object.children.length; i < l; i++) {\n        hideObject(object.children[i]);\n      }\n    }\n    function renderObject(object, scene, camera) {\n      if (object.visible === false) {\n        hideObject(object);\n        return;\n      }\n      if (object.isCSS2DObject) {\n        _vector.setFromMatrixPosition(object.matrixWorld);\n        _vector.applyMatrix4(_viewProjectionMatrix);\n        const visible = _vector.z >= -1 && _vector.z <= 1 && object.layers.test(camera.layers) === true;\n        const element = object.element;\n        element.style.display = visible === true ? '' : 'none';\n        if (visible === true) {\n          object.onBeforeRender(_this, scene, camera);\n          element.style.transform = 'translate(' + -100 * object.center.x + '%,' + -100 * object.center.y + '%)' + 'translate(' + (_vector.x * _widthHalf + _widthHalf) + 'px,' + (-_vector.y * _heightHalf + _heightHalf) + 'px)';\n          if (element.parentNode !== domElement) {\n            domElement.appendChild(element);\n          }\n          object.onAfterRender(_this, scene, camera);\n        }\n        const objectData = {\n          distanceToCameraSquared: getDistanceToSquared(camera, object)\n        };\n        cache.objects.set(object, objectData);\n      }\n      for (let i = 0, l = object.children.length; i < l; i++) {\n        renderObject(object.children[i], scene, camera);\n      }\n    }\n    function getDistanceToSquared(object1, object2) {\n      _a.setFromMatrixPosition(object1.matrixWorld);\n      _b.setFromMatrixPosition(object2.matrixWorld);\n      return _a.distanceToSquared(_b);\n    }\n    function filterAndFlatten(scene) {\n      const result = [];\n      scene.traverseVisible(function (object) {\n        if (object.isCSS2DObject) result.push(object);\n      });\n      return result;\n    }\n    function zOrder(scene) {\n      const sorted = filterAndFlatten(scene).sort(function (a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n          return b.renderOrder - a.renderOrder;\n        }\n        const distanceA = cache.objects.get(a).distanceToCameraSquared;\n        const distanceB = cache.objects.get(b).distanceToCameraSquared;\n        return distanceA - distanceB;\n      });\n      const zMax = sorted.length;\n      for (let i = 0, l = sorted.length; i < l; i++) {\n        sorted[i].element.style.zIndex = zMax - i;\n      }\n    }\n  }\n}\n\n/**\n * Constructor parameters of `CSS2DRenderer`.\n *\n * @typedef {Object} CSS2DRenderer~Parameters\n * @property {DOMElement} [element] - A DOM element where the renderer appends its child-elements.\n * If not passed in here, a new div element will be created.\n **/\n\nexport { CSS2DObject, CSS2DRenderer };","map":{"version":3,"names":["Matrix4","Object3D","Vector2","Vector3","CSS2DObject","constructor","element","document","createElement","isCSS2DObject","style","position","userSelect","setAttribute","center","addEventListener","traverse","object","ownerDocument","defaultView","Element","parentNode","remove","copy","source","recursive","cloneNode","_vector","_viewMatrix","_viewProjectionMatrix","_a","_b","CSS2DRenderer","parameters","_this","_width","_height","_widthHalf","_heightHalf","cache","objects","WeakMap","domElement","undefined","overflow","getSize","width","height","render","scene","camera","matrixWorldAutoUpdate","updateMatrixWorld","parent","matrixWorldInverse","multiplyMatrices","projectionMatrix","renderObject","zOrder","setSize","hideObject","display","i","l","children","length","visible","setFromMatrixPosition","matrixWorld","applyMatrix4","z","layers","test","onBeforeRender","transform","x","y","appendChild","onAfterRender","objectData","distanceToCameraSquared","getDistanceToSquared","set","object1","object2","distanceToSquared","filterAndFlatten","result","traverseVisible","push","sorted","sort","a","b","renderOrder","distanceA","get","distanceB","zMax","zIndex"],"sources":["C:/Users/srk/Downloads/arq_phantom_clone/node_modules/three/examples/jsm/renderers/CSS2DRenderer.js"],"sourcesContent":["import {\n\tMatrix4,\n\tObject3D,\n\tVector2,\n\tVector3\n} from 'three';\n\n/**\n * The only type of 3D object that is supported by {@link CSS2DRenderer}.\n *\n * @augments Object3D\n * @three_import import { CSS2DObject } from 'three/addons/renderers/CSS2DRenderer.js';\n */\nclass CSS2DObject extends Object3D {\n\n\t/**\n\t * Constructs a new CSS2D object.\n\t *\n\t * @param {DOMElement} [element] - The DOM element.\n\t */\n\tconstructor( element = document.createElement( 'div' ) ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isCSS2DObject = true;\n\n\t\t/**\n\t\t * The DOM element which defines the appearance of this 3D object.\n\t\t *\n\t\t * @type {DOMElement}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.element = element;\n\n\t\tthis.element.style.position = 'absolute';\n\t\tthis.element.style.userSelect = 'none';\n\n\t\tthis.element.setAttribute( 'draggable', false );\n\n\t\t/**\n\t\t * The 3D objects center point.\n\t\t * `( 0, 0 )` is the lower left, `( 1, 1 )` is the top right.\n\t\t *\n\t\t * @type {Vector2}\n\t\t * @default (0.5,0.5)\n\t\t */\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t\tthis.addEventListener( 'removed', function () {\n\n\t\t\tthis.traverse( function ( object ) {\n\n\t\t\t\tif (\n\t\t\t\t\tobject.element instanceof object.element.ownerDocument.defaultView.Element &&\n\t\t\t\t\tobject.element.parentNode !== null\n\t\t\t\t) {\n\n\t\t\t\t\tobject.element.remove();\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.element = source.element.cloneNode( true );\n\n\t\tthis.center = source.center;\n\n\t\treturn this;\n\n\t}\n\n}\n\n//\n\nconst _vector = new Vector3();\nconst _viewMatrix = new Matrix4();\nconst _viewProjectionMatrix = new Matrix4();\nconst _a = new Vector3();\nconst _b = new Vector3();\n\n/**\n * This renderer is a simplified version of {@link CSS3DRenderer}. The only transformation that is\n * supported is translation.\n *\n * The renderer is very useful if you want to combine HTML based labels with 3D objects. Here too,\n * the respective DOM elements are wrapped into an instance of {@link CSS2DObject} and added to the\n * scene graph. All other types of renderable 3D objects (like meshes or point clouds) are ignored.\n *\n * `CSS2DRenderer` only supports 100% browser and display zoom.\n *\n * @three_import import { CSS2DRenderer } from 'three/addons/renderers/CSS2DRenderer.js';\n */\nclass CSS2DRenderer {\n\n\t/**\n\t * Constructs a new CSS2D renderer.\n\t *\n\t * @param {CSS2DRenderer~Parameters} [parameters] - The parameters.\n\t */\n\tconstructor( parameters = {} ) {\n\n\t\tconst _this = this;\n\n\t\tlet _width, _height;\n\t\tlet _widthHalf, _heightHalf;\n\n\t\tconst cache = {\n\t\t\tobjects: new WeakMap()\n\t\t};\n\n\t\tconst domElement = parameters.element !== undefined ? parameters.element : document.createElement( 'div' );\n\n\t\tdomElement.style.overflow = 'hidden';\n\n\t\t/**\n\t\t * The DOM where the renderer appends its child-elements.\n\t\t *\n\t\t * @type {DOMElement}\n\t\t */\n\t\tthis.domElement = domElement;\n\n\t\t/**\n\t\t * Returns an object containing the width and height of the renderer.\n\t\t *\n\t\t * @return {{width:number,height:number}} The size of the renderer.\n\t\t */\n\t\tthis.getSize = function () {\n\n\t\t\treturn {\n\t\t\t\twidth: _width,\n\t\t\t\theight: _height\n\t\t\t};\n\n\t\t};\n\n\t\t/**\n\t\t * Renders the given scene using the given camera.\n\t\t *\n\t\t * @param {Object3D} scene - A scene or any other type of 3D object.\n\t\t * @param {Camera} camera - The camera.\n\t\t */\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\t_viewMatrix.copy( camera.matrixWorldInverse );\n\t\t\t_viewProjectionMatrix.multiplyMatrices( camera.projectionMatrix, _viewMatrix );\n\n\t\t\trenderObject( scene, scene, camera );\n\t\t\tzOrder( scene );\n\n\t\t};\n\n\t\t/**\n\t\t * Resizes the renderer to the given width and height.\n\t\t *\n\t\t * @param {number} width - The width of the renderer.\n\t\t * @param {number} height - The height of the renderer.\n\t\t */\n\t\tthis.setSize = function ( width, height ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_widthHalf = _width / 2;\n\t\t\t_heightHalf = _height / 2;\n\n\t\t\tdomElement.style.width = width + 'px';\n\t\t\tdomElement.style.height = height + 'px';\n\n\t\t};\n\n\t\tfunction hideObject( object ) {\n\n\t\t\tif ( object.isCSS2DObject ) object.element.style.display = 'none';\n\n\t\t\tfor ( let i = 0, l = object.children.length; i < l; i ++ ) {\n\n\t\t\t\thideObject( object.children[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera ) {\n\n\t\t\tif ( object.visible === false ) {\n\n\t\t\t\thideObject( object );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( object.isCSS2DObject ) {\n\n\t\t\t\t_vector.setFromMatrixPosition( object.matrixWorld );\n\t\t\t\t_vector.applyMatrix4( _viewProjectionMatrix );\n\n\t\t\t\tconst visible = ( _vector.z >= - 1 && _vector.z <= 1 ) && ( object.layers.test( camera.layers ) === true );\n\n\t\t\t\tconst element = object.element;\n\t\t\t\telement.style.display = visible === true ? '' : 'none';\n\n\t\t\t\tif ( visible === true ) {\n\n\t\t\t\t\tobject.onBeforeRender( _this, scene, camera );\n\n\t\t\t\t\telement.style.transform = 'translate(' + ( - 100 * object.center.x ) + '%,' + ( - 100 * object.center.y ) + '%)' + 'translate(' + ( _vector.x * _widthHalf + _widthHalf ) + 'px,' + ( - _vector.y * _heightHalf + _heightHalf ) + 'px)';\n\n\t\t\t\t\tif ( element.parentNode !== domElement ) {\n\n\t\t\t\t\t\tdomElement.appendChild( element );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.onAfterRender( _this, scene, camera );\n\n\t\t\t\t}\n\n\t\t\t\tconst objectData = {\n\t\t\t\t\tdistanceToCameraSquared: getDistanceToSquared( camera, object )\n\t\t\t\t};\n\n\t\t\t\tcache.objects.set( object, objectData );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = object.children.length; i < l; i ++ ) {\n\n\t\t\t\trenderObject( object.children[ i ], scene, camera );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getDistanceToSquared( object1, object2 ) {\n\n\t\t\t_a.setFromMatrixPosition( object1.matrixWorld );\n\t\t\t_b.setFromMatrixPosition( object2.matrixWorld );\n\n\t\t\treturn _a.distanceToSquared( _b );\n\n\t\t}\n\n\t\tfunction filterAndFlatten( scene ) {\n\n\t\t\tconst result = [];\n\n\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isCSS2DObject ) result.push( object );\n\n\t\t\t} );\n\n\t\t\treturn result;\n\n\t\t}\n\n\t\tfunction zOrder( scene ) {\n\n\t\t\tconst sorted = filterAndFlatten( scene ).sort( function ( a, b ) {\n\n\t\t\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\t\t\treturn b.renderOrder - a.renderOrder;\n\n\t\t\t\t}\n\n\t\t\t\tconst distanceA = cache.objects.get( a ).distanceToCameraSquared;\n\t\t\t\tconst distanceB = cache.objects.get( b ).distanceToCameraSquared;\n\n\t\t\t\treturn distanceA - distanceB;\n\n\t\t\t} );\n\n\t\t\tconst zMax = sorted.length;\n\n\t\t\tfor ( let i = 0, l = sorted.length; i < l; i ++ ) {\n\n\t\t\t\tsorted[ i ].element.style.zIndex = zMax - i;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Constructor parameters of `CSS2DRenderer`.\n *\n * @typedef {Object} CSS2DRenderer~Parameters\n * @property {DOMElement} [element] - A DOM element where the renderer appends its child-elements.\n * If not passed in here, a new div element will be created.\n **/\n\nexport { CSS2DObject, CSS2DRenderer };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}