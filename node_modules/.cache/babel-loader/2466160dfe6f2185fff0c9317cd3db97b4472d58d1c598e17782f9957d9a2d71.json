{"ast":null,"code":"import { Vector2 } from \"three\";\nfunction UVsDebug(geometry, size = 1024) {\n  const abc = \"abc\";\n  const a = new Vector2();\n  const b = new Vector2();\n  const uvs = [new Vector2(), new Vector2(), new Vector2()];\n  const face = [];\n  const canvas = document.createElement(\"canvas\");\n  const width = size;\n  const height = size;\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext(\"2d\");\n  ctx.lineWidth = 1;\n  ctx.strokeStyle = \"rgb( 63, 63, 63 )\";\n  ctx.textAlign = \"center\";\n  ctx.fillStyle = \"rgb( 255, 255, 255 )\";\n  ctx.fillRect(0, 0, width, height);\n  const index = geometry.index;\n  const uvAttribute = geometry.attributes.uv;\n  if (index) {\n    for (let i = 0, il = index.count; i < il; i += 3) {\n      face[0] = index.getX(i);\n      face[1] = index.getX(i + 1);\n      face[2] = index.getX(i + 2);\n      uvs[0].fromBufferAttribute(uvAttribute, face[0]);\n      uvs[1].fromBufferAttribute(uvAttribute, face[1]);\n      uvs[2].fromBufferAttribute(uvAttribute, face[2]);\n      processFace(face, uvs, i / 3);\n    }\n  } else {\n    for (let i = 0, il = uvAttribute.count; i < il; i += 3) {\n      face[0] = i;\n      face[1] = i + 1;\n      face[2] = i + 2;\n      uvs[0].fromBufferAttribute(uvAttribute, face[0]);\n      uvs[1].fromBufferAttribute(uvAttribute, face[1]);\n      uvs[2].fromBufferAttribute(uvAttribute, face[2]);\n      processFace(face, uvs, i / 3);\n    }\n  }\n  return canvas;\n  function processFace(face2, uvs2, index2) {\n    ctx.beginPath();\n    a.set(0, 0);\n    for (let j = 0, jl = uvs2.length; j < jl; j++) {\n      const uv = uvs2[j];\n      a.x += uv.x;\n      a.y += uv.y;\n      if (j === 0) {\n        ctx.moveTo(uv.x * (width - 2) + 0.5, (1 - uv.y) * (height - 2) + 0.5);\n      } else {\n        ctx.lineTo(uv.x * (width - 2) + 0.5, (1 - uv.y) * (height - 2) + 0.5);\n      }\n    }\n    ctx.closePath();\n    ctx.stroke();\n    a.divideScalar(uvs2.length);\n    ctx.font = \"18px Arial\";\n    ctx.fillStyle = \"rgb( 63, 63, 63 )\";\n    ctx.fillText(index2, a.x * width, (1 - a.y) * height);\n    if (a.x > 0.95) {\n      ctx.fillText(index2, a.x % 1 * width, (1 - a.y) * height);\n    }\n    ctx.font = \"12px Arial\";\n    ctx.fillStyle = \"rgb( 191, 191, 191 )\";\n    for (let j = 0, jl = uvs2.length; j < jl; j++) {\n      const uv = uvs2[j];\n      b.addVectors(a, uv).divideScalar(2);\n      const vnum = face2[j];\n      ctx.fillText(abc[j] + vnum, b.x * width, (1 - b.y) * height);\n      if (b.x > 0.95) {\n        ctx.fillText(abc[j] + vnum, b.x % 1 * width, (1 - b.y) * height);\n      }\n    }\n  }\n}\nexport { UVsDebug };","map":{"version":3,"names":["Vector2","UVsDebug","geometry","size","abc","a","b","uvs","face","canvas","document","createElement","width","height","ctx","getContext","lineWidth","strokeStyle","textAlign","fillStyle","fillRect","index","uvAttribute","attributes","uv","i","il","count","getX","fromBufferAttribute","processFace","face2","uvs2","index2","beginPath","set","j","jl","length","x","y","moveTo","lineTo","closePath","stroke","divideScalar","font","fillText","addVectors","vnum"],"sources":["C:/Users/srk/Downloads/arq_phantom_clone/node_modules/three-stdlib/utils/UVsDebug.js"],"sourcesContent":["import { Vector2 } from \"three\";\nfunction UVsDebug(geometry, size = 1024) {\n  const abc = \"abc\";\n  const a = new Vector2();\n  const b = new Vector2();\n  const uvs = [new Vector2(), new Vector2(), new Vector2()];\n  const face = [];\n  const canvas = document.createElement(\"canvas\");\n  const width = size;\n  const height = size;\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext(\"2d\");\n  ctx.lineWidth = 1;\n  ctx.strokeStyle = \"rgb( 63, 63, 63 )\";\n  ctx.textAlign = \"center\";\n  ctx.fillStyle = \"rgb( 255, 255, 255 )\";\n  ctx.fillRect(0, 0, width, height);\n  const index = geometry.index;\n  const uvAttribute = geometry.attributes.uv;\n  if (index) {\n    for (let i = 0, il = index.count; i < il; i += 3) {\n      face[0] = index.getX(i);\n      face[1] = index.getX(i + 1);\n      face[2] = index.getX(i + 2);\n      uvs[0].fromBufferAttribute(uvAttribute, face[0]);\n      uvs[1].fromBufferAttribute(uvAttribute, face[1]);\n      uvs[2].fromBufferAttribute(uvAttribute, face[2]);\n      processFace(face, uvs, i / 3);\n    }\n  } else {\n    for (let i = 0, il = uvAttribute.count; i < il; i += 3) {\n      face[0] = i;\n      face[1] = i + 1;\n      face[2] = i + 2;\n      uvs[0].fromBufferAttribute(uvAttribute, face[0]);\n      uvs[1].fromBufferAttribute(uvAttribute, face[1]);\n      uvs[2].fromBufferAttribute(uvAttribute, face[2]);\n      processFace(face, uvs, i / 3);\n    }\n  }\n  return canvas;\n  function processFace(face2, uvs2, index2) {\n    ctx.beginPath();\n    a.set(0, 0);\n    for (let j = 0, jl = uvs2.length; j < jl; j++) {\n      const uv = uvs2[j];\n      a.x += uv.x;\n      a.y += uv.y;\n      if (j === 0) {\n        ctx.moveTo(uv.x * (width - 2) + 0.5, (1 - uv.y) * (height - 2) + 0.5);\n      } else {\n        ctx.lineTo(uv.x * (width - 2) + 0.5, (1 - uv.y) * (height - 2) + 0.5);\n      }\n    }\n    ctx.closePath();\n    ctx.stroke();\n    a.divideScalar(uvs2.length);\n    ctx.font = \"18px Arial\";\n    ctx.fillStyle = \"rgb( 63, 63, 63 )\";\n    ctx.fillText(index2, a.x * width, (1 - a.y) * height);\n    if (a.x > 0.95) {\n      ctx.fillText(index2, a.x % 1 * width, (1 - a.y) * height);\n    }\n    ctx.font = \"12px Arial\";\n    ctx.fillStyle = \"rgb( 191, 191, 191 )\";\n    for (let j = 0, jl = uvs2.length; j < jl; j++) {\n      const uv = uvs2[j];\n      b.addVectors(a, uv).divideScalar(2);\n      const vnum = face2[j];\n      ctx.fillText(abc[j] + vnum, b.x * width, (1 - b.y) * height);\n      if (b.x > 0.95) {\n        ctx.fillText(abc[j] + vnum, b.x % 1 * width, (1 - b.y) * height);\n      }\n    }\n  }\n}\nexport {\n  UVsDebug\n};\n//# sourceMappingURL=UVsDebug.js.map\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,QAAQA,CAACC,QAAQ,EAAEC,IAAI,GAAG,IAAI,EAAE;EACvC,MAAMC,GAAG,GAAG,KAAK;EACjB,MAAMC,CAAC,GAAG,IAAIL,OAAO,CAAC,CAAC;EACvB,MAAMM,CAAC,GAAG,IAAIN,OAAO,CAAC,CAAC;EACvB,MAAMO,GAAG,GAAG,CAAC,IAAIP,OAAO,CAAC,CAAC,EAAE,IAAIA,OAAO,CAAC,CAAC,EAAE,IAAIA,OAAO,CAAC,CAAC,CAAC;EACzD,MAAMQ,IAAI,GAAG,EAAE;EACf,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EAC/C,MAAMC,KAAK,GAAGT,IAAI;EAClB,MAAMU,MAAM,GAAGV,IAAI;EACnBM,MAAM,CAACG,KAAK,GAAGA,KAAK;EACpBH,MAAM,CAACI,MAAM,GAAGA,MAAM;EACtB,MAAMC,GAAG,GAAGL,MAAM,CAACM,UAAU,CAAC,IAAI,CAAC;EACnCD,GAAG,CAACE,SAAS,GAAG,CAAC;EACjBF,GAAG,CAACG,WAAW,GAAG,mBAAmB;EACrCH,GAAG,CAACI,SAAS,GAAG,QAAQ;EACxBJ,GAAG,CAACK,SAAS,GAAG,sBAAsB;EACtCL,GAAG,CAACM,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAER,KAAK,EAAEC,MAAM,CAAC;EACjC,MAAMQ,KAAK,GAAGnB,QAAQ,CAACmB,KAAK;EAC5B,MAAMC,WAAW,GAAGpB,QAAQ,CAACqB,UAAU,CAACC,EAAE;EAC1C,IAAIH,KAAK,EAAE;IACT,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGL,KAAK,CAACM,KAAK,EAAEF,CAAC,GAAGC,EAAE,EAAED,CAAC,IAAI,CAAC,EAAE;MAChDjB,IAAI,CAAC,CAAC,CAAC,GAAGa,KAAK,CAACO,IAAI,CAACH,CAAC,CAAC;MACvBjB,IAAI,CAAC,CAAC,CAAC,GAAGa,KAAK,CAACO,IAAI,CAACH,CAAC,GAAG,CAAC,CAAC;MAC3BjB,IAAI,CAAC,CAAC,CAAC,GAAGa,KAAK,CAACO,IAAI,CAACH,CAAC,GAAG,CAAC,CAAC;MAC3BlB,GAAG,CAAC,CAAC,CAAC,CAACsB,mBAAmB,CAACP,WAAW,EAAEd,IAAI,CAAC,CAAC,CAAC,CAAC;MAChDD,GAAG,CAAC,CAAC,CAAC,CAACsB,mBAAmB,CAACP,WAAW,EAAEd,IAAI,CAAC,CAAC,CAAC,CAAC;MAChDD,GAAG,CAAC,CAAC,CAAC,CAACsB,mBAAmB,CAACP,WAAW,EAAEd,IAAI,CAAC,CAAC,CAAC,CAAC;MAChDsB,WAAW,CAACtB,IAAI,EAAED,GAAG,EAAEkB,CAAC,GAAG,CAAC,CAAC;IAC/B;EACF,CAAC,MAAM;IACL,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGJ,WAAW,CAACK,KAAK,EAAEF,CAAC,GAAGC,EAAE,EAAED,CAAC,IAAI,CAAC,EAAE;MACtDjB,IAAI,CAAC,CAAC,CAAC,GAAGiB,CAAC;MACXjB,IAAI,CAAC,CAAC,CAAC,GAAGiB,CAAC,GAAG,CAAC;MACfjB,IAAI,CAAC,CAAC,CAAC,GAAGiB,CAAC,GAAG,CAAC;MACflB,GAAG,CAAC,CAAC,CAAC,CAACsB,mBAAmB,CAACP,WAAW,EAAEd,IAAI,CAAC,CAAC,CAAC,CAAC;MAChDD,GAAG,CAAC,CAAC,CAAC,CAACsB,mBAAmB,CAACP,WAAW,EAAEd,IAAI,CAAC,CAAC,CAAC,CAAC;MAChDD,GAAG,CAAC,CAAC,CAAC,CAACsB,mBAAmB,CAACP,WAAW,EAAEd,IAAI,CAAC,CAAC,CAAC,CAAC;MAChDsB,WAAW,CAACtB,IAAI,EAAED,GAAG,EAAEkB,CAAC,GAAG,CAAC,CAAC;IAC/B;EACF;EACA,OAAOhB,MAAM;EACb,SAASqB,WAAWA,CAACC,KAAK,EAAEC,IAAI,EAAEC,MAAM,EAAE;IACxCnB,GAAG,CAACoB,SAAS,CAAC,CAAC;IACf7B,CAAC,CAAC8B,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IACX,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGL,IAAI,CAACM,MAAM,EAAEF,CAAC,GAAGC,EAAE,EAAED,CAAC,EAAE,EAAE;MAC7C,MAAMZ,EAAE,GAAGQ,IAAI,CAACI,CAAC,CAAC;MAClB/B,CAAC,CAACkC,CAAC,IAAIf,EAAE,CAACe,CAAC;MACXlC,CAAC,CAACmC,CAAC,IAAIhB,EAAE,CAACgB,CAAC;MACX,IAAIJ,CAAC,KAAK,CAAC,EAAE;QACXtB,GAAG,CAAC2B,MAAM,CAACjB,EAAE,CAACe,CAAC,IAAI3B,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,GAAGY,EAAE,CAACgB,CAAC,KAAK3B,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;MACvE,CAAC,MAAM;QACLC,GAAG,CAAC4B,MAAM,CAAClB,EAAE,CAACe,CAAC,IAAI3B,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,GAAGY,EAAE,CAACgB,CAAC,KAAK3B,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;MACvE;IACF;IACAC,GAAG,CAAC6B,SAAS,CAAC,CAAC;IACf7B,GAAG,CAAC8B,MAAM,CAAC,CAAC;IACZvC,CAAC,CAACwC,YAAY,CAACb,IAAI,CAACM,MAAM,CAAC;IAC3BxB,GAAG,CAACgC,IAAI,GAAG,YAAY;IACvBhC,GAAG,CAACK,SAAS,GAAG,mBAAmB;IACnCL,GAAG,CAACiC,QAAQ,CAACd,MAAM,EAAE5B,CAAC,CAACkC,CAAC,GAAG3B,KAAK,EAAE,CAAC,CAAC,GAAGP,CAAC,CAACmC,CAAC,IAAI3B,MAAM,CAAC;IACrD,IAAIR,CAAC,CAACkC,CAAC,GAAG,IAAI,EAAE;MACdzB,GAAG,CAACiC,QAAQ,CAACd,MAAM,EAAE5B,CAAC,CAACkC,CAAC,GAAG,CAAC,GAAG3B,KAAK,EAAE,CAAC,CAAC,GAAGP,CAAC,CAACmC,CAAC,IAAI3B,MAAM,CAAC;IAC3D;IACAC,GAAG,CAACgC,IAAI,GAAG,YAAY;IACvBhC,GAAG,CAACK,SAAS,GAAG,sBAAsB;IACtC,KAAK,IAAIiB,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGL,IAAI,CAACM,MAAM,EAAEF,CAAC,GAAGC,EAAE,EAAED,CAAC,EAAE,EAAE;MAC7C,MAAMZ,EAAE,GAAGQ,IAAI,CAACI,CAAC,CAAC;MAClB9B,CAAC,CAAC0C,UAAU,CAAC3C,CAAC,EAAEmB,EAAE,CAAC,CAACqB,YAAY,CAAC,CAAC,CAAC;MACnC,MAAMI,IAAI,GAAGlB,KAAK,CAACK,CAAC,CAAC;MACrBtB,GAAG,CAACiC,QAAQ,CAAC3C,GAAG,CAACgC,CAAC,CAAC,GAAGa,IAAI,EAAE3C,CAAC,CAACiC,CAAC,GAAG3B,KAAK,EAAE,CAAC,CAAC,GAAGN,CAAC,CAACkC,CAAC,IAAI3B,MAAM,CAAC;MAC5D,IAAIP,CAAC,CAACiC,CAAC,GAAG,IAAI,EAAE;QACdzB,GAAG,CAACiC,QAAQ,CAAC3C,GAAG,CAACgC,CAAC,CAAC,GAAGa,IAAI,EAAE3C,CAAC,CAACiC,CAAC,GAAG,CAAC,GAAG3B,KAAK,EAAE,CAAC,CAAC,GAAGN,CAAC,CAACkC,CAAC,IAAI3B,MAAM,CAAC;MAClE;IACF;EACF;AACF;AACA,SACEZ,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}