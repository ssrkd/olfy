{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srk\\\\Downloads\\\\arq_phantom_clone\\\\src\\\\components\\\\Carousel3D.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst videos = [{\n  url: '/assets/video1.mp4',\n  title: 'Perfume 1'\n}, {\n  url: '/assets/video2.mp4',\n  title: 'Perfume 2'\n}, {\n  url: '/assets/video3.mp4',\n  title: 'Perfume 3'\n}, {\n  url: '/assets/video4.mp4',\n  title: 'Perfume 4'\n}, {\n  url: '/assets/video5.mp4',\n  title: 'Perfume 5'\n}];\nconst VideoCarousel = () => {\n  _s();\n  const mountRef = useRef();\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 3, 30);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    mountRef.current.appendChild(renderer.domElement);\n    const radius = 20;\n    videos.forEach((video, index) => {\n      const angle = index / videos.length * Math.PI * 2;\n      const x = Math.cos(angle) * radius;\n      const z = Math.sin(angle) * radius;\n      const videoEl = document.createElement('video');\n      videoEl.src = video.url;\n      videoEl.loop = true;\n      videoEl.muted = true;\n      videoEl.play();\n      videoEl.crossOrigin = 'anonymous';\n      videoEl.playsInline = true;\n      const texture = new THREE.VideoTexture(videoEl);\n      const geometry = new THREE.PlaneGeometry(12, 7);\n      const material = new THREE.MeshBasicMaterial({\n        map: texture,\n        side: THREE.DoubleSide\n      });\n      const screen = new THREE.Mesh(geometry, material);\n      screen.position.set(x, 3, z);\n      screen.lookAt(0, 3, 0);\n      scene.add(screen);\n    });\n\n    // Ambient light\n    const light = new THREE.AmbientLight(0xffffff, 1);\n    scene.add(light);\n\n    // Background\n    scene.background = new THREE.Color('#111');\n    const animate = () => {\n      requestAnimationFrame(animate);\n      scene.rotation.y += 0.001;\n      renderer.render(scene, camera);\n    };\n    animate();\n    const onResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('resize', onResize);\n      mountRef.current.removeChild(renderer.domElement);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      width: '100vw',\n      height: '100vh'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 10\n  }, this);\n};\n_s(VideoCarousel, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = VideoCarousel;\nexport default VideoCarousel;\nvar _c;\n$RefreshReg$(_c, \"VideoCarousel\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","jsxDEV","_jsxDEV","videos","url","title","VideoCarousel","_s","mountRef","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","renderer","WebGLRenderer","antialias","setSize","current","appendChild","domElement","radius","forEach","video","index","angle","length","Math","PI","x","cos","z","sin","videoEl","document","createElement","src","loop","muted","play","crossOrigin","playsInline","texture","VideoTexture","geometry","PlaneGeometry","material","MeshBasicMaterial","map","side","DoubleSide","screen","Mesh","lookAt","add","light","AmbientLight","background","Color","animate","requestAnimationFrame","rotation","y","render","onResize","aspect","updateProjectionMatrix","addEventListener","removeEventListener","removeChild","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/srk/Downloads/arq_phantom_clone/src/components/Carousel3D.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\n\r\nconst videos = [\r\n  { url: '/assets/video1.mp4', title: 'Perfume 1' },\r\n  { url: '/assets/video2.mp4', title: 'Perfume 2' },\r\n  { url: '/assets/video3.mp4', title: 'Perfume 3' },\r\n  { url: '/assets/video4.mp4', title: 'Perfume 4' },\r\n  { url: '/assets/video5.mp4', title: 'Perfume 5' },\r\n];\r\n\r\nconst VideoCarousel = () => {\r\n  const mountRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(\r\n      60,\r\n      window.innerWidth / window.innerHeight,\r\n      0.1,\r\n      1000\r\n    );\r\n    camera.position.set(0, 3, 30);\r\n\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    mountRef.current.appendChild(renderer.domElement);\r\n\r\n    const radius = 20;\r\n\r\n    videos.forEach((video, index) => {\r\n      const angle = (index / videos.length) * Math.PI * 2;\r\n      const x = Math.cos(angle) * radius;\r\n      const z = Math.sin(angle) * radius;\r\n\r\n      const videoEl = document.createElement('video');\r\n      videoEl.src = video.url;\r\n      videoEl.loop = true;\r\n      videoEl.muted = true;\r\n      videoEl.play();\r\n      videoEl.crossOrigin = 'anonymous';\r\n      videoEl.playsInline = true;\r\n\r\n      const texture = new THREE.VideoTexture(videoEl);\r\n      const geometry = new THREE.PlaneGeometry(12, 7);\r\n      const material = new THREE.MeshBasicMaterial({ map: texture, side: THREE.DoubleSide });\r\n\r\n      const screen = new THREE.Mesh(geometry, material);\r\n      screen.position.set(x, 3, z);\r\n      screen.lookAt(0, 3, 0);\r\n      scene.add(screen);\r\n    });\r\n\r\n    // Ambient light\r\n    const light = new THREE.AmbientLight(0xffffff, 1);\r\n    scene.add(light);\r\n\r\n    // Background\r\n    scene.background = new THREE.Color('#111');\r\n\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      scene.rotation.y += 0.001;\r\n      renderer.render(scene, camera);\r\n    };\r\n    animate();\r\n\r\n    const onResize = () => {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n    };\r\n    window.addEventListener('resize', onResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', onResize);\r\n      mountRef.current.removeChild(renderer.domElement);\r\n    };\r\n  }, []);\r\n\r\n  return <div ref={mountRef} style={{ width: '100vw', height: '100vh' }} />;\r\n};\r\n\r\nexport default VideoCarousel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}